{"version":3,"file":"1.app.js","sources":["webpack:///app/components/containers/activityChatPanel.jsx","webpack:///app/components/containers/activityDetailBody.jsx","webpack:///app/components/containers/activityFeed.jsx","webpack:///app/components/containers/chatnavbody.jsx","webpack:///app/components/containers/chatwindow.jsx","webpack:///app/components/containers/createActivityFeed.jsx","webpack:///app/components/containers/index.js","webpack:///app/components/containers/landingbackground.jsx","webpack:///app/components/containers/landingsignin.jsx","webpack:///app/components/containers/landingsignup.jsx","webpack:///app/components/containers/navbar.jsx","webpack:///app/components/containers/notificationBody.jsx","webpack:///app/components/containers/postFeed.jsx","webpack:///app/components/containers/profilePersonalInfo.jsx","webpack:///app/components/containers/profileRecentActivityFeed.jsx","webpack:///app/components/containers/profileRecentPostFeed.jsx","webpack:///app/components/containers/searchEntry.jsx","webpack:///app/components/containers/settingprofileinfo.jsx","webpack:///app/components/containers/settingsysteminfo.jsx","webpack:///app/components/presentations/activityCommentThread.jsx","webpack:///app/components/presentations/activityDetailCommentEntry.jsx","webpack:///app/components/presentations/activityFeedItem.jsx","webpack:///app/components/presentations/chatentry.jsx","webpack:///app/components/presentations/chatnavchatitem.jsx","webpack:///app/components/presentations/index.js","webpack:///app/components/presentations/postCommentEntry.jsx","webpack:///app/components/presentations/postCommentThread.jsx","webpack:///app/components/presentations/postEntry.jsx","webpack:///app/components/presentations/postFeedItem.jsx"],"sourcesContent":["import React from 'React';\nimport Link from 'react-router-dom/Link';\nimport { socket } from '../../utils/credentials';\nimport { getActivityMessages } from '../../utils';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n\n// let debug = require('react-debug');\nlet moment = require('moment');\n\nmoment.updateLocale('en', {\n    longDateFormat: {\n        LT: \"h:mm:ss A\"\n    }\n});\n\nexport default class ActivityChatPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            msgs: [],\n            moreToLoad: true,\n            numberOfUsers: 0,\n        }\n    }\n\n    onUserJoined = (data) => {\n        let joinMessage = {\n            user: data.user,\n            type: \"joined\"\n        }\n\n        let newMsgs = this.state.msgs;\n        newMsgs.push(joinMessage);\n\n        this.setState({\n            numberOfUsers: data.numberOfUsers,\n            msgs: newMsgs\n        }, () => {\n            this.refs.activityChatWindow.scrollTop = this.refs.activityChatWindow.scrollHeight;\n        });\n    }\n\n    onUserLeft = (data) => {\n        let leftMessage = {\n            user: data.user,\n            type: \"left\"\n        }\n\n        let newMsgs = this.state.msgs;\n        newMsgs.push(leftMessage);\n\n        this.setState({\n            numberOfUsers: data.numberOfUsers,\n            msgs: newMsgs\n        }, () => {\n            this.refs.activityChatWindow.scrollTop = this.refs.activityChatWindow.scrollHeight;\n        });\n    }\n\n    onNewActivityChatMessage = (data) => {\n        var newMsgs = Array.from(this.state.msgs);\n        newMsgs.push(data);\n        this.setState({\n            msgs: newMsgs\n        }, () => {\n            this.refs.activityChatWindow.scrollTop = this.refs.activityChatWindow.scrollHeight;\n        });\n    }\n\n\n    componentDidMount() {\n        socket.on('new activity chat message', this.onNewActivityChatMessage);\n        socket.on('user joined', this.onUserJoined);\n        socket.on('user left', this.onUserLeft);\n\n        //join room\n        socket.emit('join activity chat room', {\n            activityId: this.props.id,\n            user: this.props.currentUser\n        });\n\n        this.getMessages(true);\n    }\n\n    componentWillUnmount() {\n        //leave room\n        socket.emit('leave activity chat room', {\n            activityId: this.props.id,\n            user: this.props.currentUser\n        });\n\n        //remove socket io listener\n        socket.removeListener('new activity chat message', this.onNewActivityChatMessage);\n        socket.removeListener('user joined', this.onUserJoined);\n        socket.removeListener('user left', this.onUserLeft);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ text: emojione.shortnameToUnicode(e.target.value) });\n    }\n\n    handleSendMsg(e) {\n        e.preventDefault();\n        if (e.key === \"Enter\" || e.button === 0) {\n            if (this.state.text.trim() !== \"\") {\n                this.sendMessages();\n                this.setState({ text: \"\" });\n            }\n        }\n    }\n\n    getMessages(initialLoad) {\n        let time = this.state.msgs.length > 0 ? this.state.msgs[0].postDate : (new Date()).getTime();\n        getActivityMessages(this.props.id, time)\n            .then(messages => {\n                let msgs = messages.data;\n                let newMsgs = msgs.concat(initialLoad ? [] : this.state.msgs);\n                this.setState({\n                    msgs: newMsgs,\n                    moreToLoad: msgs.length > 0\n                }, () => {\n                    if (initialLoad)\n                        this.refs.activityChatWindow.scrollTop = this.refs.activityChatWindow.scrollHeight;\n                });\n            });\n    }\n\n    sendMessages() {\n        let data = {\n            activityId: this.props.id,\n            author: this.props.currentUser,\n            text: this.state.text.trim()\n        }\n        socket.emit('activity chat message', data);\n    }\n\n    render() {\n        return (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <div className=\"container-fluid\">\n                        <h4 style={{ 'color': 'grey' }}>Chat ({this.state.numberOfUsers})</h4>\n                    </div>\n                </div>\n                <div className=\"panel-body\" ref=\"activityChatWindow\" style={{ height: '450px', overflowY: 'scroll' }}>\n                    <Button onClick={() => {\n                        this.getMessages()\n                    }} fullWidth disabled={!this.state.moreToLoad || this.state.msgs.length === 0}>\n                        {this.state.moreToLoad ? \"Load more messages\" : \"nothing more to load\"}\n                    </Button>\n                    <List>\n                        {\n                            this.state.msgs.map((msg, i) => {\n                                if (msg.type !== undefined) {\n                                    return <ListItem key={i}>\n                                        <Link to={'/profile/' + msg.user._id}>\n                                            <ListItemAvatar>\n                                                <Avatar src={msg.user.avatar} />\n                                            </ListItemAvatar>\n                                        </Link>\n                                        <ListItemText primary={\n                                            <span>\n                                                <strong>{msg.user.fullname}</strong>\n                                                <span style={{ marginLeft: '8px' }}>{msg.type}</span>\n                                            </span>\n                                        } />\n                                    </ListItem>\n                                }\n                                //default time format\n                                var time = moment(msg.postDate).calendar();\n                                //if less than 1 hour, use relative time\n                                if ((new Date().getTime()) - msg.postDate <= 3600000)\n                                    time = moment(msg.postDate).fromNow();\n\n                                return <ListItem key={i} style={{\n                                    alignItems: \"flex-start\",\n                                    marginBottom: '10px'\n                                }}>\n                                    <Link to={'/profile/' + msg.author._id}>\n                                        <ListItemAvatar>\n                                            <Avatar src={msg.author.avatar} />\n                                        </ListItemAvatar>\n                                    </Link>\n                                    <ListItemText primary={\n                                        <span>\n                                            {msg.author.fullname}\n                                            <span style={{ fontSize: '12px', marginLeft: '15px' }}>{time}</span>\n                                        </span>\n                                    }\n                                        secondary={msg.text} />\n                                </ListItem>\n                            })\n                        }\n                    </List>\n                </div>\n                <div className=\"panel-footer\" style={{ height: '150px' }}>\n                    <div className=\"row\">\n                        <div className=\"col-md-10 col-xs-10 col-sm-10\">\n                            <textarea id=\"chattext\" className=\"form-control msg nohover non-active\" name=\"name\" rows=\"5\" value={this.state.text}\n                                onChange={(e) => this.handleChange(e)}\n                                onFocus={(e) => this.handleChange(e)} cols=\"40\" placeholder=\"please type text\"\n                                onKeyUp={(e) => this.handleSendMsg(e)}></textarea>\n                        </div>\n                        <div className=\"col-md-2 col-sm-2 col-xs-2 send\">\n                            <button type=\"button\" className=\"btn btn-default btn-blue-grey pull-right\" name=\"button\"\n                                onClick={(e) => this.handleSendMsg(e)}>Send</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'React';\nimport Link from 'react-router-dom/Link';\nimport { ActivityCommentThread } from '../presentations';\nimport { ActivityChatPanel } from '.';\nimport {\n  getActivityDetail, postActivityDetailComment, likeActivity,\n  unLikeActivity, hideElement, didUserLike, getActivityItemCommments\n} from '../../utils';\nimport { socket } from '../../utils/credentials';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Icon from '@material-ui/core/Icon';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nvar moment = require('moment');\n// var debug = require('react-debug');\n\nexport default class ActivityDetailBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activity: {},\n      comments: [],\n      ishost: false,\n      joined: false,\n      success: false,\n      loadMore: true,\n      snackOpen: false,\n      snackbarContent: \"\",\n      snackbarColor: 'green',\n      snackbarType: 'success',\n      inviteDialogOpen: false,\n      usersDialogOpen: false,\n      invitedFriendList: [],\n\n    };\n  }\n\n  handleLikeClick(e) {\n    e.preventDefault();\n\n    if (e.button === 0) {\n      var handler = (likeCounter) => {\n        var activity = this.state.activity;\n        activity.likeCounter = likeCounter;\n        this.setState(\n          { activity: activity }\n        );\n      };\n\n      if (!didUserLike(this.state.activity.likeCounter, this.props.currentUser)) {\n        likeActivity(this.state.activity._id, this.props.currentUser)\n          .then(response => { handler(response.data) })\n      }\n      else {\n        unLikeActivity(this.state.activity._id, this.props.currentUser)\n          .then(response => handler(response.data));\n      }\n    }\n  }\n\n  handlePostComment(comment) {\n    postActivityDetailComment(this.state.activity._id, this.props.currentUser, comment)\n      .then(response => {\n        this.setState({\n          activity: response.data\n        }, () => {\n          this.loadComments(true);\n        });\n      });\n  }\n\n  getData() {\n    getActivityDetail(this.props.id)\n      .then(response => {\n        let activitydata = response.data;\n        this.setState({ activity: activitydata }, () => {\n          this.setState({\n            ishost: this.isHost(),\n            joined: this.checkJoined()\n          });\n        });\n      })\n  }\n\n  isHost() {\n    return this.props.currentUser === this.state.activity.author._id;\n  }\n\n\n  checkJoined() {\n    if (this.state.activity.participants === undefined) {\n      return false;\n    }\n    return this.state.activity.participants.filter((user) => { return user._id == this.props.currentUser }).length > 0;\n  }\n\n  handleRequestJoin(e) {\n    e.preventDefault();\n    socket.emit('activity notification', {\n      sender: this.props.currentUser,\n      target: this.state.activity.author._id,\n      activityId: this.state.activity._id,\n      type: 'request'\n    });\n  }\n\n  checkFriendsOfUser(friendId) {\n    return this.props.currentUser === friendId || this.props.friends.filter((friend) => {\n      return friend._id === friendId\n    }).length > 0;\n  }\n\n  handleAddFriend(friendId) {\n    socket.emit('friend notification', {\n      sender: this.props.currentUser,\n      target: friendId\n    });\n  }\n\n  handleRequestClose = () => {\n    this.setState({\n      snackOpen: false,\n    });\n  };\n\n  loadComments(justPosted) {\n    let date = justPosted || this.state.comments.length == 0 ? (new Date()).getTime() :\n      this.state.comments[this.state.comments.length - 1].postDate;\n\n    getActivityItemCommments(this.props.id, date)\n      .then(response => {\n        let load = response.data.length > 0;\n        let activityComments = justPosted ? response.data : this.state.comments.concat(response.data);\n        this.setState({\n          loadMore: load,\n          comments: activityComments\n        })\n      })\n  }\n\n  handleError = (res) => {\n    let err = res.error;\n    let message = err ? 'failed to send request!' : 'request sent!';\n    let backgroundColor = err ? '#f44336' : '#4CAF50';\n    this.setState({\n      snackOpen: true,\n      snackbarColor: backgroundColor,\n      snackbarContent: message,\n      snackbarType: err ? 'error' : 'success'\n    });\n  }\n\n\n  componentDidMount() {\n    this.getData();\n    socket.on('activity notification', this.handleError);\n    socket.on('friend notification', this.handleError);\n  }\n\n  componentWillUnmount = () => {\n    socket.removeListener('activity notification', this.handleError);\n    socket.removeListener('friend notification', this.handleError);\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      inviteDialogOpen: false,\n      invitedFriendList: []\n    })\n  }\n\n  handleDialogOpen = () => {\n    this.setState({\n      inviteDialogOpen: true\n    })\n  }\n\n  handleUsersDialogClose = () => {\n    this.setState({\n      usersDialogOpen: false\n    })\n  }\n\n  handleUsersDialogOpen = () => {\n    this.setState({\n      usersDialogOpen: true\n    })\n  }\n\n  handleInvite(value) {\n    var newFriendList = Array.from(this.state.invitedFriendList);\n    if (newFriendList.indexOf(value) == -1)\n      newFriendList.push(value);\n    else newFriendList.splice(newFriendList.indexOf(value), 1);\n    this.setState({\n      invitedFriendList: newFriendList\n    })\n  }\n\n  handleSendInvitation() {\n    this.state.invitedFriendList.map((targetid) => {\n      socket.emit('activity notification', {\n        sender: this.props.currentUser,\n        target: targetid,\n        activityId: this.props.id,\n        type: 'invite'\n      });\n    });\n    this.handleDialogClose();\n  }\n\n\n  render() {\n    var buttonText;\n    if (this.state.ishost && !this.state.joined) {\n      buttonText = \"You are the host\"\n    }\n    else if (!this.state.ishost && this.state.joined) {\n      buttonText = \"You have joined\"\n    }\n    else {\n      buttonText = \"Click to sign up\"\n    }\n    var data = this.state.activity\n    var contents;\n    var text;\n    var name;\n    var authorid;\n    switch (data.type) {\n      case \"Event\":\n        contents = data.contents;\n        name = this.state.activity.author.fullname;\n        authorid = this.state.activity.author._id;\n        text = contents.text.split(\"\\n\").map((line, i) => {\n          return (\n            <p key={\"line\" + i}>{line}</p>\n          );\n        })\n        break;\n      case \"Entertainment\":\n        contents = data.contents;\n        name = this.state.activity.author.fullname;\n        authorid = this.state.activity.author._id;\n        text = contents.text.split(\"\\n\").map((line, i) => {\n          return (\n            <p key={\"line\" + i}>{line}</p>\n          );\n        })\n        break;\n      case \"Study\":\n        contents = data.contents;\n        name = this.state.activity.author.fullname;\n        authorid = this.state.activity.author._id;\n        text = contents.text.split(\"\\n\").map((line, i) => {\n          return (\n            <p key={\"line\" + i}>{line}</p>\n          );\n        })\n        break;\n      default:\n        text = null;\n        name = null;\n    }\n\n    return (\n      <div className=\"activityDetail\">\n        <Dialog\n          open={this.state.inviteDialogOpen}\n          onClose={this.handleDialogClose}>\n          <DialogTitle>{\"Invite your friends\"}</DialogTitle>\n          <DialogContent style={{ width: '400px' }}>\n            <List>\n              {this.props.friends.map((friend, i) => {\n                return <ListItem key={i}>\n                  <ListItemAvatar>\n                    <Avatar src={friend.avatar} />\n                  </ListItemAvatar>\n                  <ListItemText primary={friend.fullname} />\n                  <ListItemSecondaryAction>\n                    {this.state.activity.participants !== undefined &&\n                      this.state.activity.participants.filter((participant) => {\n                        return participant._id === friend._id\n                      }).length === 0 ?\n                      <Checkbox\n                        onChange={() => this.handleInvite(friend._id)}\n                        checked={this.state.invitedFriendList.indexOf(friend._id) !== -1}\n                      /> :\n                      <Checkbox\n                        disabled\n                        checked={true}\n                      />\n                    }\n                  </ListItemSecondaryAction>\n                </ListItem>\n              })}\n            </List>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose}>\n              Cancel\n            </Button>\n            <Button onClick={() => this.handleSendInvitation()} color=\"primary\" autoFocus>\n              Confirm\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          autoHideDuration={4000}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={this.state.snackOpen}\n          onClose={this.handleRequestClose}>\n          <SnackbarContent\n            style={{\n              backgroundColor: [this.state.snackbarColor]\n            }}\n            message={\n              <span style={{\n                display: 'flex',\n                alignItems: 'center'\n              }}>\n                {this.state.snackbarType === 'success' ?\n                  <CheckCircleIcon style={{ fontSize: '20px', marginRight: '10px' }} /> :\n                  <ErrorIcon style={{ fontSize: '20px', marginRight: '10px' }} />}\n                {this.state.snackbarContent}\n              </span>\n            }\n          />\n        </Snackbar>\n        <Dialog\n          open={this.state.usersDialogOpen}\n          onClose={this.handleUsersDialogClose}>\n          <DialogTitle>{\"Joined Users\"}</DialogTitle>\n          <DialogContent style={{ width: '600px' }}>\n            <List>\n              {this.state.activity.participants === undefined ||\n                this.state.activity.participants.length === 0 ? \"No one has signed up yet!\" :\n                this.state.activity.participants.map((p, i) => {\n                  var rightButton;\n                  if (this.checkFriendsOfUser(p._id)) {\n                    rightButton = <IconButton disabled>\n                      <Icon className=\"fas fa-check\" />\n                    </IconButton>\n                  }\n                  else {\n                    rightButton = <IconButton onClick={() => this.handleAddFriend(p._id)}>\n                      <Icon className=\"fas fa-plus\" />\n                    </IconButton>\n                  }\n                  return <ListItem key={i} style={{ padding: '20px' }}>\n                    <Link to={'/profile/' + p._id}>\n                      <Avatar src={p.avatar} />\n                    </Link>\n                    <ListItemText primary={p.fullname}\n                      secondary={p.description} />\n                    <ListItemSecondaryAction>\n                      {rightButton}\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                })}\n            </List>\n          </DialogContent>\n        </Dialog>\n        <div className=\"adbackground\" style={{ \"backgroundImage\": \"url(\" + this.state.activity.img + \")\" }}>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-10 col-md-12 col-sm-12 col-xs-12 col-lg-offset-1\">\n              <div className=\"panel panel-default body-title\">\n                <div className=\"panel-heading\">\n\n                  <div className=\"row\">\n                    <div className=\"col-md-8\" >\n                      <h2 style={{ 'paddingLeft': '15px' }}>{this.state.activity.title}</h2>\n\n                      <span className=\"glyphicon glyphicon-time\" style={\n                        { 'paddingRight': '10px', 'paddingLeft': '15px' }\n                      }></span>\n                      {moment(this.state.activity.startTime).format('MMMM Do YYYY, h:mm:ss a')}<br />\n\n                      <span className=\"glyphicon glyphicon-map-marker\"\n                        style={{ 'paddingRight': '10px', 'paddingTop': '5px', 'paddingLeft': '15px' }}>\n                      </span>\n                      {this.state.activity.location}<br />\n                      <span className=\"glyphicon glyphicon-user\"\n                        style={{ 'paddingRight': '10px', 'paddingTop': '5px', 'paddingLeft': '15px' }}>\n                      </span>\n                      <Link to={\"/profile/\" + authorid}>\n                        {name}\n                      </Link>\n                    </div>\n\n                    <div className=\"col-md-4\" style={{ 'paddingTop': '20px' }} >\n                      <div className=\"col-md-12 col-sm-12 col-xs-12 body-title-signed-in\">\n                        {this.state.activity.participants === undefined ? 0 : this.state.activity.participants.length} people <font style={{ 'color': 'grey' }}>joined</font>\n\n                        <font style={{ 'color': '#61B4E4', 'fontSize': '10px', 'paddingLeft': '10px', 'cursor': 'pointer' }}\n                          onClick={this.handleUsersDialogOpen}>View All</font>\n                        <br />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 remain-places\" style={{ 'paddingTop': '25px', textAlign: \"center\" }} >\n                      <div className={\"alert alert-success\" + hideElement(!this.state.success)} role=\"alert\" style={{\n                        marginLeft: '43%',\n                        marginRight: '43%',\n                        paddingTop: '8px',\n                        paddingBottom: '8px',\n                        marginBottom: '7px'\n                      }}><font className={hideElement(!this.state.success)} style={{ fontSize: 13 }}>Request sent!</font></div>\n                      <Button variant=\"outlined\" disabled={this.state.ishost || this.state.joined} onClick={(e) => this.handleRequestJoin(e)}>\n                        {buttonText}\n                      </Button>\n                      {this.state.ishost &&\n                        <Button onClick={this.handleDialogOpen} variant=\"outlined\" color=\"primary\" style={{ marginLeft: '10px' }}>\n                          Invite friends\n                        </Button>}\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-md-12 col-sm-12 col-xs-12 body-title-icon\" style={{ textAlign: \"right\" }}>\n                      <FormControlLabel\n                        control={\n                          <Checkbox onClick={(e) => this.handleLikeClick(e)}\n                            style={{ width: '30px', height: '30px' }}\n                            checked={this.state.activity.likeCounter === undefined ?\n                              false : didUserLike(this.state.activity.likeCounter, this.props.currentUser)}\n                            icon={<Icon style={{ fontSize: '20px' }} className=\"far fa-heart\" />}\n                            checkedIcon={<Icon className=\"fas fa-heart\" style={{ color: 'red', fontSize: '20px' }} />} />\n                        }\n                        label={this.state.activity.likeCounter === undefined ? 0 : this.state.activity.likeCounter.length}\n                      />\n                      <Icon className='fas fa-comments' style={{\n                        fontSize: '20px', width: '25px', marginRight: '8px', verticalAlign: 'middle'\n                      }} />\n                      {this.state.activity.commentsCount}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                  <div className=\"container-fluid body-detail\">\n                    <h4 style={{ 'color': 'grey' }}>Activity Details</h4>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\" style={{ 'paddingTop': '20px' }}>\n                        {text}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <ActivityChatPanel id={this.props.id} currentUser={this.props.currentUser} />\n            </div>\n          </div>\n        </div>\n        <ActivityCommentThread count={this.state.activity.commentsCount}\n          user={this.props.currentUser} avatar={this.props.avatar} onPost={(comment) => this.handlePostComment(comment)}\n          onLoadComments={() => this.loadComments(false)} loadMore={this.state.loadMore}>\n          {this.state.comments.map((comment, i) => {\n            //default time format\n            var commentTime = moment(comment.postDate).calendar();\n            //if less than 24 hours, use relative time\n            if ((new Date().getTime()) - comment.postDate <= 86400000)\n              commentTime = moment(comment.postDate).fromNow();\n            return (\n              <div>\n                <ListItem key={i}>\n                  <ListItemAvatar>\n                    <Link to={'/profile/' + comment.author._id}>\n                      <Avatar src={comment.author.avatar} />\n                    </Link>\n                  </ListItemAvatar>\n                  <ListItemText primary={\n                    <span>\n                      {comment.author.fullname}\n                      <span style={{ fontSize: '12px', marginLeft: '15px' }}>{commentTime}</span>\n                    </span>\n                  }\n                    secondary={comment.text} />\n                </ListItem>\n                <Divider light inset />\n              </div>\n            )\n          })}\n        </ActivityCommentThread>\n      </div>\n    )\n  }\n\n}\n","import React from 'react';\nimport Link from \"react-router-dom/Link\";\nimport { ActivityFeedItem } from '../presentations';\nimport { getAllActivities, isBottom } from '../../utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { socket } from '../../utils/credentials';\n// var debug = require('react-debug');\n\n\nexport default class ActivityFeed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: [],\n            moreToLoad: true,\n            submitted: false,\n            loading: true,\n            new: false\n        }\n    }\n\n    handleLoad(init) {\n        document.removeEventListener('scroll', this.trackScrolling);\n        if (init) {\n            this.setState({\n                new: false,\n                loading: true\n            })\n        } else {\n            this.setState({\n                loading: false,\n            });\n        }\n        var date = init || this.state.contents.length === 0 ? (new Date()).getTime() :\n            this.state.contents[this.state.contents.length - 1].postDate;\n        getAllActivities(date)\n            .then(response => {\n                let activities = response.data;\n                if (activities.length === 0) {\n                    return this.setState({\n                        moreToLoad: false,\n                        loading: false,\n                    })\n                }\n                var newActivities = (init ? [] : this.state.contents).concat(activities);\n                this.setState({\n                    contents: newActivities,\n                    moreToLoad: true,\n                    loading: false,\n                }, () => {\n                    document.addEventListener('scroll', this.trackScrolling);\n                });\n\n            })\n    }\n\n    componentDidMount() {\n        this.handleLoad(true);\n        socket.on('newActivity', this.onNewActivity);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n        socket.removeEventListener('newActivity', this.onNewActivity);\n    }\n\n    onNewActivity = () => {\n        this.setState({\n            new: true\n        });\n    }\n\n    handleNew = () => {\n        this.handleLoad(true);\n        window.scrollTo(0, 0);\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if(JSON.stringify(this.state.contents) !== JSON.stringify(prevState.contents))\n    //         this.getData;\n    // }\n\n\n    trackScrolling = () => {\n        let wrappedElement = document.getElementById('activityFeed');\n        if (wrappedElement !== null && isBottom(wrappedElement)) {\n            this.handleLoad(false);\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"activityFeed\">\n                {this.state.new &&\n                    <Button variant=\"extendedFab\" color=\"primary\" style={{\n                        position: 'fixed',\n                        zIndex: 100,\n                        left: '45%'\n                    }} onClick={this.handleNew}>\n                        <Icon style={{ marginRight: '5px' }} className=\"fas fa-arrow-alt-circle-up\" />\n                        new activities\n                    </Button>\n                }\n\n                {\n                    this.state.loading && <div style={{ textAlign: 'center', color: '#61B4E4', marginTop: '30px', marginBottom: '30px' }}>\n                        <CircularProgress size={30} />\n                    </div>\n                }\n                {\n                    !this.state.loading && this.state.contents.length === 0 ?\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            No one has posted any activities yet.\n                            Post your first activity\n                        <Link to=\"/createActivity\">\n                                <strong>\n                                    here\n                            </strong>\n                            </Link>\n                        </div>\n                        : this.state.contents.map((activityFeedItem) => {\n                            return <ActivityFeedItem key={activityFeedItem._id} data={activityFeedItem} />\n                        })\n                }\n                {\n                    !this.state.moreToLoad &&\n                    <div style={{ marginTop: '30px', marginBottom: '30px', textAlign: 'center' }}>\n                        Nothing more to load\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import React from 'React';\nimport { ChatNavChatItem } from '../presentations';\nimport List from '@material-ui/core/List';\n\n// let debug = require('react-debug');\n\nexport default class ChatNavBody extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = props;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n            this.setState(this.props);\n        }\n    }\n\n\n    getMessageData(friendId) {\n        let sessions = this.props.sessions;\n        let filterResult = Object.keys(sessions).filter((sessionId) => {\n            return sessions[sessionId].users.indexOf(friendId) !== -1;\n        })\n\n        if (filterResult.length === 0) {\n            return {\n                lastmessage: '',\n                unread: {}\n            };\n        }\n        else {\n            return {\n                lastmessage: sessions[filterResult[0]].lastmessage,\n                unread: sessions[filterResult[0]].unread\n            }\n        }\n    }\n\n    render() {\n        var alert =\n            (<div className=\"alert alert-info\" role=\"alert\">\n                You don't have any friends yet.\n            </div>);\n\n        return (\n            <List style={{ backgroundColor: '#FDFDFD', height: '100%', overflowY: 'auto', width: '300px' }}>\n                {\n                    this.state.userData !== undefined &&\n                    (this.state.userData.friends === undefined || this.state.userData.friends.length === 0 ? alert :\n                        this.state.userData.friends.map((friend) => {\n                            return <ChatNavChatItem\n                                key={friend._id}\n                                data={friend}\n                                activeFriend={this.props.activeFriend}\n                                currentUser={this.state.userData._id}\n                                switchUser={this.props.switchUser}\n                                messageData={this.getMessageData(friend._id)} />\n                        }))\n                }\n            </List>\n        )\n    }\n\n}\n","import React from 'React';\nimport Link from 'react-router-dom/Link';\nimport { ChatEntry } from '../presentations';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nlet moment = require('moment');\nlet swal = require('sweetalert');\n// let debug = require('react-debug');\n\nmoment.updateLocale('en', {\n    longDateFormat: {\n        LT: \"h:mm:ss A\"\n    }\n});\n\n\nexport default class ChatWindow extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            targetUser: props.target,\n            message: props.message,\n            open: false,\n            selectedImgs: [],\n            currentIdx: 0,\n            loading: true,\n            loadingMore: false,\n            loadingMessage: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            targetUser: this.props.target,\n            message: this.props.message\n        }, () => {\n            this.refs.chatwindow.scrollTop = this.refs.chatwindow.scrollHeight;\n        });\n    }\n\n    handlePostMessage(text, imgs) {\n        if (this.state.loadingMessage)\n            return;\n        this.setState({\n            loadingMessage: true\n        }, () => {\n            setTimeout(() => {\n                if (!this.state.loadingMessage)\n                    return;\n                this.setState({\n                    loadingMessage: false\n                });\n                swal({\n                    title: 'Error sending messages',\n                    text: \"Do you want to send '\" + text + \"' again?\",\n                    icon: 'error',\n                    buttons: {\n                        cancel: \"cancel\",\n                        resend: \"resend\"\n                    }\n                })\n                    .then((value) => {\n                        switch (value) {\n                            case 'resend':\n                                this.handlePostMessage(text, imgs);\n                                break;\n                            default:\n                                break;\n                        }\n                    })\n            }, 5000);\n            this.refs.chatwindow.scrollTop = this.refs.chatwindow.scrollHeight;\n            this.props.onPost(text, imgs);\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if ((this.props.target._id !== prevProps.target._id\n            || JSON.stringify({ object: this.props.message }) !== JSON.stringify({ object: prevProps.message }))) {\n            this.setState({\n                targetUser: this.props.target,\n                message: this.props.message,\n                loading: false,\n                loadingMore: false,\n                loadingMessage: false,\n            }, () => {\n                if (this.props.message.length <= 10 ||\n                    this.props.message.length === prevProps.message.length + 1)\n                    this.refs.chatwindow.scrollTop = this.refs.chatwindow.scrollHeight;\n            })\n        }\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleClickOpen(imgs, idx) {\n        this.setState({ open: true, selectedImgs: imgs, currentIdx: idx });\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-7 col-md-offset-0 col-sm-10 col-sm-offset-1 col-xs-12 chat-right\">\n                <div className=\"panel panel-dafault chatwindow\">\n                    <div className=\"panel-heading\">\n                        <Tooltip title=\"Friends\">\n                            <IconButton className=\"pull-right friend-btn\" onClick={() => this.props.onExpand()}>\n                                <Icon style={{ width: '50px' }} className=\"fas fa-user-friends\" />\n                            </IconButton>\n                        </Tooltip>\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                {\n                                    this.state.loading ?\n                                        <CircularProgress size={30} style={{ color: '#61B4E4' }} /> :\n                                        <Link to={\"/profile/\" + this.state.targetUser._id}>\n                                            <img className=\"media-object\" src={this.state.targetUser.avatar} alt=\"image\" height=\"45\" width=\"45\"></img>\n                                        </Link>\n                                }\n                            </div>\n                            <div className=\"media-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-10\">\n                                        <div className=\"media-heading\">\n                                            <div className=\"media\">\n                                                <div className=\"media-left media-body\">\n                                                    <font size=\"3\">{this.state.targetUser.fullname}</font>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <font size=\"2\" color=\"grey \">\n                                            {this.state.targetUser.description}\n                                        </font>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}>\n                        <DialogContent>\n                            <img style={{\n                                maxHeight: '100%',\n                                maxWidth: '100%'\n                            }} src={this.state.selectedImgs[this.state.currentIdx]} />\n                        </DialogContent>\n                        <DialogActions>\n                            <IconButton onClick={() => {\n                                this.setState({\n                                    currentIdx: (this.state.currentIdx + this.state.selectedImgs.length - 1) % this.state.selectedImgs.length\n                                })\n                            }}>\n                                <Icon className='fas fa-chevron-left' />\n                            </IconButton>\n                            <IconButton onClick={() => {\n                                this.setState({\n                                    currentIdx: (this.state.currentIdx + 1) % this.state.selectedImgs.length\n                                })\n                            }}>\n                                <Icon className='fas fa-chevron-right' />\n                            </IconButton>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <div className=\"panel-body\" ref=\"chatwindow\">\n                        <Button onClick={(e) => {\n                            this.setState({\n                                loadingMore: true\n                            }, () => {\n                                this.props.onLoad(e)\n                            })\n                        }} fullWidth\n                            disabled={this.props.btnText === \"nothing more to load\" || this.state.loadingMore}>\n                            {this.props.btnText}\n                        </Button>\n\n                        {\n                            this.state.loadingMore && this.props.btnText !== \"nothing more to load\" &&\n                            <div style={{ textAlign: 'center' }}>\n                                <CircularProgress size={20} style={{\n                                    color: '#61B4E4'\n                                }} />\n                            </div>\n                        }\n\n                        <List>\n                            {this.state.message === undefined ? 0 : this.state.message.map((msg, i) => {\n\n                                //default time format\n                                var time = moment(msg.date).calendar();\n\n                                //if less than 1 hour, use relative time\n                                if ((new Date().getTime()) - msg.date <= 3600000)\n                                    time = moment(msg.date).fromNow();\n\n                                let sender = msg.sender === this.props.curUser._id ? this.props.curUser : this.state.targetUser;\n                                return <ListItem key={i}\n                                    style={{\n                                        alignItems: \"flex-start\",\n                                        marginBottom: '10px'\n                                    }}>\n                                    <ListItemAvatar>\n                                        <Avatar src={sender.avatar} />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={\n                                            <span>\n                                                <strong>{sender.fullname}</strong>\n                                                <span style={{ fontSize: '12px', marginLeft: '15px' }}>{time}</span>\n                                            </span>\n                                        }\n                                        secondary={\n                                            <span>\n                                                <GridList cellHeight={160} cols={3}>\n                                                    {msg.imgs.map((img, idx) => {\n                                                        return <GridListTile key={idx}>\n                                                            <img src={img} />\n                                                            <GridListTileBar\n                                                                actionIcon={\n                                                                    <IconButton onClick={() => this.handleClickOpen(msg.imgs, idx)}>\n                                                                        <Icon style={{ color: 'white' }} className='fas fa-search-plus' />\n                                                                    </IconButton>\n                                                                }\n                                                            />\n                                                        </GridListTile>\n                                                    })}\n                                                </GridList>\n                                                {msg.text}\n                                            </span>\n                                        }\n                                    />\n                                </ListItem>\n                            })}\n                            {\n                                this.state.loadingMessage &&\n                                <ListItem>\n                                    <CircularProgress size={30} style={{ marginLeft: '8px', color: '#61B4E4' }} />\n                                </ListItem>\n                            }\n                        </List>\n                    </div>\n                    <ChatEntry onPost={(message, imgs) => this.handlePostMessage(message, imgs)} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { createActivity } from '../../utils';\nimport { socket } from '../../utils/credentials';\nimport { hideElement } from '../../utils';\nimport Cropper from 'react-cropper';\nimport 'node_modules/cropperjs/dist/cropper.css';\n//mui\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { DateTimePicker } from 'material-ui-pickers';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport MomentUtils from 'material-ui-pickers/utils/moment-utils';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n// var debug = require('react-debug');\nvar swal = require('sweetalert');\n\nclass CreateActivityFeed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 1,\n            title: \"\",\n            img: null,\n            cropperOpen: false,\n            startTime: null,\n            endTime: null,\n            description: \"\",\n            location: \"\",\n            detail: \"\",\n            alert: false,\n            sizealert: false,\n            fileWrongType: false,\n        }\n    }\n\n    handleFile(e) {\n        e.preventDefault();\n        // Read the first file that the user selected (if the user selected multiple\n        // files, we ignore the others).\n        var reader = new FileReader();\n        var file = e.target.files[0];\n        if (!file.type.match('image.*')) {\n            this.setState({ fileWrongType: true });\n        }\n        else if (file.size < 1100000) {\n            // Called once the browser finishes loading the image.\n            reader.onload = (upload) => {\n                this.setState({\n                    img: upload.target.result,\n                    cropperOpen: true\n                });\n            };\n            reader.readAsDataURL(file);\n            this.setState({ sizealert: false });\n            this.setState({ fileWrongType: false });\n        }\n        else {\n            this.setState({ sizealert: true });\n        }\n    }\n\n    handleFileClick(e) {\n        e.target.value = null;\n    }\n\n    handleRequestHide = () => {\n        this.setState({\n            cropperOpen: false,\n            img: null\n        })\n    }\n\n    handleCrop = () => {\n        this.setState({\n            cropperOpen: false,\n            img: this.refs.cropper.getCroppedCanvas().toDataURL()\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.type !== \"------Select a Activity Type-----\" &&\n            this.state.title.trim() !== \"\" &&\n            this.state.startTime !== null &&\n            this.state.endTime !== null &&\n            this.state.description.trim() !== \"\" &&\n            this.state.location.trim() !== \"\" &&\n            this.state.detail.trim() !== \"\"\n        ) {\n            //activity created succesfully\n            var data = Object.assign({}, this.state);\n            data.userData = this.props.user;\n            var type = \"\";\n            switch (data.type) {\n                case 1:\n                    type = \"Event\";\n                    break;\n                case 2:\n                    type = \"Entertainment\";\n                    break;\n                default:\n                    type = \"Study\";\n                    break;\n            }\n            data.type = type;\n            createActivity(data)\n                .then(response => {\n                    return swal({\n                        title: \"Success\",\n                        icon: \"success\",\n                        button: \"OK\",\n                    });\n                })\n                .then(() => {\n                    socket.emit('newActivity');\n                    this.props.history.push('/activity');\n                })\n                .catch(err => {\n                    return swal({\n                        title: \"Create Activity Failed\",\n                        icon: \"error\",\n                        button: \"OK\"\n                    });\n                })\n        }\n        else {\n            this.setState({ alert: true })\n        }\n    }\n\n    handleTitle(e) {\n        e.preventDefault();\n        this.setState({\n            title: e.target.value\n        })\n    }\n\n    handleStartTime = (date) => {\n        this.setState({\n            startTime: date\n        })\n    }\n\n    handleEndTime = (date) => {\n        this.setState({\n            endTime: date\n        })\n    }\n\n    handleLocation(e) {\n        e.preventDefault();\n        this.setState({\n            location: e.target.value\n        })\n    }\n    handleDetail(e) {\n        e.preventDefault();\n        this.setState({\n            detail: e.target.value\n        })\n    }\n\n    handleEvent = (e) => {\n        this.setState({\n            type: e.target.value\n        })\n    }\n\n    handleDescription(e) {\n        e.preventDefault();\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <div className=\"container\">\n                    {this.state.cropperOpen &&\n                        <Dialog\n                            open={this.state.cropperOpen}\n                            onClose={this.handleRequestHide}>\n                            <DialogTitle>Crop your image</DialogTitle>\n                            <DialogContent>\n                                <Cropper\n                                    ref='cropper'\n                                    src={this.state.img}\n                                    style={{ height: 400, width: '100%' }}\n                                    aspectRatio={18 / 9} />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={this.handleRequestHide} color=\"primary\">\n                                    Cancel\n                            </Button>\n                                <Button onClick={this.handleCrop} color=\"primary\">\n                                    Submit\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n                    }\n\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1\">\n                            <h4><span style={{\n                                \"marginRight\": '10px'\n                            }}><i className=\"glyphicon glyphicon-list-alt\" aria-hidden=\"true\"></i></span>Create Activity</h4>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 infos\">\n                            <div className=\"panel panel-default\">\n                                <div className=\"panel-heading\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <h4>Activity Info</h4>\n                                            <div className={hideElement(!this.state.alert)}>\n                                                <div className=\"alert alert-warning alert-dismissible\" role=\"alert\">\n                                                    <strong>Please fill in blanks</strong>\n                                                </div>\n                                            </div>\n                                            <div className={hideElement(!this.state.sizealert)}>\n                                                <div className=\"alert alert-warning alert-dismissible\" role=\"alert\">\n                                                    <strong>File is too large</strong>\n                                                </div>\n                                            </div>\n                                            <div className={\"alert alert-warning alert-dismissible \" + hideElement(!this.state.fileWrongType)} role=\"alert\">\n                                                <strong>File is not a image file</strong>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                                        <InputLabel\n                                                            style={{ color: '#607D8B' }}\n                                                            htmlFor=\"activityTitle\">\n                                                            Title\n                                                    </InputLabel>\n                                                        <Input\n                                                            id=\"activityTitle\"\n                                                            value={this.state.title}\n                                                            onChange={(e) => this.handleTitle(e)}\n                                                        />\n                                                    </FormControl>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <DateTimePicker fullWidth\n                                                        style={{ marginBottom: '20px' }}\n                                                        value={this.state.startTime}\n                                                        onChange={this.handleStartTime}\n                                                        label=\"Start Time\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <DateTimePicker\n                                                        fullWidth\n                                                        style={{ marginBottom: '20px' }}\n                                                        value={this.state.endTime}\n                                                        onChange={this.handleEndTime}\n                                                        label=\"End Time\"\n                                                    />\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-6\">\n                                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                                        <InputLabel\n                                                            style={{ color: '#607D8B' }}\n                                                            htmlFor=\"activityLocation\">\n                                                            Location\n                                                    </InputLabel>\n                                                        <Input\n                                                            id=\"activityLocation\"\n                                                            value={this.state.location}\n                                                            onChange={(e) => this.handleLocation(e)}\n                                                        />\n                                                    </FormControl>\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                                        <InputLabel style={{ color: '#607D8B' }} htmlFor=\"type\">\n                                                            Select the type of your activity\n                                                    </InputLabel>\n                                                        <Select\n                                                            value={this.state.type}\n                                                            onChange={this.handleEvent}\n                                                            inputProps={{ id: 'type' }}>\n                                                            <MenuItem value={1}>Event</MenuItem>\n                                                            <MenuItem value={2}>Entertainment</MenuItem>\n                                                            <MenuItem value={3}>Study</MenuItem>\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                                        <InputLabel\n                                                            style={{ color: '#607D8B' }}\n                                                            htmlFor=\"activityDescription\">\n                                                            Description\n                                                    </InputLabel>\n                                                        <Input multiline\n                                                            rows='2'\n                                                            id=\"activityDescription\"\n                                                            value={this.state.description}\n                                                            onChange={(e) => this.handleDescription(e)}\n                                                        />\n                                                    </FormControl>\n                                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                                        <InputLabel\n                                                            style={{ color: '#607D8B' }}\n                                                            htmlFor=\"activityDetails\">\n                                                            Details\n                                                    </InputLabel>\n                                                        <Input multiline\n                                                            rows='4'\n                                                            id=\"activityDetails\"\n                                                            value={this.state.detail}\n                                                            onChange={(e) => this.handleDetail(e)}\n                                                        />\n                                                    </FormControl>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"panel-footer\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-6 nopadding\">\n                                                <label type=\"button\" className=\"btn btn-blue-grey pull-left\" name=\"button\">\n                                                    Upload activity header <input type=\"file\" style={{ \"display\": \"none\" }}\n                                                        onClick={(e) => this.handleFileClick(e)} onChange={(e) => this.handleFile(e)} />\n                                                </label>\n                                            </div>\n                                            <div className=\"col-md-6 nopadding\">\n                                                <button type=\"button\" className=\"btn btn-blue-grey pull-right nomargin\" onClick={(e) => this.handleSubmit(e)}>Submit</button>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12\">\n                                                <img src={this.state.img} style={{ marginTop: '20px' }} className={hideElement(this.state.cropperOpen)} width=\"100%\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n\nexport default withRouter(CreateActivityFeed)\n","import ActivityFeed from './activityFeed';\nimport ActivityDetailBody from './activityDetailBody';\nimport ActivityChatPanel from './activityChatPanel';\n\nimport ChatNavBody from './chatnavbody';\nimport ChatWindow from './chatwindow';\n\nimport LandingBackground from './landingbackground';\nimport LandingSignin from './landingsignin';\nimport LandingSignup from './landingsignup';\n\nimport Navbar from './navbar';\n\nimport NotificationBody from './notificationBody';\n\nimport CreateActivityFeed from './createActivityFeed';\n\nimport PostFeed from './postFeed';\n\nimport ProfilePersonalInfo from './profilePersonalInfo';\nimport ProfileRecentActivityFeed from './profileRecentActivityFeed';\nimport ProfileRecentPostFeed from './profileRecentPostFeed';\n\nimport SearchEntry from './searchEntry';\n\nimport SettingProfileInfo from './settingprofileinfo';\nimport SettingSystemInfo from './settingsysteminfo';\n\nexport {\n    ActivityFeed,\n    ActivityDetailBody,\n    ActivityChatPanel,\n\n    ChatNavBody,\n    ChatWindow,\n\n    LandingBackground,\n    LandingSignin,\n    LandingSignup,\n\n    Navbar,\n\n    NotificationBody,\n\n    CreateActivityFeed,\n\n    PostFeed,\n\n    ProfilePersonalInfo,\n    ProfileRecentActivityFeed,\n    ProfileRecentPostFeed,\n\n    SearchEntry,\n\n    SettingProfileInfo,\n    SettingSystemInfo\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\n// let debug = require('react-debug');\n\nexport default class LandingBackground extends React.Component {\n\n    render() {\n        var btn_style = {\n            margin: '10px',\n            outline: '0px'\n        }\n        return (\n            <div className=\"bg\">\n                <div className=\"text-vertical-center\">\n                    <h1 style={{ color: 'white' }}><span><img src=\"../img/logo/mipmap-xxxhdpi/ic_launcher.png\" width=\"70px\" /></span> WeMeet</h1>\n                    <h2 style={{ color: 'white' }}>Join nearby activities and make friends!</h2>\n                    <br />\n                    <Button variant=\"contained\" color=\"primary\" style={btn_style} onClick={this.props.handleOpen(\"signUpOpen\")}>\n                        Sign up\n                </Button>\n                    <Button variant=\"contained\" color=\"secondary\" style={btn_style} onClick={this.props.handleOpen(\"loginOpen\")}>\n                        Log in\n                </Button>\n                    <Button variant=\"contained\" color=\"default\" style={{\n                        fontSize: '14px',\n                        margin: '10px',\n                        outline: '0px',\n                        color: 'white',\n                        backgroundColor: '#3b5998'\n                    }} href=\"/auth/facebook\">\n                        <Icon className=\"fab fa-facebook-f\" />\n                        Facebook\n                </Button>\n                </div>\n            </div>\n        )\n    }\n\n\n}\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { hideElement } from '../../utils';\nimport { login } from '../../utils';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nclass LandingSignin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: \"\",\n            signInPass: \"\",\n            failedLogin: false,\n            submitted: false,\n            open: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.setState({\n                open: this.props.open\n            })\n        }\n    }\n\n    handleChange(field, e) {\n        e.preventDefault();\n        var update = {};\n        update[field] = e.target.value;\n        this.setState(update);\n    }\n\n    handleSignIn(e) {\n        e.preventDefault();\n        if (this.state.signInPass !== \"\" && this.state.signInEmail !== \"\" && (e.key === \"Enter\" || e.button === 0)) {\n            this.setState({\n                submitted: true\n            });\n            login(this.state.signInEmail, this.state.signInPass, (success) => {\n                if (success) {\n                    this.setState({\n                        signInPass: \"\",\n                        signInEmail: \"\",\n                        failedLogin: false,\n                        submitted: false\n                    });\n                    this.props.history.push(\"/activity\");\n                }\n                else {\n                    this.setState({\n                        failedLogin: true,\n                        submitted: false\n                    });\n                }\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.props.handleClose('loginOpen')}>\n                <DialogTitle>{\"Log in\"}</DialogTitle>\n                <DialogContent>\n                    <div className={\"alert alert-danger \" + hideElement(!this.state.failedLogin)} role=\"alert\">\n                        <strong>Invalid email address or password.</strong>\n                        <br />\n                        Please try a different email address or password, and try logging in again.\n                        </div>\n                    <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signInEmail\">\n                            Email\n                        </InputLabel>\n                        <Input\n                            id=\"signInEmail\"\n                            value={this.state.signInEmail}\n                            onChange={(e) => this.handleChange(\"signInEmail\", e)}\n                            onKeyUp={(e) => this.handleSignIn(e)}\n                        />\n                    </FormControl>\n                    <FormControl style={{ width: '100%' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signInPass\">\n                            Password\n                        </InputLabel>\n                        <Input\n                            id=\"signInPass\"\n                            value={this.state.signInPass}\n                            onChange={(e) => this.handleChange(\"signInPass\", e)}\n                            onKeyUp={(e) => this.handleSignIn(e)}\n                            type=\"password\"\n                        />\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" style={{ fontSize: '14px' }} className='pull-right' disabled={this.state.submitted}\n                        onClick={(e) => this.handleSignIn(e)}>\n                        Log in\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default withRouter(LandingSignin);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { hideElement } from '../../utils';\nimport { signup, login } from '../../utils';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass LandingSignup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signUpEmail: \"\",\n            signUpName: \"\",\n            signUpPass: \"\",\n            signUpPass2: \"\",\n            failedLogin: false,\n            failedSignUp: false,\n            submitted: false,\n            passwordStrength: 0,\n            passwordClass: \"progress-bar-danger\",\n            passwordTooSimple: false,\n            open: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.open !== prevProps.open) {\n            this.setState({\n                open: this.props.open\n            })\n        }\n    }\n\n    handleSignUp(e) {\n        e.preventDefault();\n        if (this.state.signUpName.trim() !== \"\" &&\n            this.state.signUpEmail !== \"\" &&\n            this.state.signUpPass !== \"\" &&\n            this.state.passwordStrength >= 60 &&\n            this.state.signUpPass === this.state.signUpPass2 && (e.key === \"Enter\" || e.button === 0)) {\n            this.setState({\n                submitted: true\n            });\n            signup(this.state.signUpEmail, this.state.signUpName, this.state.signUpPass, (success) => {\n                if (success) {\n                    login(this.state.signUpEmail, this.state.signUpPass, (success) => {\n                        if (success) {\n                            this.setState({\n                                signInPass: \"\",\n                                signInEmail: \"\",\n                                signUpEmail: \"\",\n                                signUpPass: \"\",\n                                signUpName: \"\",\n                                failedLogin: false,\n                                submitted: false,\n                                passwordError: false\n                            });\n                            this.props.history.push('/activity');\n                        }\n                        else {\n                            this.setState({\n                                failedLogin: true,\n                                submitted: false\n                            })\n                        }\n                    });\n                }\n                else {\n                    this.setState({\n                        failedSignUp: true,\n                        submitted: false\n                    });\n                }\n            });\n        }\n        else if (this.state.passwordStrength < 60 && this.state.signUpPass !== \"\" && (e.key === \"Enter\" || e.button === 0)) {\n            this.setState({\n                passwordTooSimple: true,\n                submitted: false\n            })\n        }\n        else if (this.state.signUpPass2 !== this.state.signUpPass && (e.key === \"Enter\" || e.button === 0)) {\n            this.setState({\n                passwordError: true,\n                submitted: false\n            })\n        }\n    }\n\n\n\n    handleChange(field, e) {\n        e.preventDefault();\n        if (field === \"signUpPass\") {\n            this.setState({\n                passwordTooSimple: false\n            });\n            var strength = zxcvbn(e.target.value);\n            switch (strength.score) {\n                case 0: {\n                    this.setState({\n                        passwordStrength: 20\n                    })\n                }\n                    break;\n                case 1: {\n                    this.setState({\n                        passwordStrength: 40\n                    })\n                }\n                    break;\n                case 2: {\n                    this.setState({\n                        passwordStrength: 60,\n                        passwordClass: \"progress-bar-success\",\n                        passwordTooSimple: false\n                    })\n                }\n                    break;\n                case 3: {\n                    this.setState({\n                        passwordStrength: 80,\n                        passwordClass: \"progress-bar-success\",\n                        passwordTooSimple: false\n                    })\n                }\n                    break;\n                case 4: {\n                    this.setState({\n                        passwordStrength: 100,\n                        passwordClass: \"progress-bar-success\",\n                        passwordTooSimple: false\n                    })\n                }\n                    break;\n                default:\n            }\n            if (e.target.value === \"\") {\n                this.setState({\n                    passwordStrength: 0,\n                    passwordClass: \"progress-bar-danger\"\n                })\n            }\n        }\n        var update = {};\n        update[field] = e.target.value;\n        this.setState(update);\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.props.handleClose('signUpOpen')}>\n                <DialogTitle>{\"Sign up\"}</DialogTitle>\n                <DialogContent>\n                    <div className={hideElement(!this.state.failedSignUp) + \" alert alert-danger\"} role=\"alert\"><strong>\n                        Invalid account signup.</strong><br />\n                        1.It is possible that you already have an account with that particular email address<br />\n                        2.you didn't fill in all the blanks.<br />\n                        3.email format is not correct\n                    </div>\n                    <div className={hideElement(!this.state.passwordError) + \" alert alert-danger\"} role=\"alert\"><strong>\n                        Invalid account signup.</strong> two passwords don't match\n                    </div>\n                    <div className={hideElement(!this.state.passwordTooSimple) + \" alert alert-danger\"} role=\"alert\"><strong>\n                        Password is too simple</strong>\n                    </div>\n\n                    <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signUpUsername\">\n                            Username\n                        </InputLabel>\n                        <Input\n                            id=\"signUpUsername\"\n                            value={this.state.signUpName}\n                            onChange={(e) => this.handleChange(\"signUpName\", e)}\n                            onKeyUp={(e) => this.handleSignUp(e)}\n                        />\n                    </FormControl>\n\n                    <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signUpEmail\">\n                            Email\n                        </InputLabel>\n                        <Input\n                            id=\"signUpEmail\"\n                            value={this.state.signUpEmail}\n                            onChange={(e) => this.handleChange(\"signUpEmail\", e)}\n                            onKeyUp={(e) => this.handleSignUp(e)}\n                        />\n                    </FormControl>\n\n                    <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signUpPass\">\n                            Password\n                        </InputLabel>\n                        <Input\n                            id=\"signUpPass\"\n                            type=\"password\"\n                            value={this.state.signUpPass}\n                            onChange={(e) => this.handleChange(\"signUpPass\", e)}\n                            onKeyUp={(e) => this.handleSignUp(e)}\n                        />\n                    </FormControl>\n                    <div className=\"progress\" style={{ height: '6px', marginTop: '-15px', borderRadius: '0' }}>\n                        <div className={\"progress-bar \" + this.state.passwordClass}\n                            role=\"progressbar\"\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                            style={{ width: this.state.passwordStrength + \"%\" }}>\n                        </div>\n                    </div>\n                    <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                        <InputLabel\n                            style={{ color: '#607D8B' }}\n                            htmlFor=\"signUpPass2\">\n                            Confirm password\n                    </InputLabel>\n                        <Input\n                            id=\"signUpPass2\"\n                            type=\"password\"\n                            value={this.state.signUpPass2}\n                            onChange={(e) => this.handleChange(\"signUpPass2\", e)}\n                            onKeyUp={(e) => this.handleSignUp(e)}\n                        />\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button className='pull-right' style={{ backgroundColor: '#403e3e', color: 'white' }}\n                        variant='contained'\n                        onClick={(e) => this.handleSignUp(e)}>\n                        Join us!\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default withRouter(LandingSignup)\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { socket } from '../../utils/credentials';\nimport { logout } from '../../utils';\nimport { hideElement, hasNewNotification } from '../../utils';\nimport Badge from '@material-ui/core/Badge';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Person from '@material-ui/icons/Person';\nimport Settings from '@material-ui/icons/SettingsApplications';\nimport Create from '@material-ui/icons/Create';\nimport PowerOff from '@material-ui/icons/PowerOff'\nimport Divider from '@material-ui/core/Divider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Icon from '@material-ui/core/Icon';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nvar swal = require('sweetalert');\n// var debug = require('react-debug');\n\nclass Navbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activity: false,\n      post: false,\n      chat: false,\n      notification: false,\n      notificationCount: 0,\n      open: false,\n      snackBar: false,\n      anchorEl: null\n    }\n  }\n\n  handleLogOut(e) {\n    e.preventDefault();\n    logout();\n    this.props.history.push('/');\n  }\n\n  onChat = () => {\n    this.setState({\n      chat: true,\n      snackBar: true\n    });\n  }\n\n  onNotification = () => {\n    this.setState({\n      notification: true\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      chat: false,\n      notification: false\n    });\n    socket.on('chat', this.onChat);\n    socket.on('notification', this.onNotification);\n  }\n\n  componentWillUnmount() {\n    socket.removeListener(\"chat\", this.onChat);\n    socket.removeListener(\"notification\", this.onNotification);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (Object.keys(this.props.user).length > 0) {\n      hasNewNotification(this.props.user._id)\n        .then(response => {\n          let count = response.data.count;\n          if (prevState.notificationCount !== count) {\n            this.setState({\n              notification: count > 0,\n              notificationCount: count,\n              activity: false,\n              post: false,\n              chat: false\n            });\n          }\n        })\n    }\n  }\n\n\n  notifyMe(route, message) {\n    if (!Notification) {\n      swal({\n        title: 'Desktop notifications not available in your browser!',\n        text: 'Please try with a different browser.',\n        type: 'error'\n      });\n      return;\n    }\n    if (Notification.permission !== \"granted\")\n      Notification.requestPermission();\n    else {\n      var notification = new Notification('WeMeet', {\n        icon: 'https://www.w1meet.com/img/logo/mipmap-xxhdpi/ic_launcher.png',\n        body: message\n      });\n      notification.onclick = (event) => {\n        event.preventDefault();\n        this.props.history.push(route);\n        location.reload();\n        event.target.close();\n      }\n    }\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    var iconMenu =\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={this.state.anchorEl}\n        open={Boolean(this.state.anchorEl)}\n        onClose={this.handleClose}\n      >\n        <Link style={{ textDecoration: 'none', outline: '0px' }} to={\"/profile/\" + this.props.user._id}>\n          <MenuItem>\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText inset primary={<h5>Profile</h5>} />\n          </MenuItem>\n        </Link>\n        <Link style={{ textDecoration: 'none', outline: '0px' }} to=\"/settings\">\n          <MenuItem>\n            <ListItemIcon>\n              <Settings />\n            </ListItemIcon>\n            <ListItemText inset primary={<h5>Settings</h5>} />\n          </MenuItem>\n        </Link>\n        <Link style={{ textDecoration: 'none', outline: '0px' }} to=\"/createActivity\">\n          <MenuItem>\n            <ListItemIcon>\n              <Create />\n            </ListItemIcon>\n            <ListItemText inset primary={<h5>Create Activity</h5>} />\n          </MenuItem>\n        </Link>\n        <Divider />\n        <MenuItem onClick={(e) => this.handleLogOut(e)}>\n          <ListItemIcon>\n            <PowerOff />\n          </ListItemIcon>\n          <ListItemText inset primary={<h5>Logout</h5>} />\n        </MenuItem>\n      </Menu>\n\n    return (\n      <div>\n        <Snackbar\n          open={this.state.snackBar && this.props.chat !== 'active'}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          message={\"You have new messages\"}\n          action=\"check\"\n          autoHideDuration={4000}\n          onClose={() => { this.setState({ snackBar: false }) }}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={() => { this.props.history.push('/chat') }}>\n              Check\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() => { this.setState({ snackBar: false }) }}>\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n\n        <nav className=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n              <button type=\"button\" className=\"navbar-toggle\" onClick={() => { this.setState({ open: !this.state.open }) }}>\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n              </button>\n              <Link className=\"navbar-brand\" to=\"/activity\">\n                <img src=\"./img/logo/mipmap-xxhdpi/ic_launcher.png\" width=\"50px\" height=\"50px\" alt=\"\" />\n              </Link>\n            </div>\n            <Drawer\n              open={this.state.open}\n              onClose={() => this.setState({ open: false })}\n              style={{ width: '300px' }}>\n              <List style={{ width: '300px' }}>\n                <ListItem style={{ paddingBottom: '0px' }}>\n                  <ListItemAvatar>\n                    <Avatar src={this.props.user.avatar} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={<h4>{this.props.user.fullname}</h4>} />\n                  <ListItemSecondaryAction>\n                    <IconButton aria-haspopup=\"true\"\n                      onClick={this.handleClick}\n                      aria-owns={this.state.anchorEl ? 'simple-menu' : null}>\n                      <ExpandMore />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Link style={{ textDecoration: 'none' }} to='/activity'>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Icon className=\"fas fa-list-alt\"></Icon>\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Activities\" />\n                  </ListItem>\n                </Link>\n\n                <Link style={{ textDecoration: 'none' }} to='/post'>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Icon className=\"fas fa-book\" />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Trend\" />\n                  </ListItem>\n                </Link>\n\n                <Link style={{ textDecoration: 'none' }} to='/chat'>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Icon className=\"fas fa-comment-alt\" />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Chat\" />\n                  </ListItem>\n                </Link>\n\n                <Link style={{ textDecoration: 'none' }} to='/search'>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Icon className=\"fas fa-search\" />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Search\" />\n                  </ListItem>\n                </Link>\n\n                <Link style={{ textDecoration: 'none' }} to='/notification'>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Icon className=\"fas fa-bell\" />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Notification\" />\n                  </ListItem>\n                </Link>\n              </List>\n            </Drawer>\n            {/* Collect the nav links, forms, and other content for toggling */}\n            <div className=\"collapse navbar-collapse\" id=\"navbar\">\n              <ul className=\"nav navbar-nav nav-left\">\n                <li className={this.props.activity}>\n                  <Link to='/activity'>\n                    Activities\n                  </Link>\n                </li>\n                <li className={this.props.post}>\n                  <Link to='/post'>Trend</Link>\n                </li>\n                <li className={this.props.chat}>\n                  <Link to={'/chat'}>Chat <i className={\"fa fa-circle \" + hideElement(!this.state.chat || this.props.chat === \"active\")} style={{ fontSize: '12px', marginLeft: '2px', color: '#EF9A9A' }} aria-hidden=\"true\"></i></Link>\n                </li>\n              </ul>\n\n              <ul className=\"nav navbar-nav navbar-right\">\n                <div className=\"pull-left\">\n                  <ListItem style={{ paddingBottom: '0px' }}>\n                    <ListItemAvatar>\n                      <Avatar src={this.props.user.avatar} />\n                    </ListItemAvatar>\n                    <ListItemSecondaryAction>\n                      <IconButton aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                        aria-owns={this.state.anchorEl ? 'simple-menu' : null}>\n                        <ExpandMore />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                  {iconMenu}\n                </div>\n                <li className={this.props.search}>\n                  <Link to=\"/search\"><i className=\"fa fa-search\" aria-hidden=\"true\" /></Link>\n                </li>\n                <li className={this.props.notification}>\n                  <Link to={\"/notification\"}>\n                    {!this.state.notification ? <i className=\"far fa-bell\" aria-hidden=\"true\"></i> :\n                      <Badge\n                        style={{ width: '20px' }}\n                        badgeContent={this.state.notificationCount}\n                        color='secondary'>\n                        <i className=\"far fa-bell\" aria-hidden=\"true\" />\n                      </Badge>\n                    }\n                  </Link>\n                </li>\n              </ul>\n            </div>\n            {/*.navbar-collapse */}\n          </div>\n          {/*.container-fluid*/}\n        </nav>\n      </div>\n    );\n  }\n}\nexport default withRouter(Navbar);\n","import React from 'react';\r\nimport Link from 'react-router-dom/Link';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// let debug = require('react-debug');\r\n\r\n\r\nArray.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n};\r\n\r\nexport default class NotificationBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        }\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value: value });\r\n    };\r\n\r\n    render() {\r\n        var frbadge =\r\n            this.props.FR.length === 0 ? <Icon className=\"fas fa-user-plus\" style={{ width: '30px' }} /> :\r\n                <Badge badgeContent={this.props.FR.length} color=\"secondary\">\r\n                    <Icon className=\"fas fa-user-plus\" style={{ width: '30px' }} />\r\n                </Badge>;\r\n\r\n        var anbadge =\r\n            this.props.AN.length === 0 ? <Icon className=\"fas fa-bell\" /> :\r\n                <Badge badgeContent={this.props.AN.length} color=\"secondary\">\r\n                    <Icon className=\"fas fa-bell\" />\r\n                </Badge>;\r\n\r\n        let friendRequestContent =\r\n            <List style={{ backgroundColor: '#ffffff', padding: 0, boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}>\r\n                {this.props.FR.length === 0 ? \"Nothing here\" : this.props.FR.map((fr, i) => {\r\n                    var content = \"\";\r\n                    if (fr.accept) {\r\n                        content = \"accepted your friend request.\";\r\n                    } else {\r\n                        content = \"wants to be your friend.\"\r\n                    }\r\n                    return <div key={i}>\r\n                        <ListItem style={{ padding: '20px' }}>\r\n                            <Link to={\"/profile/\" + fr.sender._id}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={fr.sender.avatar} />\r\n                                </ListItemAvatar>\r\n                            </Link>\r\n                            <ListItemText primary={fr.sender.fullname}\r\n                                secondary={content} />\r\n                            <ListItemSecondaryAction>\r\n                                {!fr.accept &&\r\n                                    <IconButton onClick={() => this.props.handleFriendAccept(fr._id, fr.sender._id)}>\r\n                                        <Icon className='fas fa-check' style={{ color: '#43A047' }} />\r\n                                    </IconButton>\r\n                                }\r\n                                <IconButton onClick={() => this.props.handleDelete(fr._id)}>\r\n                                    <Icon className='fas fa-trash' style={{ color: '#e53935' }} />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider inset />\r\n                    </div>\r\n                })}\r\n            </List>\r\n        let activityRequestContent =\r\n            <List style={{ backgroundColor: '#ffffff', padding: 0, boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}>\r\n                {this.props.AN.length === 0 ? \"Nothing here\" : this.props.AN.map((an, i) => {\r\n                    var text = \"\";\r\n                    if (an.RequestOrInvite === \"request\") {\r\n                        if (an.accept) {\r\n                            text = \"accepted your request to join activity\";\r\n                        } else {\r\n                            text = \"sent you a request to join activity\";\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (an.accept) {\r\n                            text = \"accepted your invitation\";\r\n                        } else {\r\n                            text = \"invited you to join activity\";\r\n                        }\r\n                    }\r\n                    return <div key={i}>\r\n                        <ListItem style={{ padding: '20px' }}>\r\n                            <Link to={\"/profile/\" + an.sender._id}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={an.sender.avatar} />\r\n                                </ListItemAvatar>\r\n                            </Link>\r\n                            <ListItemText primary={an.sender.fullname}\r\n                                secondary={\r\n                                    <Link to={\"/activityDetail/\" + an.activityid} target=\"_blank\">\r\n                                        {text}\r\n                                    </Link>\r\n                                } />\r\n                            <ListItemSecondaryAction>\r\n                                {!an.accept &&\r\n                                    <IconButton onClick={() => this.props.handleActivityAccept(an._id, an.sender._id)}>\r\n                                        <Icon className='fas fa-check' style={{ color: '#43A047' }} />\r\n                                    </IconButton>\r\n                                }\r\n                                <IconButton onClick={() => this.props.handleDelete(an._id)}>\r\n                                    <Icon className='fas fa-trash' style={{ color: '#e53935' }} />\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <Divider inset />\r\n                    </div>\r\n                })}\r\n            </List>\r\n        return (\r\n            <div style={{ marginTop: '30px' }}>\r\n                <Tabs\r\n                    value={this.state.value}\r\n                    style={{ backgroundColor: 'white' }}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={this.handleChange}\r\n                    fullWidth centered>\r\n                    <Tab icon={frbadge} />\r\n                    <Tab icon={anbadge} />\r\n                </Tabs>\r\n                {this.state.value === 0 && friendRequestContent}\r\n                {this.state.value === 1 && activityRequestContent}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React from 'react';\nimport { PostEntry } from '../presentations';\nimport { PostFeedItem } from '../presentations';\nimport { getAllPosts, postStatus } from '../../utils';\nimport { isBottom } from '../../utils';\nimport { socket } from '../../utils/credentials';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n\n// var debug = require('react-debug');\n\nexport default class PostFeed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: [],\n            moreToLoad: true,\n            loading: true,\n            new: false\n        }\n    }\n\n    handleLoad(init) {\n        document.removeEventListener('scroll', this.trackScrolling);\n        if (init) {\n            this.setState({\n                new: false,\n                loading: true\n            })\n        } else {\n            this.setState({\n                loading: false,\n            });\n        }\n        var date = init || this.state.contents.length === 0 ? (new Date()).getTime() :\n            this.state.contents[this.state.contents.length - 1].contents.postDate;\n        getAllPosts(date)\n            .then(response => {\n                let postFeedData = response.data;\n                if (postFeedData.length === 0) {\n                    return this.setState({\n                        moreToLoad: false,\n                        loading: false\n                    })\n                }\n                var newPostData = (init ? [] : this.state.contents).concat(postFeedData);\n                this.setState({\n                    contents: newPostData,\n                    moreToLoad: true,\n                    loading: false\n                }, () => {\n                    document.addEventListener('scroll', this.trackScrolling);\n                });\n            });\n    }\n\n    onPost(text, img) {\n        this.setState({\n            loading: true\n        });\n        postStatus(this.props.user._id, text, img)\n            .then(() => {\n                socket.emit('newPost');\n                this.handleLoad(true);\n            });\n    }\n\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     if(this.state.contents.count === prevState.count)\n    //         this.handleLoadMore();\n    // }\n\n\n    trackScrolling = () => {\n        let wrappedElement = document.getElementById('postFeed');\n        if (wrappedElement !== null && isBottom(wrappedElement)) {\n            this.handleLoad(false);\n        }\n    }\n\n    componentDidMount() {\n        this.handleLoad(true);\n        socket.on('newPost', this.onNewPost);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n        socket.removeEventListener('newPost', this.onNewPost);\n    }\n\n    onNewPost = () => {\n        this.setState({\n            new: true\n        });\n    }\n\n    handleNew = () => {\n        this.handleLoad(true);\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div className=\"postFeedItem\" id=\"postFeed\">\n                {this.state.new &&\n                    <Button variant=\"extendedFab\" color=\"primary\" style={{\n                        position: 'fixed',\n                        zIndex: 100,\n                        left: '45%'\n                    }} onClick={this.handleNew}>\n                        <Icon style={{ marginRight: '5px' }} className=\"fas fa-arrow-alt-circle-up\" />\n                        new posts\n                    </Button>\n                }\n                <PostEntry userData={this.props.user} onPost={(text, img) => this.onPost(text, img)} />\n                {\n                    this.state.loading ? <div style={{ textAlign: 'center', color: '#61B4E4', marginTop: '30px', marginBottom: '30px' }}>\n                        <CircularProgress size={30} />\n                    </div> : <div></div>\n                }\n                {\n                    !this.state.loading && this.state.contents.length === 0 ?\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            No one has posted anthing yet!\n                    </div>\n                        : this.state.contents.map((postFeedItem, i) => {\n                            return <PostFeedItem key={i} data={postFeedItem} currentUser={this.props.user._id} />\n                        })\n                }\n                {\n                    !this.state.moreToLoad &&\n                    <div style={{ marginTop: '30px', marginBottom: '30px', textAlign: 'center' }}>\n                        Nothing more to load\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Link from 'react-router-dom/Link';\nimport { socket } from '../../utils/credentials';\n// material ui\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Collapse from '@material-ui/core/Collapse';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nvar moment = require('moment');\n// let debug = require('react-debug');\n\nexport default class ProfilePersonalInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            snackOpen: false,\n            collapseOpen: false,\n            sentRequestFailed: false\n        }\n    }\n\n    isCommon(id) {\n        return this.props.commonFriends.indexOf(id) !== -1 || id === this.props.currentUser;\n    }\n\n    handleAddFriend(targetId) {\n        socket.emit('friend notification', {\n            sender: this.props.currentUser,\n            target: targetId\n        });\n    }\n\n    handleRequestClose = () => {\n        this.setState({\n            snackOpen: false,\n        });\n    };\n\n    handleClick = () => {\n        this.setState(state => ({ collapseOpen: !state.collapseOpen }));\n    };\n\n    componentDidMount = () => {\n        socket.on('friend notification', this.handleFriendNotification);\n    }\n\n    componentWillUnmount = () => {\n        socket.removeListener('friend notification', this.handleFriendNotification);\n    }\n\n    handleFriendNotification = (err) => {\n        this.setState({\n            snackOpen: true,\n            sentRequestFailed: err.error\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Snackbar\n                    autoHideDuration={4000}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    open={this.state.snackOpen}\n                    onClose={this.handleRequestClose}>\n                    <SnackbarContent\n                        style={{\n                            backgroundColor: [this.state.sentRequestFailed ? '#f44336' : '#4CAF50']\n                        }}\n                        message={\n                            <span style={{\n                                display: 'flex',\n                                alignItems: 'center'\n                            }}>\n                                {this.state.sentRequestFailed ?\n                                    <ErrorIcon style={{ fontSize: '20px', marginRight: '10px' }} /> :\n                                    <CheckCircleIcon style={{ fontSize: '20px', marginRight: '10px' }} />\n                                }\n                                {this.state.sentRequestFailed ? 'failed to send request!' : 'request sent!'}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n                <List style={{ backgroundColor: '#ffffff', padding: 0, boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}\n                    subheader={<ListSubheader style={{ fontSize: '20px' }}>Profile</ListSubheader>}>\n                    <ListItem>\n                        <Avatar src={this.props.user.avatar} />\n                        <ListItemText primary={this.props.user.fullname} />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <Icon style={{ width: '30px', textAlign: 'center' }} className=\"fas fa-info-circle\" />\n                        </ListItemIcon>\n                        <ListItemText primary={this.props.user.description} />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <Icon style={{ width: '30px', textAlign: 'center' }} className=\"fas fa-birthday-cake\" />\n                        </ListItemIcon>\n                        <ListItemText primary={moment(this.props.user.birthday).calendar()} />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <Icon style={{ width: '30px', textAlign: 'center' }} className=\"fas fa-envelope\" />\n                        </ListItemIcon>\n                        <ListItemText primary={this.props.user.email} />\n                    </ListItem>\n                    <ListItem button onClick={this.handleClick}>\n                        <ListItemIcon>\n                            <Icon style={{ width: '30px', textAlign: 'center' }} className=\"fas fa-users\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Connections\" />\n                        {this.state.collapseOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={this.state.collapseOpen} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {(this.props.user.friends === undefined ? [] : this.props.user.friends).map((friend, i) => {\n                                var rightButton;\n                                if (this.isCommon(friend._id)) {\n                                    rightButton = <IconButton disabled={true}>\n                                        <Icon className=\"fas fa-check\" />\n                                    </IconButton>\n                                }\n                                else {\n                                    rightButton = <IconButton onClick={() => this.handleAddFriend(friend._id)}>\n                                        <Icon className=\"fas fa-plus\" />\n                                    </IconButton>\n                                }\n                                return <ListItem key={i}>\n                                    <Link to={'/profile/' + friend._id}>\n                                        <Avatar src={friend.avatar} />\n                                    </Link>\n                                    <ListItemText primary={friend.fullname}\n                                        secondary={friend.description} />\n                                    <ListItemSecondaryAction>\n                                        {rightButton}\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            })}\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\n//request function\nimport { getActivityFeedData } from '../../utils';\n\nimport { ActivityFeedItem } from '../presentations';\nimport Button from '@material-ui/core/Button';\n\n// let debug = require('react-debug');\n\nexport default class ProfileRecentActivityFeed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: [],\n            loadMore: true\n        };\n    }\n\n    getData(user, refreshed) {\n        let count = refreshed ? 0 : this.state.contents.length;\n        getActivityFeedData(user, count)\n            .then(response => {\n                let activities = refreshed ? response.data.contents : this.state.contents.concat(response.data.contents);\n                this.setState({\n                    contents: activities,\n                    loadMore: response.data.contents.length > 0\n                });\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.user !== this.props.user) {\n            this.getData(this.props.user, true);\n        }\n    }\n\n    componentDidMount() {\n        this.getData(this.props.user);\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: '15px', marginBottom: '20px' }}>\n                {this.state.contents.map((activityItem) => {\n                    return <ActivityFeedItem key={activityItem._id} data={activityItem} currentUser={this.props.currentUser} />\n                })}\n                {\n                    <Button onClick={() => { this.getData(this.props.user, false) }}\n                        fullWidth style={{ backgroundColor: \"#fdfdfd\" }}\n                        disabled={!this.state.loadMore}>\n                        {this.state.loadMore ? \"Load More\" : \"Nothing more to load\"}\n                    </Button>\n                }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { getPostFeedData } from '../../utils';\nimport { PostFeedItem } from '../presentations';\nimport Button from '@material-ui/core/Button';\n\nexport default class ProfileRecentPostFeed extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contents: [],\n            loadMore: true\n        };\n    }\n\n    getData(user, refreshed) {\n        let count = refreshed ? 0 : this.state.contents.length\n        getPostFeedData(user, count)\n            .then(response => {\n                let activities = refreshed ? response.data.contents : this.state.contents.concat(response.data.contents);\n                this.setState({\n                    contents: activities,\n                    loadMore: response.data.contents.length > 0\n                });\n            });\n    }\n\n    componentDidMount() {\n        this.getData(this.props.user);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.user !== this.props.user) {\n            this.getData(this.props.user, true);\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ marginTop: '15px', marginBottom: '20px' }}>\n                {this.state.contents.map((postItem) => {\n                    return <PostFeedItem key={postItem._id} data={postItem} currentUser={this.props.currentUser} />\n                })}\n                {\n                    <Button onClick={() => { this.getData(this.props.user, false) }}\n                        fullWidth style={{ backgroundColor: \"#fdfdfd\" }}\n                        disabled={!this.state.loadMore}>\n                        {this.state.loadMore ? \"Load More\" : \"Nothing more to load\"}\n                    </Button>\n                }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { searchquery } from '../../utils';\nimport { ActivityFeedItem } from '../presentations';\nimport { PostFeedItem } from '../presentations';\nimport { socket } from '../../utils/credentials';\nimport Link from 'react-router-dom/Link';\n//mui\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\n\n// var debug = require('react-debug');\n\nexport default class SearchEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            searchDataResult: {},\n            title: \"\",\n            snackOpen: false,\n            sentRequestFailed: false\n        }\n    }\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ value: e.target.value });\n    }\n\n    handleKeyUp(e) {\n        e.preventDefault();\n        if (e.key === \"Enter\") {\n            var query = this.state.value.trim();\n            if (query !== \"\") {\n                searchquery(query)\n                    .then(response => {\n                        let searchData = response.data;\n                        this.setState({\n                            searchDataResult: searchData,\n                            title: \"Search result for \" + query + \": \"\n                        });\n                    });\n            }\n        }\n    }\n\n    checkFriendsOfUser(friendId) {\n        return this.props.user._id === friendId || this.props.user.friends.filter((friend) => {\n            return friend._id === friendId\n        }).length > 0;\n    }\n\n    handleAddFriend(friendId) {\n        socket.emit('friend notification', {\n            sender: this.props.user._id,\n            target: friendId\n        });\n    }\n\n    handleRequestClose = () => {\n        this.setState({\n            snackOpen: false,\n        });\n    };\n\n    componentDidMount = () => {\n        socket.on('friend notification', this.handleFriendNotification);\n    }\n\n    componentWillUnmount = () => {\n        socket.removeListener('friend notification', this.handleFriendNotification);\n    }\n\n    handleFriendNotification = (err) => {\n        this.setState({\n            snackOpen: true,\n            sentRequestFailed: err.error\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-heading\">\n                        <div className=\"media\">\n                            <div className=\"media-body\">\n                                <FormControl style={{ width: '100%', marginBottom: '10px', paddingTop: '8px' }}>\n                                    <InputLabel\n                                        style={{ color: '#607D8B' }}\n                                        htmlFor=\"search\">\n                                        Search...\n                                    </InputLabel>\n                                    <Input\n                                        style={{ paddingBottom: '5px' }}\n                                        id=\"search\"\n                                        value={this.state.value}\n                                        onChange={(e) => this.handleChange(e)}\n                                        onKeyUp={(e) => this.handleKeyUp(e)}\n                                        type=\"search\"\n                                    />\n                                </FormControl>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h4 style={{ marginBottom: '10px' }}>{this.state.title}</h4>\n                <Snackbar\n                    autoHideDuration={4000}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    open={this.state.snackOpen}\n                    onClose={this.handleRequestClose}>\n                    <SnackbarContent\n                        style={{\n                            backgroundColor: [this.state.sentRequestFailed ? '#f44336' : '#4CAF50']\n                        }}\n                        message={\n                            <span style={{\n                                display: 'flex',\n                                alignItems: 'center'\n                            }}>\n                                {this.state.sentRequestFailed ?\n                                    <ErrorIcon style={{ fontSize: '20px', marginRight: '10px' }} /> :\n                                    <CheckCircleIcon style={{ fontSize: '20px', marginRight: '10px' }} />\n                                }\n                                {this.state.sentRequestFailed ? 'failed to send request!' : 'request sent!'}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n                <List style={{\n                    backgroundColor: '#ffffff',\n                    padding: 0, boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)',\n                    marginBottom: '30px'\n                }}>\n                    {this.state.searchDataResult.users === undefined ? [] : this.state.searchDataResult.users.map((user, i) => {\n                        var rightButton;\n                        if (this.checkFriendsOfUser(user._id)) {\n                            rightButton = <IconButton disabled>\n                                <Icon className=\"fas fa-check\" />\n                            </IconButton>\n                        }\n                        else {\n                            rightButton = <IconButton onClick={() => this.handleAddFriend(user._id)}>\n                                <Icon className=\"fas fa-plus\" />\n                            </IconButton>\n                        }\n                        return <ListItem key={i} style={{ padding: '20px' }}>\n                            <Link to={'/profile/' + user._id}>\n                                <Avatar src={user.avatar} />\n                            </Link>\n                            <ListItemText primary={user.fullname}\n                                secondary={user.description} />\n                            <ListItemSecondaryAction>\n                                {rightButton}\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    })}\n                </List>\n\n                {\n                    this.state.searchDataResult.activities === undefined ? [] : this.state.searchDataResult.activities.map((activity, i) => {\n                        return (\n                            <ActivityFeedItem key={i} data={activity} />\n                        )\n                    })\n                }\n                {\n                    this.state.searchDataResult.posts === undefined ? [] : this.state.searchDataResult.posts.map((post, i) => {\n                        return (\n                            <PostFeedItem key={i} data={post} currentUser={this.props.user._id} />\n                        )\n                    })\n                }\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport { changeUserInfo } from '../../utils';\n//mui\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { DatePicker } from 'material-ui-pickers';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport MomentUtils from 'material-ui-pickers/utils/moment-utils';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nvar moment = require('moment');\n// const debug = require('react-debug');\n\nexport default class SettingProfileInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: this.props.userData,\n            changeInfoFailed: false,\n            open: false,\n            snackBarMsg: \"\",\n            snackBarColor: \"\",\n            modified: false\n        }\n    }\n\n    // componentDidMount(){\n    //     this.setState({\n    //         userData: this.props.userData\n    //     })\n    // }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(this.props.userData) !== JSON.stringify(prevProps.userData))\n            this.setState({\n                userData: this.props.userData\n            })\n    }\n\n\n    handleChangeUserInfo(e) {\n        e.preventDefault();\n        if (this.state.userData.fullname !== \"\" && this.state.userData.description !== \"\" && this.state.modified) {\n            changeUserInfo({\n                userId: this.state.userData._id,\n                fullname: this.state.userData.fullname,\n                nickname: this.state.userData.nickname,\n                description: this.state.userData.description,\n                birthday: moment(this.state.userData.birthday).toDate()\n            })\n                .then(response => {\n                    // let userData = response.data;\n                    this.setState({\n                        changeInfoFailed: false,\n                        snackBarMsg: \"Successfully Changed Info!\",\n                        snackBarColor: \"#2E7D32\",\n                        open: true,\n                        modified: false\n                    });\n                });\n        }\n        else if (this.state.modified) {\n            this.setState({\n                changeInfoFailed: true,\n                snackBarColor: \"#d32f2f\",\n                snackBarMsg: \"Your Name and About You can not be empty!\",\n                open: true,\n                modified: false\n            });\n        }\n    }\n\n\n    handleChange(e) {\n        e.preventDefault();\n        var updatedProfileInfo = Object.assign({}, this.state.userData);\n        updatedProfileInfo[e.target.id] = e.target.value;\n        this.setState({\n            userData: updatedProfileInfo,\n            modified: true\n        });\n    }\n\n    handleBirthday = (date) => {\n        var updatedProfileInfo = Object.assign({}, this.state.userData);\n        updatedProfileInfo['birthday'] = date;\n        this.setState({\n            userData: updatedProfileInfo,\n            modified: true\n        });\n    };\n\n    handleSnackBarClose = () => {\n        this.setState({\n            open: false\n        }, () => {\n            location.reload();\n        });\n    }\n\n    render() {\n        return (\n            <MuiPickersUtilsProvider utils={MomentUtils}>\n                <div className=\"setting-profile-info\">\n                    <div className=\"col-md-7 col-md-offset-1 infos\">\n                        <h4><span><i className=\"fa fa-cog\" aria-hidden=\"true\"></i></span> Settings</h4>\n                        <div className=\"panel panel-default personal-info-1\">\n                            <div className=\"panel-heading\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <h4>Personal Info</h4>\n                                        <div>\n                                            <Snackbar\n                                                autoHideDuration={4000}\n                                                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                                                open={this.state.open}\n                                                onClose={this.handleSnackBarClose}>\n                                                <SnackbarContent\n                                                    style={{\n                                                        backgroundColor: this.state.snackBarColor\n                                                    }}\n                                                    message={\n                                                        <span style={{\n                                                            display: 'flex',\n                                                            alignItems: 'center'\n                                                        }}>\n                                                            {this.state.changeInfoFailed ?\n                                                                <WarningIcon style={{ fontSize: '20px', marginRight: '10px' }} /> :\n                                                                <CheckCircleIcon style={{ fontSize: '20px', marginRight: '10px' }} />\n                                                            }\n                                                            {this.state.snackBarMsg}\n                                                        </span>\n                                                    }\n                                                />\n                                            </Snackbar>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12\">\n                                                <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                                                    <InputLabel\n                                                        style={{ color: '#607D8B' }}\n                                                        htmlFor=\"fullname\">\n                                                        Your Name\n                                                </InputLabel>\n                                                    <Input\n                                                        id=\"fullname\"\n                                                        value={this.state.userData.fullname}\n                                                        onChange={(e) => this.handleChange(e)}\n                                                    />\n                                                </FormControl>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-md-12\">\n                                                <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                                                    <InputLabel\n                                                        style={{ color: '#607D8B' }}\n                                                        htmlFor=\"nickname\">\n                                                        NickName\n                                                </InputLabel>\n                                                    <Input\n                                                        id=\"nickname\"\n                                                        value={this.state.userData.nickname}\n                                                        onChange={(e) => this.handleChange(e)}\n                                                    />\n                                                </FormControl>\n\n                                                <DatePicker\n                                                    fullWidth\n                                                    format=\"MMM Do YY\"\n                                                    style={{ marginBottom: '20px' }}\n                                                    value={this.state.userData.birthday}\n                                                    onChange={this.handleBirthday}\n                                                    label=\"Birthday\"\n                                                />\n\n                                                <FormControl style={{ width: '100%', marginBottom: '20px' }}>\n                                                    <InputLabel\n                                                        style={{ color: '#607D8B' }}\n                                                        htmlFor=\"description\">\n                                                        About you\n                                                </InputLabel>\n                                                    <Input multiline rows='4'\n                                                        id=\"description\"\n                                                        value={this.state.userData.description}\n                                                        onChange={(e) => this.handleChange(e)}\n                                                    />\n                                                </FormControl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                            </div>\n                            <div className=\"panel-footer\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <button type=\"button\" className=\"btn btn-blue-grey pull-right\" name=\"button\"\n                                            onClick={(e) => this.handleChangeUserInfo(e)}>Save</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MuiPickersUtilsProvider>\n        )\n    }\n}\n","import React from 'react'\nimport { changeEmail, ChangeAvatar, changePassword } from '../../utils';\nimport 'node_modules/cropperjs/dist/cropper.css';\nimport { hideElement } from '../../utils';\nimport Cropper from 'react-cropper';\n//mui\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nvar swal = require('sweetalert');\n// let debug = require('react-debug');\n\nexport default class SettingSystemInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: props.userData,\n            oldEmail: \"\",\n            newEmail: \"\",\n            img: null,\n            cropperOpen: false,\n            snackBarColor: \"\",\n            snackBarMsg: \"\",\n            open: false,\n            changeEmailFailed: false,\n            oldPass: \"\",\n            newPass: \"\",\n            newPass2: \"\",\n            passwordStrength: 0,\n            passwordClass: \"progress-bar-danger\",\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(this.props.userData) !== JSON.stringify(prevProps.userData))\n            this.setState({\n                userData: this.props.userData\n            })\n    }\n\n\n    handleOldEmail(e) {\n        e.preventDefault();\n        this.setState({ oldEmail: e.target.value });\n    }\n\n    handleNewEmail(e) {\n        e.preventDefault();\n        this.setState({ newEmail: e.target.value });\n    }\n\n    handleOldPass(e) {\n        this.setState({ oldPass: e.target.value });\n    }\n\n    handleNewPass(e) {\n        switch (zxcvbn(e.target.value).score) {\n            case 0:\n                this.setState({\n                    passwordStrength: 0,\n                    newPass: e.target.value,\n                    passwordClass: 'progress-bar-danger'\n                })\n                break;\n            case 1:\n                this.setState({\n                    passwordStrength: 40,\n                    newPass: e.target.value,\n                    passwordClass: 'progress-bar-danger'\n                })\n                break;\n            case 2:\n                this.setState({\n                    passwordStrength: 60,\n                    newPass: e.target.value,\n                    passwordClass: \"progress-bar-success\"\n                })\n                break;\n            case 3:\n                this.setState({\n                    passwordStrength: 80,\n                    newPass: e.target.value,\n                    passwordClass: \"progress-bar-success\"\n                })\n                break;\n            case 4:\n                this.setState({\n                    passwordStrength: 100,\n                    newPass: e.target.value,\n                    passwordClass: \"progress-bar-success\"\n                })\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleNewPass2(e) {\n        this.setState({ newPass2: e.target.value });\n    }\n\n    //1.password is strong, two passwords match\n    handleChangePass() {\n        if (this.state.oldPass === \"\" || this.state.newPass === \"\" || this.state.newPass2 === \"\") {\n            swal('Error', 'Please fill all the fields', 'error');\n            return;\n        }\n        let data = {\n            oldPass: this.state.oldPass,\n            newPass: this.state.newPass\n        }\n        if (data.oldPass === data.newPass) {\n            swal('Error', \"New password can't be the same as the old one\", 'error');\n            return;\n        }\n        if (this.state.passwordStrength >= 60 && this.state.newPass === this.state.newPass2) {\n            changePassword(this.state.userData._id, data)\n                .then(response => {\n                    let err = response.data;\n                    if (err) {\n                        swal('Error', 'Old password is wrong', 'error');\n                    }\n                    else {\n                        swal('Success', '', 'success');\n                    }\n                });\n        }\n        else {\n            if (this.state.passwordStrength < 60)\n                swal('Error', 'Password is too simple', 'error');\n            else swal('Error', \"Comfirm your password\", 'error');\n        }\n    }\n\n    handleEmailChange(e) {\n        e.preventDefault();\n        if (this.state.oldEmail !== \"\" && this.state.newEmail !== \"\") {\n            changeEmail(this.state.userData._id, {\n                oldEmail: this.state.oldEmail,\n                newEmail: this.state.newEmail\n            })\n                .then(response => {\n                    var msg = \"\";\n                    var color = \"\";\n                    var invalid = false;\n                    if (response.data) {\n                        msg = \"Old email is wrong or new email has wrong format\";\n                        color = \"#d32f2f\";\n                        invalid = true;\n                    }\n                    else {\n                        msg = \"Successfully Changed  Email\";\n                        color = \"#43A047\";\n                        invalid = false;\n                    }\n                    this.setState({\n                        oldEmail: \"\",\n                        newEmail: \"\",\n                        snackBarColor: color,\n                        snackBarMsg: msg,\n                        open: true,\n                        changeEmailFailed: invalid\n                    });\n                });\n        }\n        else {\n            this.setState({\n                oldEmail: \"\",\n                newEmail: \"\",\n                snackBarColor: \"#d32f2f\",\n                snackBarMsg: \"Please fill in blanks\",\n                open: true,\n                changeEmailFailed: true\n            });\n        }\n    }\n\n    handleFile(e) {\n        e.preventDefault();\n        // Read the first file that the user selected (if the user selected multiple\n        // files, we ignore the others).\n        var reader = new FileReader();\n        var file = e.target.files[0];\n        // Called once the browser finishes loading the image.\n        if (file.size > 1100000 || !file.type.match('image.*')) {\n            let msg = file.size > 1100000 ? \"File should be less than 1.1 MB\" : \"File is not an image file\";\n            this.setState({\n                snackBarColor: \"#d32f2f\",\n                snackBarMsg: msg,\n                open: true\n            });\n            return;\n        }\n        reader.onload = (upload) => {\n            this.setState({\n                img: upload.target.result,\n                cropperOpen: true\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n    handleFileClick(e) {\n        e.target.value = null;\n    }\n\n    handleRequestHide = () => {\n        this.setState({\n            cropperOpen: false,\n            img: null\n        });\n    }\n\n    handleCrop = () => {\n        this.setState({\n            cropperOpen: false,\n            img: this.refs.cropper.getCroppedCanvas().toDataURL()\n        });\n    }\n\n    handleSnackBarClose = () => {\n        this.setState({ open: false });\n    }\n\n    handleAvatarChange(e) {\n        e.preventDefault();\n        if (this.state.img !== null) {\n            ChangeAvatar(this.state.userData._id, this.state.img)\n                .then(response => {\n                    let userData = response.data;\n                    this.setState({ userData: userData });\n                    var user = {};\n                    user._id = userData._id;\n                    user.avatar = userData.avatar;\n                    user.friends = userData.friends;\n                    user.fullname = userData.fullname;\n                    localStorage.setItem('user', JSON.stringify(user));\n                    swal({\n                        title: \"Success!\",\n                        icon: \"success\",\n                        button: \"OK\",\n                    })\n                        .then(() => {\n                            this.handleRequestHide();\n                            location.reload();\n                        });\n                });\n        }\n    }\n    render() {\n        return (\n            <div className=\"setting-system-info\">\n                {this.state.cropperOpen &&\n                    <Dialog\n                        open={this.state.cropperOpen}\n                        onClose={this.handleRequestHide}>\n                        <DialogTitle>Adjust your avatar image</DialogTitle>\n                        <DialogContent>\n                            <Cropper\n                                ref='cropper'\n                                src={this.state.img}\n                                style={{ height: 400, width: '100%' }}\n                                aspectRatio={1 / 1} />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleRequestHide} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleCrop} color=\"primary\">\n                                Submit\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                }\n                <Snackbar\n                    autoHideDuration={4000}\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                    open={this.state.open}\n                    onClose={this.handleSnackBarClose}>\n                    <SnackbarContent\n                        style={{\n                            backgroundColor: this.state.snackBarColor\n                        }}\n                        message={\n                            <span style={{\n                                display: 'flex',\n                                alignItems: 'center'\n                            }}>\n                                {this.state.changeEmailFailed ?\n                                    <WarningIcon style={{ fontSize: '20px', marginRight: '10px' }} /> :\n                                    <CheckCircleIcon style={{ fontSize: '20px', marginRight: '10px' }} />\n                                }\n                                {this.state.snackBarMsg}\n                            </span>\n                        }\n                    />\n                </Snackbar>\n                <div className=\"col-md-3 system-settings\">\n                    {!('facebookID' in this.state.userData) &&\n                        <ExpansionPanel style={{ boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                Change Password\n                        </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <div className='row'>\n                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                        <InputLabel\n                                            style={{ color: '#607D8B' }}\n                                            htmlFor=\"oldpass\">\n                                            Old password\n                                </InputLabel>\n                                        <Input\n                                            type=\"password\"\n                                            id=\"oldpass\"\n                                            onChange={(e) => this.handleOldPass(e)}\n                                        />\n                                    </FormControl>\n                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                        <InputLabel\n                                            style={{ color: '#607D8B' }}\n                                            htmlFor=\"newpass\">\n                                            New Password\n                                </InputLabel>\n                                        <Input\n                                            type=\"password\"\n                                            id=\"newpass\"\n                                            onChange={(e) => this.handleNewPass(e)}\n                                        />\n                                    </FormControl>\n                                    <div className=\"progress\" style={{ height: '6px', marginTop: '-20px', borderRadius: '0' }}>\n                                        <div className={\"progress-bar \" + this.state.passwordClass}\n                                            role=\"progressbar\"\n                                            aria-valuemin=\"0\"\n                                            aria-valuemax=\"100\"\n                                            style={{ width: this.state.passwordStrength + \"%\" }}>\n                                        </div>\n                                    </div>\n                                    <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                        <InputLabel\n                                            style={{ color: '#607D8B' }}\n                                            htmlFor=\"confirmpass\">\n                                            Confirm Password\n                                </InputLabel>\n                                        <Input\n                                            type=\"password\"\n                                            id=\"confirmpass\"\n                                            onChange={(e) => this.handleNewPass2(e)}\n                                        />\n                                    </FormControl>\n                                    <button type=\"button\" onClick={() => this.handleChangePass()}\n                                        className=\"btn btn-blue-grey pull-right\" name=\"button\">Submit</button>\n                                </div>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>}\n                    <ExpansionPanel style={{ boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            Change Email\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <div className='row'>\n                                <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                    <InputLabel\n                                        style={{ color: '#607D8B' }}\n                                        htmlFor=\"oldemail\">\n                                        Old Email\n                                    </InputLabel>\n                                    <Input\n                                        id=\"oldemail\"\n                                        value={this.state.oldEmail}\n                                        onChange={(e) => this.handleOldEmail(e)}\n                                    />\n                                </FormControl>\n\n                                <FormControl fullWidth style={{ marginBottom: '20px' }}>\n                                    <InputLabel\n                                        style={{ color: '#607D8B' }}\n                                        htmlFor=\"newemail\">\n                                        New Email\n                                    </InputLabel>\n                                    <Input\n                                        id=\"newemail\"\n                                        value={this.state.newEmail}\n                                        onChange={(e) => this.handleNewEmail(e)}\n                                    />\n                                </FormControl>\n                                <button type=\"button\" className=\"btn btn-blue-grey pull-right\" name=\"button\" onClick={(e) => this.handleEmailChange(e)}>Submit</button>\n                            </div>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                    <ExpansionPanel style={{ boxShadow: '0 10px 28px 0 rgba(137,157,197,.12)' }}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            Change Avatar\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <div className='row'>\n                                <div className=\"col-md-8 col-md-offset-3\">\n                                    <div className=\"btn-group\" role=\"group\">\n                                        <label htmlFor=\"pic\">\n                                            <a>\n                                                <div className=\"thumbnail\" style={{ border: \"1px dashed black\", width: \"100px\", height: \"120px\" }}>\n                                                    <i className=\"fa fa-camera\" aria-hidden=\"true\"></i>\n                                                    <img src={this.state.img} className={hideElement(this.state.cropperOpen)}\n                                                        width=\"100px\" height=\"100px\" />\n                                                </div>\n                                            </a>\n                                        </label>\n                                        <input type=\"file\" accept=\".jpg,.jpeg,.png,.gif\" id=\"pic\" onClick={(e) => this.handleFileClick(e)}\n                                            onChange={(e) => this.handleFile(e)}></input>\n                                    </div>\n                                </div>\n                                <div className='col-md-12'>\n                                    <button type=\"button\" className=\"btn btn-blue-grey pull-right\" name=\"button\" onClick={(e) => this.handleAvatarChange(e)}>Submit</button>\n                                </div>\n                            </div>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { ActivityDetailCommentEntry } from '.';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\n\nexport default class ActivityCommentThread extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-10 col-md-12 col-sm-12 col-xs-12 col-lg-offset-1\">\n                        <div className=\"panel panel-default body-comments\">\n                            <div className=\"panel-heading\">\n                                <font style={{ color: \"grey\", fontSize: \"20px\" }}>Comments (\n                                    {this.props.count}\n                                    )</font>\n                                <ActivityDetailCommentEntry user={this.props.user} avatar={this.props.avatar} onPost={this.props.onPost} />\n                                <hr />\n                                <List>\n                                    {React.Children.map(this.props.children, function (child) {\n                                        return child;\n                                    })}\n                                </List>\n                                {\n                                    this.props.loadMore &&\n                                    <Button fullWidth disabled={!this.props.loadMore || this.props.count === 0 ||\n                                        this.props.count === this.props.children.length} onClick={() => this.props.onLoadComments()}>\n                                        Load Comments\n                                    </Button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Link from 'react-router-dom/Link';\n\nexport default class ActivityDetailCommentEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\"\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ text: e.target.value })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.text.trim() !== \"\") {\n            this.setState({ text: \"\" });\n            this.props.onPost(this.state.text);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"panel-heading\">\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <Link to={\"/profile/\" + this.props.user}>\n                            <img className=\"media-object\" src={this.props.avatar} height=\"45px\" style={{ marginTop: '1px' }} />\n                        </Link>\n                    </div>\n                    <div className=\"media-body\">\n                        <textarea name=\"name\" rows=\"8\" cols=\"40\" placeholder=\"Post your comments\" value={this.state.text} onChange={(e) => this.handleChange(e)}></textarea>\n\n                        <button type=\"button\" className=\"btn btn-blue-grey pull-right waves-effect waves-light\" type=\"button\" name=\"button\" onClick={(e) => this.handleSubmit(e)}>Post</button>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n","import React from 'react';\nimport Link from 'react-router-dom/Link';\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\n\nvar moment = require('moment');\n// var debug = require('react-debug');\n\nexport default class ActivityFeedItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = props.data;\n    }\n\n    render() {\n        var startTime = moment(this.state.startTime).calendar();\n        var endTime = moment(this.state.endTime).calendar();\n        return (\n            <Card style={{ marginBottom: '30px', boxShadow: '0 10px 28px 0 rgba(137, 157, 197, .12)' }}>\n                <CardHeader\n                    style={{ fontFamily: 'inherit' }}\n                    title={this.state.author.fullname}\n                    subheader={this.state.author.description}\n                    avatar={<Link to={\"/profile/\" + this.state.author._id}>\n                        <Avatar src={this.state.author.avatar} />\n                    </Link>}\n                />\n                <Link to={\"/activityDetail/\" + this.state._id}>\n                    <CardMedia image={this.state.img}\n                        style={{ height: '400px' }}\n                    />\n                </Link>\n                <CardContent>\n                    <div className=\"row\" style={{ marginBottom: '20px' }}>\n                        <div className=\"col-md-12\">\n                            <div className='row' style={{ marginTop: '10px' }}>\n                                <div className='col-md-12'>\n                                    <Chip\n                                        avatar={\n                                            <Avatar>\n                                                <Icon style={{ fontSize: '20px' }} className='fas fa-location-arrow'></Icon>\n                                            </Avatar>\n                                        }\n                                        label={this.state.location}\n                                    />\n                                    <Chip className='pull-right' style={{\n                                        marginRight: '10px',\n                                        backgroundColor: \"#607D8B\", color: 'white'\n                                    }}\n                                        label={this.state.type} />\n                                </div>\n                            </div>\n                            <h3>{this.state.title}</h3>\n                            <h4>{startTime + \"--\" + endTime}</h4>\n                        </div>\n                    </div>\n                    <div style={{ marginBottom: '10px' }}>\n                        {this.state.description}\n                    </div>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n","import React from 'react';\nimport { uploadImg } from '../../utils';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n// var emojione = require('emojione');\nlet swal = require('sweetalert');\n\n\nexport default class ChatEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            imgs: []\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ text: emojione.shortnameToUnicode(e.target.value) })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (e.key === \"Enter\" || e.button === 0) {\n            if (this.state.text.trim() !== \"\" || this.state.imgs.length != 0) {\n                this.props.onPost(this.state.text.trim(), this.state.imgs);\n                this.setState({ text: \"\", imgs: [] });\n            }\n        }\n    }\n\n    componentDidMount() {\n        $('#chattext').jemoji({\n            folder: 'emojis/',\n            btn: $('#openchatemoji'),\n            container: $('#chattext').parent().parent(),\n            navigation: false\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"panel-footer\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 col-xs-10 col-sm-10\">\n                        <textarea id=\"chattext\" className=\"form-control msg nohover non-active\" name=\"name\" rows=\"5\" value={this.state.text}\n                            onChange={(e) => this.handleChange(e)} onFocus={(e) => this.handleChange(e)} cols=\"40\" placeholder=\"please type text\"\n                            onKeyUp={(e) => this.handleSubmit(e)}></textarea>\n\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"...\">\n                            <label htmlFor=\"pics\" style={{ marginRight: '20px' }}>\n                                <a><i className=\"fa fa-camera\" aria-hidden=\"true\"></i></a>\n                            </label>\n                            <input type=\"file\" accept=\".jpg,.jpeg,.png,.gif\" id=\"pics\" multiple onChange={(e) =>\n                                uploadImg(e, () => {\n                                    swal(\"Error\", \"Only 3 images at a time please\", \"error\");\n                                }, () => {\n                                    swal(\"Error\", \"File size is too large\", \"error\");\n                                }, () => {\n                                    swal(\"Error\", \"File type is wrong\", \"error\");\n                                }, (res) => {\n                                    var imgs = this.state.imgs;\n                                    imgs.push(res.target.result);\n                                    this.setState({\n                                        imgs: imgs\n                                    })\n                                })}></input>\n                            <a id=\"openchatemoji\"><span><i className=\"far fa-smile\" aria-hidden=\"true\"></i></span></a>\n                        </div>\n                    </div>\n                    <div className=\"col-md-2 col-sm-2 col-xs-2 send\">\n                        <button type=\"button\" className=\"btn btn-default btn-blue-grey pull-right\" name=\"button\"\n                            onClick={(e) => this.handleSubmit(e)}>Send</button>\n                    </div>\n                </div>\n                <div className='row'>\n                    <GridList cellHeight={160} cols={3}>\n                        {this.state.imgs.map((img, idx) => {\n                            return <GridListTile key={idx}>\n                                <img src={img} />\n                            </GridListTile>\n                        })}\n                    </GridList>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'React';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Badge from '@material-ui/core/Badge';\n\n\n// let debug = require('react-debug');\n\nexport default class ChatNavChatItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            online: false\n        }\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.props.switchUser(this.props.data);\n    }\n\n\n    render() {\n        var icon = this.props.data.online ?\n            <Icon className=\"fas fa-circle\" style={{ color: 'green', fontSize: '20px' }} /> :\n            <Icon className=\"far fa-circle\" style={{ fontSize: '20px' }} />;\n        let lastmessage = this.props.messageData.lastmessage;\n        var messagePreview = \"\";\n        if (lastmessage !== undefined && Object.keys(lastmessage).length !== 0) {\n            if (lastmessage.text.length === 0 && lastmessage.imgs.length !== 0) {\n                messagePreview = \"[Image]\"\n            }\n            else if (lastmessage.text.length < 60) {\n                messagePreview = lastmessage.text;\n            }\n            else {\n                messagePreview = lastmessage.text.substring(0, 60) + '...';\n            }\n        }\n\n        let unreadCount = this.props.messageData.unread[this.props.currentUser];\n\n        return (\n            <div>\n                <ListItem button onClick={(e) => this.handleClick(e)}\n                    style={{\n                        alignItems: \"flex-start\"\n                    }}>\n                    <ListItemAvatar\n                        style={{\n                            marginTop: \"5px\"\n                        }}>\n                        {unreadCount !== undefined && unreadCount !== 0 ?\n                            <Badge badgeContent={unreadCount} color='secondary'>\n                                <Avatar src={this.props.data.avatar} />\n                            </Badge> : <Avatar src={this.props.data.avatar} />\n                        }\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={this.props.data.fullname}\n                        secondary={\n                            <span>\n                                {messagePreview}\n                            </span>\n                        }\n                    />\n                    <ListItemSecondaryAction style={{ marginRight: '10px' }}>\n                        {icon}\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Divider inset />\n            </div>\n        )\n    }\n\n}\n","//import Activity presentations\nimport ActivityFeedItem from './activityFeedItem'\n\n//import activityDetail presentations\nimport ActivityDetailCommentEntry from './activityDetailCommentEntry'\nimport ActivityCommentThread from './activityCommentThread'\n\n//import Post presentations\nimport PostCommentEntry from './postCommentEntry'\nimport PostCommentThread from './postCommentThread'\nimport PostEntry from './postEntry'\nimport PostFeedItem from './postFeedItem'\n\n//import Chat presentations\nimport ChatEntry from './chatentry'\nimport ChatNavChatItem from './chatnavchatitem'\n\n\nexport {\n    ActivityFeedItem,\n    ActivityDetailCommentEntry,\n    ActivityCommentThread,\n\n    PostCommentEntry,\n    PostCommentThread,\n    PostEntry,\n    PostFeedItem,\n\n    ChatEntry,\n    ChatNavChatItem\n}\n","import React from 'react';\n\nexport default class PostCommentEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\"\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ text: e.target.value })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.text.trim() !== \"\") {\n            this.setState({ text: \"\" });\n            this.props.onPostComment(this.state.text);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <textarea name=\"name\" rows=\"8\" cols=\"40\" placeholder=\"Write a comment\" value={this.state.text} onChange={(e) => this.handleChange(e)}></textarea>\n                <button className=\"btn btn-blue-grey pull-right\" type=\"button\" name=\"button\" onClick={(e) => this.handleSubmit(e)}>Submit</button>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { PostCommentEntry } from '.';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\n\n// let debug = require('react-debug');\n\nexport default class PostCommentThread extends React.Component {\n    render() {\n        return (\n            <div>\n                <List>\n                    {this.props.children}\n                </List>\n                {\n                    <Button fullWidth disabled={!this.props.loadMore ||\n                        this.props.commentsCount === 0 || this.props.children.length === this.props.commentsCount} onClick={() => this.props.loadCommentClick()}>\n                        Load comments\n                    </Button>\n                }\n                <PostCommentEntry onPostComment={this.props.onPostComment} />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Link from 'react-router-dom/Link';\nimport { uploadImg } from '../../utils';\n\n// var debug = require('react-debug');\n// var emojione = require('emojione');\nlet swal = require('sweetalert');\n\nexport default class PostEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\",\n            img: [],\n            fileTooLarge: false,\n            fileWrongType: false,\n            tooManyFiles: false\n        }\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ text: emojione.shortnameToUnicode(e.target.value) });\n    }\n\n    handlePost(e) {\n        e.preventDefault();\n        var text = this.state.text.trim();\n        if (text !== \"\") {\n            this.props.onPost(text, this.state.img);\n            this.setState(\n                {\n                    text: \"\",\n                    img: []\n                }\n            );\n        }\n    }\n\n    componentDidMount() {\n        $('#inputtext').jemoji({\n            folder: 'emojis/',\n            btn: $('#openEmoji'),\n            container: $('#inputtext').parent()\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"panel panel-default post-send\">\n                <div className=\"panel-heading\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <Link to={\"/profile/\" + this.props.userData._id}>\n                                <img className=\"media-object\" src={this.props.userData.avatar} height=\"50px\" alt=\"...\"></img>\n                            </Link>\n                        </div>\n                        <div className=\"media-body\">\n                            <textarea name=\"name\" id=\"inputtext\" rows=\"8\" cols=\"40\" placeholder=\"What's on your mind\"\n                                value={this.state.text} onChange={(e) => this.handleChange(e)} onFocus={(e) => this.handleChange(e)}></textarea>\n                            <div className=\"btn-group\" role=\"group\" aria-label=\"...\">\n                                <label htmlFor=\"pic\">\n                                    <a><i className=\"fa fa-camera\" aria-hidden=\"true\"></i></a>\n                                </label>\n                                <input type=\"file\" accept=\".jpg,.jpeg,.png,.gif\" id=\"pic\" onChange={(e) =>\n                                    uploadImg(e, () => {\n                                        swal(\"Error\", \"Only 3 images at a time please\", \"error\");\n                                    }, () => {\n                                        swal(\"Error\", \"File size is too large\", \"error\");\n                                    }, () => {\n                                        swal(\"Error\", \"File type is wrong\", \"error\");\n                                    }, (res) => {\n                                        var img = this.state.img;\n                                        img.push(res.target.result);\n                                        this.setState({\n                                            img: img\n                                        })\n                                    })} multiple></input>\n                                <a id=\"openEmoji\"><span><i className=\"far fa-smile\" aria-hidden=\"true\"></i></span></a>\n                            </div>\n                            <button type=\"button\" className=\"btn btn-blue-grey pull-right\" name=\"button\" onClick={(e) => this.handlePost(e)}>Submit</button>\n                        </div>\n                        <div className=\"media-footer\">\n                            <div className=\"postImg\">\n                                {\n                                    this.state.img.map((element, index) => {\n                                        return (\n                                            <a key={index} style={{ \"width\": \"calc(\" + (100 / (this.state.img.length > 2 ? 2 : this.state.img.length)) + \"% - 4px)\" }}>\n                                                <img src={element} alt=\"\" style={{ 'width': \"100%\" }} />\n                                            </a>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Link from 'react-router-dom/Link';\nimport Lightbox from 'react-images';\nimport { PostCommentThread } from '.';\nimport { likePost, unLikePost, postComment, didUserLike, getPostComments } from '../../utils';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Divider from '@material-ui/core/Divider';\n\nvar moment = require('moment');\n\nmoment.updateLocale('en', {\n    longDateFormat: {\n        LT: \"h:mm:ss A\"\n    }\n});\n\nexport default class PostFeedItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            comments: [],\n            isOpen: false,\n            currentImage: 0,\n            loadMore: true\n        };\n    }\n\n    handlePostComment(comment) {\n        postComment(this.state.data._id, this.props.currentUser, comment)\n            .then(response => {\n                let newFeedItem = response.data;\n                this.setState({\n                    data: newFeedItem\n                }, () => {\n                    this.loadComments(true);\n                });\n            });\n    }\n\n    handleImgClick(index, e) {\n        e.preventDefault();\n        this.setState({\n            currentImage: index,\n            isOpen: true\n        });\n    }\n    closeLightbox(e) {\n        e.preventDefault();\n        this.setState({\n            isOpen: false\n        })\n    }\n\n    handleLikeClick(e) {\n        e.preventDefault();\n\n        if (e.button === 0) {\n            var handler = (likeCounter) => {\n                this.state.data.likeCounter = likeCounter;\n                var newData = this.state.data;\n                this.setState(\n                    {\n                        data: newData\n                    }\n                );\n            };\n\n            if (!didUserLike(this.state.data.likeCounter, this.props.currentUser)) {\n                likePost(this.state.data._id, this.props.currentUser)\n                    .then(response => handler(response.data));\n            }\n            else {\n                unLikePost(this.state.data._id, this.props.currentUser)\n                    .then(response => handler(response.data));\n            }\n        }\n    }\n\n    loadComments(justPosted) {\n        let date = justPosted || this.state.comments.length == 0 ? (new Date()).getTime() :\n            this.state.comments[this.state.comments.length - 1].postDate;\n\n        getPostComments(this.state.data._id, date)\n            .then(response => {\n                let load = response.data.length > 0;\n                let postComments = justPosted ? response.data : this.state.comments.concat(response.data);\n                this.setState({\n                    loadMore: load,\n                    comments: postComments\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (JSON.stringify(this.props.data) !== JSON.stringify(prevProps.data)) {\n            this.setState({\n                data: this.props.data,\n                comments: []\n            })\n        }\n    }\n\n    render() {\n        var data = this.state.data;\n        var contents;\n        switch (data.type) {\n            case \"general\":\n                contents = data.contents;\n                break;\n            default:\n                throw new Error(\"Unknown FeedItem: \" + data.type);\n        }\n\n        var imgs = [];\n        var images = [];\n        var display = [];\n        imgs = contents.img;\n        imgs.map((obj, i) => {\n            display.push(\n                <GridListTile key={i}>\n                    <a onClick={(e) => this.handleImgClick(i, e)}>\n                        <img src={obj} style={{ 'width': \"100%\" }} />\n                    </a>\n                </GridListTile>\n            );\n            images.push({\n                src: obj,\n                caption: contents.text\n            });\n        });\n\n        var time = moment(contents.postDate).calendar();\n\n        if ((new Date().getTime()) - contents.postDate <= 3600000)\n            time = moment(contents.postDate).fromNow();\n\n        return (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <Link to={\"/profile/\" + contents.author._id}>\n                                <img className=\"media-object\" src={contents.author.avatar} height=\"50px\" alt=\"...\"></img>\n                            </Link>\n                        </div>\n                        <div className=\"media-body\">\n                            <h4 className=\"media-heading\">{contents.author.fullname} </h4>\n                            <span style={{ \"fontSize\": \"12px\" }}>{time}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"panel-body\">\n                    <p>\n                        {contents.text}\n                    </p>\n                    {display.length > 0 && <Divider light />}\n                    {\n                        <Lightbox\n                            images={images}\n                            isOpen={this.state.isOpen}\n                            currentImage={this.state.currentImage}\n                            onClose={(e) => this.closeLightbox(e)}\n                            showThumbnails={true}\n                            onClickThumbnail={(index) => {\n                                this.setState({\n                                    currentImage: index\n                                })\n                            }}\n                            onClickPrev={() => {\n                                this.setState({\n                                    currentImage: (this.state.currentImage + images.length - 1) % images.length\n                                })\n                            }}\n                            onClickNext={() => {\n                                this.setState({\n                                    currentImage: (this.state.currentImage + 1) % images.length\n                                })\n                            }}\n                        />\n                    }\n                    <GridList cellHeight={160} cols={3} style={{ marginTop: '20px' }}>\n                        {display}\n                    </GridList>\n                </div>\n                <div className=\"panel-footer\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                                <FormControlLabel\n                                    style={{ marginTop: '3px', marginLeft: '5px' }}\n                                    control={\n                                        <Checkbox onClick={(e) => this.handleLikeClick(e)}\n                                            style={{ width: '30px', height: '30px' }}\n                                            checked={didUserLike(this.state.data.likeCounter, this.props.currentUser)}\n                                            icon={<Icon style={{ fontSize: '20px' }} className=\"far fa-heart\" />}\n                                            checkedIcon={<Icon className=\"fas fa-heart\" style={{ color: 'red', fontSize: '20px' }} />} />\n                                    }\n                                    label={data.likeCounter.length}\n                                />\n                                <Icon className=\"fas fa-comments\" style={{ marginTop: '8px', fontSize: '20px', width: '25px' }} />\n                                <div style={{ marginTop: '8px' }}><span style={{ marginLeft: '5px' }}>{this.state.data.commentsCount}</span></div>\n                            </div>\n                            <PostCommentThread onPostComment={(comment) => this.handlePostComment(comment)}\n                                loadCommentClick={() => this.loadComments(false)} loadMore={this.state.loadMore}\n                                commentsCount={this.state.data.commentsCount}>\n                                {this.state.comments.map((comment, i) => {\n                                    //default time c\n                                    var commentTime = moment(comment.postDate).calendar();\n                                    //if less than 24 hours, use relative time\n                                    if ((new Date().getTime()) - comment.postDate <= 86400000)\n                                        commentTime = moment(comment.postDate).fromNow();\n                                    return (\n                                        <div>\n                                            <ListItem key={i}>\n                                                <ListItemAvatar>\n                                                    <Link to={'/profile/' + comment.author._id}>\n                                                        <Avatar src={comment.author.avatar} />\n                                                    </Link>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={\n                                                    <span>\n                                                        {comment.author.fullname}\n                                                        <span style={{ fontSize: '12px', marginLeft: '15px' }}>{commentTime}</span>\n                                                    </span>\n                                                }\n                                                    secondary={comment.text} />\n                                            </ListItem>\n                                        </div>\n                                    )\n                                })}\n                            </PostCommentThread>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAWA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA1BA;AA4BA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AA3CA;AA6CA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAnDA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAfA;AAiBA;AAzCA;AANA;AAmDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AADA;AAPA;AADA;AAzDA;AAyEA;;;;AAvMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAuGA;AACA;AADA;AAGA;AACA;AA3GA;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAtIA;AA+IA;AACA;AACA;AACA;AAlJA;AAoJA;AACA;AACA;AAFA;AAIA;AACA;AAzJA;AA2JA;AACA;AADA;AAGA;AACA;AA/JA;AAiKA;AACA;AADA;AAGA;AACA;AArKA;AAuKA;AACA;AADA;AAGA;AACA;AAzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAFA;AAkBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAQA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAeA;AACA;AACA;AACA;AACA;;;AAgCA;AACA;AACA;AAGA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAjCA;AACA;AAmCA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AAFA;AATA;AALA;AAqBA;AAvBA;AADA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AA/BA;AAwCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAGA;AAPA;AALA;AALA;AAsBA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AANA;AAUA;AAzBA;AADA;AAJA;AAkCA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAfA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AALA;AADA;AArBA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AAAA;AAAA;AAAA;AAAA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAZA;AADA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AATA;AAWA;AACA;AADA;AAGA;AAfA;AADA;AApDA;AADA;AA0EA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAFA;AADA;AADA;AAYA;AAvFA;AADA;AADA;AA6FA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAZA;AAcA;AAfA;AAkBA;AA5BA;AAhMA;AAgOA;;;;AAzdA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAyDA;AACA;AADA;AAGA;AACA;AA7DA;AA+DA;AACA;AACA;AACA;AAlEA;AA0EA;AACA;AACA;AACA;AACA;AACA;AA7EA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAAA;AAWA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAUA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAlCA;AAwCA;;;;AA5HA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACXA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAgBA;;;;AAzDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAMA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AA6EA;AACA;AACA;AA7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAYA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AACA;;;AAMA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AADA;AAJA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AADA;AARA;AADA;AADA;AAVA;AANA;AAoCA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAfA;AATA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AAAA;AACA;AACA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAFA;AAFA;AAUA;AAZA;AAcA;AAfA;AARA;AARA;AAoCA;AAEA;AACA;AAAA;AACA;AADA;AAlDA;AArBA;AA6EA;AAAA;AAAA;AAhJA;AADA;AAqJA;;;;AA7OA;AACA;AADA;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;AAdA;AACA;AACA;AAaA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAiDA;AACA;AACA;AAFA;AAIA;AACA;AAtDA;AAwDA;AACA;AACA;AAFA;AAIA;AACA;AA7DA;AAyHA;AACA;AADA;AAGA;AACA;AA7HA;AA+HA;AACA;AADA;AAGA;AACA;AAnIA;AAkJA;AACA;AADA;AAGA;AACA;AApJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAFA;AAgBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAgBA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAcA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAQA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAXA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AADA;AADA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AATA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AADA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAJA;AADA;AAfA;AA+BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AANA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AANA;AAdA;AADA;AAjFA;AADA;AAkHA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAPA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAZA;AAnHA;AADA;AADA;AADA;AA/BA;AADA;AA+KA;;;;AAjVA;AACA;AAmVA;;;;;;;;;;;;;;;;;;;AC7WA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AACA;AACA;;;AACA;AACA;;;AACA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AACA;AACA;;;AAAA;AACA;;;;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AAAA;AAVA;AADA;AAwBA;;;;AAhCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAEA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AANA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AALA;AANA;AAnBA;AAkCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AADA;AAtCA;AA8CA;;;;AArGA;AACA;AAuGA;;;;;;;;;;;;;;;;;;;;ACtHA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAFA;AAeA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAHA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AANA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AANA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AANA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AANA;AAhEA;AA+EA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AADA;AAnFA;AA4FA;;;;AA5OA;AACA;AA8OA;;;;;;;;;;;;;;;;;;;;AC5PA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAqBA;AACA;AACA;AAFA;AAIA;AACA;AA1BA;AA4BA;AACA;AADA;AAGA;AACA;AAhCA;AA4FA;AACA;AACA;AA9FA;AAgGA;AACA;AACA;AAhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAYA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAeA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AA/BA;AACA;AAsCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AAPA;AAWA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AANA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AADA;AAnDA;AAJA;AAkEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AAJA;AAYA;AAbA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAFA;AADA;AAnBA;AAfA;AA9EA;AADA;AAzBA;AA8JA;;;;AA7SA;AACA;AA8SA;;;;;;;;;;;;;;;;;;;;AC/UA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAQA;AACA;AACA;AARA;AACA;AADA;AAFA;AAKA;AACA;;;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AADA;AACA;AAGA;AAEA;AAAA;AACA;AADA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AANA;AARA;AAmBA;AApBA;AAsBA;AA9BA;AAgCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AANA;AAZA;AAuBA;AAxBA;AA0BA;AA3CA;AA6CA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAZA;AAgBA;;;;AA1HA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AA+DA;AACA;AACA;AACA;AACA;AACA;AApEA;AAgFA;AACA;AADA;AAGA;AACA;AApFA;AAsFA;AACA;AACA;AACA;AAvFA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AAAA;AASA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AA5BA;AAkCA;;;;AAhIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;AAjBA;AACA;AACA;AAgBA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAqBA;AACA;AADA;AAGA;AACA;AAzBA;AA2BA;AAAA;AAAA;AACA;AACA;AA7BA;AA+BA;AACA;AACA;AAjCA;AAmCA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AAFA;AAIA;AACA;AA1CA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AA2BA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AARA;AALA;AALA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AANA;AAUA;AAvBA;AADA;AA/BA;AAxBA;AAqFA;;;;AAtIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;AALA;AACA;AACA;AAIA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AALA;AAaA;;;;AA/CA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACVA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AALA;AAaA;;;;AAhDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;AAfA;AACA;AACA;AAcA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8CA;AACA;AADA;AAGA;AACA;AAlDA;AAoDA;AACA;AACA;AAtDA;AAwDA;AACA;AACA;AA1DA;AA4DA;AACA;AACA;AAFA;AAIA;AACA;AA/DA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;;;AAwBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AANA;AANA;AADA;AADA;AADA;AADA;AAuBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AARA;AALA;AALA;AAuBA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AADA;AANA;AAUA;AA3BA;AA+BA;AACA;AAGA;AAGA;AACA;AAGA;AA1FA;AA8FA;;;;AApKA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;;;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;AAXA;AACA;AACA;AAUA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAsEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA7EA;AA+EA;AACA;AADA;AAGA;AACA;AACA;AACA;AAnFA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAEA;AADA;AAGA;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAmBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AARA;AALA;AALA;AADA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AADA;AADA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAvBA;AADA;AA3CA;AADA;AADA;AAsFA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AADA;AADA;AADA;AAzFA;AAFA;AADA;AADA;AA0GA;;;;AApMA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;AAjBA;AACA;AACA;AAeA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AAkMA;AACA;AACA;AAFA;AAIA;AACA;AAvMA;AAyMA;AACA;AACA;AAFA;AAIA;AACA;AA9MA;AAgNA;AACA;AACA;AAhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAFA;AAkBA;AACA;;;AACA;AACA;AAEA;AADA;AAGA;;;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AArCA;AAuCA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;;;AAoBA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAJA;AAXA;AAqBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AARA;AALA;AALA;AAuBA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AA7CA;AADA;AAJA;AAuDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AANA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AADA;AAJA;AAmCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AADA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AADA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAhBA;AADA;AAJA;AA5FA;AA9CA;AAwKA;;;;AAvZA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAbA;AADA;AADA;AADA;AADA;AA4BA;;;;AApCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACLA;AACA;;;AAAA;AACA;;;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AANA;AADA;AAiBA;;;;AAxCA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAJA;AAQA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AAbA;AADA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAnBA;AADA;AAuBA;AAAA;AAAA;AACA;AADA;AAxBA;AAdA;AA4CA;;;;AAvDA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAbA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AALA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AADA;AA3BA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AALA;AADA;AAjCA;AA4CA;;;;AA/EA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAEA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AADA;AALA;AAUA;AACA;AACA;AACA;AAAA;AACA;AADA;AAHA;AAQA;AAAA;AAAA;AACA;AADA;AAtBA;AA0BA;AA3BA;AA8BA;;;;AAjEA;AACA;AADA;;;;;;;;;;;;;;;;;;;ACZA;AACA;;;AAEA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAEA;AACA;;;AAAA;AACA;;;;;AAHA;AACA;AACA;AARA;AACA;AACA;AANA;AAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;AA5BA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAKA;AAVA;AAaA;;;;AAhBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAbA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAIA;AARA;AADA;AA/BA;AADA;AADA;AAkDA;;;;AA5FA;AACA;AADA;;;;;;;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AADA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AANA;AADA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AApBA;AAuBA;AAAA;AAAA;AACA;AADA;AA7BA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AATA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAZA;AADA;AAiBA;AA3BA;AAhBA;AADA;AADA;AA/CA;AAmGA;;;;AA9NA;AACA;AADA;;;;A","sourceRoot":""}