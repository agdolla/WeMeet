{"version":3,"file":"10.app.js","sources":["webpack:///app/components/layouts/notification.jsx"],"sourcesContent":["import React from 'react';\r\nimport { NotificationBody } from '../containers';\r\nimport { Navbar } from '../containers';\r\nimport {\r\n    getNotificationData, deleteNotification,\r\n    acceptFriendRequest, acceptActivityRequest\r\n} from '../../utils';\r\nimport { socket } from '../../utils/credentials';\r\n\r\n// let debug = require('react-debug');\r\n\r\nexport default class Notification extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            FR: [],\r\n            AN: []\r\n        }\r\n    }\r\n\r\n    getData() {\r\n        getNotificationData(this.props.user._id)\r\n            .then(response => {\r\n                let notificationData = response.data;\r\n                var FR = [];\r\n                var AN = [];\r\n                notificationData.contents.map((notification) => {\r\n                    if (notification.type === \"FR\") {\r\n                        FR.insert(0, notification);\r\n                    }\r\n                    else {\r\n                        AN.insert(0, notification);\r\n                    }\r\n                });\r\n                this.setState({\r\n                    FR: FR,\r\n                    AN: AN\r\n                });\r\n            });\r\n    }\r\n\r\n    onNotification = () => {\r\n        this.getData();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n        socket.on('notification', this.onNotification);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.removeEventListener('notification')\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        deleteNotification(id, this.props.user._id)\r\n            .then(response => {\r\n                let notificationData = response.data;\r\n                var FR = [];\r\n                var AN = [];\r\n                notificationData.contents.forEach((notification) => {\r\n                    if (notification.type === \"FR\") {\r\n                        FR.insert(0, notification);\r\n                    }\r\n                    else {\r\n                        AN.insert(0, notification);\r\n                    }\r\n                });\r\n                this.setState({\r\n                    FR: FR,\r\n                    AN: AN\r\n                });\r\n            });\r\n    }\r\n\r\n    handleFriendAccept = (id, user) => {\r\n        acceptFriendRequest(id, this.props.user._id)\r\n            .then(() => {\r\n                this.getData();\r\n                socket.emit(\"accept notification\", {\r\n                    target: user\r\n                });\r\n                location.reload();\r\n            });\r\n    }\r\n\r\n    handleActivityAccept = (notificationid, user) => {\r\n        acceptActivityRequest(notificationid, this.props.user._id)\r\n            .then(() => {\r\n                this.getData();\r\n                socket.emit(\"accept notification\", {\r\n                    target: user\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ marginTop: '50px' }}>\r\n                <Navbar user={this.props.user} notification=\"active\" />\r\n                <div className=\"container\">\r\n                    <div className=\"row notification\">\r\n                        <div className=\"col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 col-xs-12\">\r\n                            <NotificationBody AN={this.state.AN} FR={this.state.FR}\r\n                                handleDelete={this.handleDelete}\r\n                                handleActivityAccept={this.handleActivityAccept}\r\n                                handleFriendAccept={this.handleFriendAccept}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AACA;AACA;AAhCA;AA2CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA9DA;AAgEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAzEA;AA2EA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAjFA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAMA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AA4CA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AADA;AADA;AAFA;AAeA;;;;AAvGA;AACA;AADA;;;;A","sourceRoot":""}