{"version":3,"sources":["app\\post\\postEntry.js"],"names":["debug","require","PostEntry","props","state","text","img","fileTooLarge","fileWrongType","e","preventDefault","setState","target","value","trim","onPost","files","i","length","file","size","type","match","reader","FileReader","onload","push","result","readAsDataURL","userData","_id","avatar","handleChange","uploadImg","handlePost","map","element","index","Component"],"mappings":"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","file":"postEntry.js","sourceRoot":"C:/Users/Vincent/Desktop/wemeet/client","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport {hideElement} from '../util';\r\nvar debug = require('react-debug');\r\n\r\nexport default class PostEntry extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      img: [],\r\n      fileTooLarge:false,\r\n      fileWrongType:false\r\n    }\r\n  }\r\n\r\n  handleChange(e){\r\n    e.preventDefault();\r\n    this.setState({text:e.target.value});\r\n  }\r\n\r\n  handlePost(e){\r\n    e.preventDefault();\r\n    var text = this.state.text.trim();\r\n    if(text !== \"\"){\r\n      this.props.onPost(text,this.state.img);\r\n      this.setState(\r\n        {\r\n          text:\"\",\r\n          img:[]\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  uploadImg(e){\r\n    e.preventDefault();\r\n    var files = e.target.files; // FileList object\r\n\r\n    // Loop through the FileList and render image files as thumbnails.\r\n    for (var i = 0; i<files.length; i++) {\r\n      var file = files[i];\r\n\r\n      if(file.size > 1500000){\r\n        return this.setState({\r\n          fileTooLarge:true\r\n        })\r\n      }\r\n      else if(!file.type.match('image.*')){\r\n        return this.setState({\r\n          fileWrongType:true\r\n        })\r\n      }\r\n\r\n      var reader = new FileReader();\r\n\r\n      // Closure to capture the file information.\r\n      reader.onload = (() => {\r\n        return (e) => {\r\n          var img = this.state.img;\r\n          img.push(e.target.result);\r\n          this.setState({\r\n            img:img\r\n          })\r\n        };\r\n      })(file);\r\n\r\n      // Read in the image file as a data URL.\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"panel panel-default post-send\">\r\n        <div className=\"panel-heading\">\r\n          <div className=\"media\">\r\n            <div className=\"media-left\">\r\n              <Link to={\"profile/\"+this.props.userData._id}>\r\n                <img className=\"media-object\" src={this.props.userData.avatar} height=\"50px\" alt=\"...\"></img>\r\n              </Link>\r\n            </div>\r\n            <div className=\"media-body\">\r\n              <textarea name=\"name\" rows=\"8\" cols=\"40\" placeholder=\"What's on your mind\"\r\n                value={this.state.text} onChange={(e)=>this.handleChange(e)}></textarea>\r\n              <div className=\"btn-group\" role=\"group\" aria-label=\"...\">\r\n                <label htmlFor=\"pic\">\r\n                  <a><i className=\"fa fa-camera\" aria-hidden=\"true\"></i></a>\r\n                </label>\r\n                <input type=\"file\" accept=\".jpg,.jpeg,.png,.gif\" id=\"pic\" onChange={(e)=>this.uploadImg(e)} multiple></input>\r\n              </div>\r\n              <button type=\"button\" className=\"btn btn-blue-grey pull-right\" name=\"button\" onClick={(e)=>this.handlePost(e)}>Submit</button>\r\n            </div>\r\n            <div className=\"media-footer\">\r\n              <div className={\"alert alert-warning alert-dismissible \"+hideElement(!this.state.fileWrongType)} role=\"alert\">\r\n                <strong>File is not a image file</strong>\r\n              </div>\r\n              <div className={\"alert alert-warning alert-dismissible \"+hideElement(!this.state.fileTooLarge)} role=\"alert\">\r\n                <strong>File is too large</strong>\r\n              </div>\r\n              <div className=\"postImg\">\r\n                {\r\n                  this.state.img.map((element, index) =>{\r\n                    return(\r\n                        <div style={{\"width\":\"calc(\"+(100/(this.state.img.length>2?2:this.state.img.length))+\"% - 4px)\"}}>\r\n                          <img src={element} key={index} alt=\"\" style={{'width':\"100%\"}}/>\r\n                        </div>\r\n                      )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}