'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = require('react-debug');

var PostEntry = function (_React$Component) {
  _inherits(PostEntry, _React$Component);

  function PostEntry(props) {
    _classCallCheck(this, PostEntry);

    var _this = _possibleConstructorReturn(this, (PostEntry.__proto__ || Object.getPrototypeOf(PostEntry)).call(this, props));

    _this.state = {
      text: "",
      img: [],
      fileTooLarge: false,
      fileWrongType: false
    };
    return _this;
  }

  _createClass(PostEntry, [{
    key: 'handleChange',
    value: function handleChange(e) {
      e.preventDefault();
      this.setState({ text: e.target.value });
    }
  }, {
    key: 'handlePost',
    value: function handlePost(e) {
      e.preventDefault();
      var text = this.state.text.trim();
      if (text !== "") {
        this.props.onPost(text, this.state.img);
        this.setState({
          text: "",
          img: []
        });
      }
    }
  }, {
    key: 'uploadImg',
    value: function uploadImg(e) {
      var _this2 = this;

      e.preventDefault();
      var files = e.target.files; // FileList object

      // Loop through the FileList and render image files as thumbnails.
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        if (file.size > 1500000) {
          return this.setState({
            fileTooLarge: true
          });
        } else if (!file.type.match('image.*')) {
          return this.setState({
            fileWrongType: true
          });
        }

        var reader = new FileReader();

        // Closure to capture the file information.
        reader.onload = function () {
          return function (e) {
            var img = _this2.state.img;
            img.push(e.target.result);
            _this2.setState({
              img: img
            });
          };
        }(file);

        // Read in the image file as a data URL.
        reader.readAsDataURL(asdasd);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        { className: 'panel panel-default post-send' },
        _react2.default.createElement(
          'div',
          { className: 'panel-heading' },
          _react2.default.createElement(
            'div',
            { className: 'media' },
            _react2.default.createElement(
              'div',
              { className: 'media-left' },
              _react2.default.createElement(
                _reactRouter.Link,
                { to: "profile/" + this.props.userData._id },
                _react2.default.createElement('img', { className: 'media-object', src: this.props.userData.avatar, height: '50px', alt: '...' })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'media-body' },
              _react2.default.createElement('textarea', { name: 'name', rows: '8', cols: '40', placeholder: 'What\'s on your mind',
                value: this.state.text, onChange: function onChange(e) {
                  return _this3.handleChange(e);
                } }),
              _react2.default.createElement(
                'div',
                { className: 'btn-group', role: 'group', 'aria-label': '...' },
                _react2.default.createElement(
                  'label',
                  { htmlFor: 'pic' },
                  _react2.default.createElement(
                    'a',
                    null,
                    _react2.default.createElement('i', { className: 'fa fa-camera', 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement('input', { type: 'file', accept: '.jpg,.jpeg,.png,.gif', id: 'pic', onChange: function onChange(e) {
                    return _this3.uploadImg(e);
                  }, multiple: true })
              ),
              _react2.default.createElement(
                'button',
                { type: 'button', className: 'btn btn-blue-grey pull-right', name: 'button', onClick: function onClick(e) {
                    return _this3.handlePost(e);
                  } },
                'Submit'
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'media-footer' },
              _react2.default.createElement(
                'div',
                { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.fileWrongType), role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'File is not a image file'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.fileTooLarge), role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'File is too large'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'postImg' },
                this.state.img.map(function (element, index) {
                  return _react2.default.createElement(
                    'div',
                    { style: { "width": "calc(" + 100 / (_this3.state.img.length > 2 ? 2 : _this3.state.img.length) + "% - 4px)" } },
                    _react2.default.createElement('img', { src: element, key: index, alt: '', style: { 'width': "100%" } })
                  );
                })
              )
            )
          )
        )
      );
    }
  }]);

  return PostEntry;
}(_react2.default.Component);

exports.default = PostEntry;