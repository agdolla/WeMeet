'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _credentials = require('../credentials');

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// var debug = require('react-debug');

var Navbar = function (_React$Component) {
  _inherits(Navbar, _React$Component);

  function Navbar(props) {
    _classCallCheck(this, Navbar);

    var _this = _possibleConstructorReturn(this, (Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call(this, props));

    _this.state = {
      activity: false,
      post: false,
      chat: false,
      notifiction: false,
      notified: false
    };
    return _this;
  }

  _createClass(Navbar, [{
    key: 'handleLogOut',
    value: function handleLogOut(e) {
      e.preventDefault();
      (0, _credentials.logout)();
      _reactRouter.hashHistory.push('/');
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      _credentials.socket.on('newActivity', function () {
        _this2.setState({
          activity: true
        });
      });

      _credentials.socket.on('newPost', function () {
        _this2.setState({
          post: true
        });
      });
      _credentials.socket.on('chat', function () {
        _this2.setState({
          chat: true
        });
      });
      _credentials.socket.on('notification', function () {
        _this2.setState({
          notification: true
        });
      });
      _credentials.socket.on('friend request accepted', function (data) {
        if (!_this2.state.notified) {
          _this2.notifyMe(data.sender, function () {
            _this2.setState({
              notified: false
            });
          });
        }
      });
    }
  }, {
    key: 'goToAcitivity',
    value: function goToAcitivity(e) {
      e.preventDefault();
      this.setState({
        activity: false
      });
      _reactRouter.hashHistory.push('/activity');
    }
  }, {
    key: 'goToPost',
    value: function goToPost(e) {
      e.preventDefault();
      this.setState({
        post: false
      });
      _reactRouter.hashHistory.push('/post');
    }
  }, {
    key: 'goToChat',
    value: function goToChat(e) {
      e.preventDefault();
      this.setState({
        chat: false
      });
      _reactRouter.hashHistory.push('/chat');
    }
  }, {
    key: 'goToNotification',
    value: function goToNotification(e) {
      e.preventDefault();
      this.setState({
        notification: false
      });
      _reactRouter.hashHistory.push('/notification/1');
    }
  }, {
    key: 'notifyMe',
    value: function notifyMe(sender, cb) {
      if (!Notification) {
        alert('Desktop notifications not available in your browser. Try Chromium.');
        return;
      }

      if (Notification.permission !== "granted") Notification.requestPermission();else {
        this.setState({
          notified: true
        });
        var notification = new Notification('WeMeet', {
          icon: 'https://www.w1meet.com/img/logo/mipmap-xxhdpi/ic_launcher.png',
          body: sender + " accepted your request"
        });
        notification.onclick = function (event) {
          event.preventDefault();
          event.target.close();
          _reactRouter.hashHistory.push("/chat");
          cb();
        };
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'nav',
          { className: 'navbar navbar-default navbar-fixed-top', role: 'navigation' },
          _react2.default.createElement(
            'div',
            { className: 'container-fluid' },
            _react2.default.createElement(
              'div',
              { className: 'navbar-header' },
              _react2.default.createElement(
                'button',
                { type: 'button', className: 'navbar-toggle' },
                _react2.default.createElement(
                  'span',
                  { className: 'sr-only' },
                  'Toggle navigation'
                ),
                _react2.default.createElement('span', { className: 'icon-bar' }),
                _react2.default.createElement('span', { className: 'icon-bar' }),
                _react2.default.createElement('span', { className: 'icon-bar' })
              ),
              _react2.default.createElement(
                _reactRouter.Link,
                { className: 'navbar-brand', to: '/activity' },
                _react2.default.createElement('img', { src: './img/logo/mipmap-xxhdpi/ic_launcher.png', width: '50px', height: '50px', alt: '' })
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'collapse navbar-collapse', id: 'navbar' },
              _react2.default.createElement(
                'ul',
                { className: 'nav navbar-nav nav-left' },
                _react2.default.createElement(
                  'li',
                  { className: this.props.activity },
                  _react2.default.createElement(
                    'a',
                    { onClick: function onClick(e) {
                        return _this3.goToAcitivity(e);
                      } },
                    ' Activities ',
                    _react2.default.createElement('i', { className: "fa fa-circle " + (0, _util.hideElement)(!this.state.activity), style: { fontSize: 12, marginLeft: '2', color: '#EF9A9A' }, 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { className: this.props.post },
                  _react2.default.createElement(
                    _reactRouter.Link,
                    { onClick: function onClick(e) {
                        return _this3.goToPost(e);
                      } },
                    'Trend ',
                    _react2.default.createElement('i', { className: "fa fa-circle " + (0, _util.hideElement)(!this.state.post), style: { fontSize: 12, marginLeft: '2', color: '#EF9A9A' }, 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { className: this.props.chat },
                  _react2.default.createElement(
                    _reactRouter.Link,
                    { to: "chat" },
                    'Chat ',
                    _react2.default.createElement('i', { className: "fa fa-circle " + (0, _util.hideElement)(!this.state.chat || this.props.chat === "active"), style: { fontSize: 12, marginLeft: '2', color: '#EF9A9A' }, 'aria-hidden': 'true' })
                  )
                )
              ),
              _react2.default.createElement(
                'ul',
                { className: 'nav navbar-nav navbar-right' },
                _react2.default.createElement(
                  'div',
                  { className: 'dropdown pull-left' },
                  _react2.default.createElement(
                    'a',
                    { href: '#', className: 'dropdown-toggle', type: 'button', id: 'user-options', 'data-toggle': 'dropdown', 'aria-haspopup': 'true', 'aria-expanded': 'true' },
                    _react2.default.createElement('img', { src: this.props.user.avatar, height: '50px', alt: '' }),
                    ' ',
                    this.props.user.fullname,
                    _react2.default.createElement('span', { className: 'caret' })
                  ),
                  _react2.default.createElement(
                    'ul',
                    { className: 'dropdown-menu', 'aria-labelledby': 'user-options' },
                    _react2.default.createElement(
                      'li',
                      null,
                      _react2.default.createElement(
                        _reactRouter.Link,
                        { to: "profile/" + this.props.user._id },
                        _react2.default.createElement(
                          'span',
                          null,
                          _react2.default.createElement('i', { className: 'fa fa-user', 'aria-hidden': 'true' })
                        ),
                        'Profile'
                      )
                    ),
                    _react2.default.createElement(
                      'li',
                      null,
                      _react2.default.createElement(
                        _reactRouter.Link,
                        { to: 'settings' },
                        _react2.default.createElement(
                          'span',
                          null,
                          _react2.default.createElement('i', { className: 'fa fa-cog', 'aria-hidden': 'true' })
                        ),
                        'Settings'
                      )
                    ),
                    _react2.default.createElement(
                      'li',
                      null,
                      _react2.default.createElement(
                        _reactRouter.Link,
                        { to: 'postactivity' },
                        _react2.default.createElement(
                          'span',
                          null,
                          _react2.default.createElement('i', { className: 'fa fa-pencil', 'aria-hidden': 'true' })
                        ),
                        'Create Activity'
                      )
                    ),
                    _react2.default.createElement('li', { role: 'separator', className: 'divider' }),
                    _react2.default.createElement(
                      'li',
                      null,
                      _react2.default.createElement(
                        'a',
                        { href: '#', onClick: function onClick(e) {
                            return _this3.handleLogOut(e);
                          } },
                        _react2.default.createElement(
                          'span',
                          null,
                          _react2.default.createElement('i', { className: 'fa fa-sign-out', 'aria-hidden': 'true' })
                        ),
                        'Log out'
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { className: this.props.search },
                  _react2.default.createElement(
                    _reactRouter.Link,
                    { to: "search" },
                    _react2.default.createElement('i', { className: 'fa fa-search', 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { className: this.props.notification },
                  _react2.default.createElement(
                    _reactRouter.Link,
                    { to: "notification/" + 1 },
                    _react2.default.createElement('i', { className: 'fa fa-bell-o', 'aria-hidden': 'true' }),
                    ' ',
                    _react2.default.createElement('i', { className: "fa fa-circle " + (0, _util.hideElement)(!this.state.notification), style: { fontSize: 12, marginLeft: '2', color: '#EF9A9A' }, 'aria-hidden': 'true' })
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Navbar;
}(_react2.default.Component);

exports.default = Navbar;