'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _activity = require('./activity/activity');

var _activity2 = _interopRequireDefault(_activity);

var _post = require('./post/post');

var _post2 = _interopRequireDefault(_post);

var _settings = require('./settings/settings');

var _settings2 = _interopRequireDefault(_settings);

var _chat = require('./chat/chat');

var _chat2 = _interopRequireDefault(_chat);

var _notification = require('./notification/notification');

var _notification2 = _interopRequireDefault(_notification);

var _search = require('./search/search');

var _search2 = _interopRequireDefault(_search);

var _profile = require('./profile/profile');

var _profile2 = _interopRequireDefault(_profile);

var _postactivity = require('./postactivity/postactivity');

var _postactivity2 = _interopRequireDefault(_postactivity);

var _activity_detail = require('./activity_detail/activity_detail');

var _activity_detail2 = _interopRequireDefault(_activity_detail);

var _reactRouter = require('react-router');

var _util = require('./util');

var _server = require('./server.js');

var _credentials = require('./credentials');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var zxcvbn = require('zxcvbn');
// var debug = require('react-debug');

var ActivityPage = function (_React$Component) {
  _inherits(ActivityPage, _React$Component);

  function ActivityPage() {
    _classCallCheck(this, ActivityPage);

    return _possibleConstructorReturn(this, (ActivityPage.__proto__ || Object.getPrototypeOf(ActivityPage)).apply(this, arguments));
  }

  _createClass(ActivityPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_activity2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return ActivityPage;
}(_react2.default.Component);

var ThrendPage = function (_React$Component2) {
  _inherits(ThrendPage, _React$Component2);

  function ThrendPage() {
    _classCallCheck(this, ThrendPage);

    return _possibleConstructorReturn(this, (ThrendPage.__proto__ || Object.getPrototypeOf(ThrendPage)).apply(this, arguments));
  }

  _createClass(ThrendPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_post2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return ThrendPage;
}(_react2.default.Component);

var App = function (_React$Component3) {
  _inherits(App, _React$Component3);

  function App() {
    _classCallCheck(this, App);

    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.props.children
      );
    }
  }]);

  return App;
}(_react2.default.Component);

var SettingsPage = function (_React$Component4) {
  _inherits(SettingsPage, _React$Component4);

  function SettingsPage() {
    _classCallCheck(this, SettingsPage);

    return _possibleConstructorReturn(this, (SettingsPage.__proto__ || Object.getPrototypeOf(SettingsPage)).apply(this, arguments));
  }

  _createClass(SettingsPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_settings2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return SettingsPage;
}(_react2.default.Component);

var ChatPage = function (_React$Component5) {
  _inherits(ChatPage, _React$Component5);

  function ChatPage() {
    _classCallCheck(this, ChatPage);

    return _possibleConstructorReturn(this, (ChatPage.__proto__ || Object.getPrototypeOf(ChatPage)).apply(this, arguments));
  }

  _createClass(ChatPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_chat2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return ChatPage;
}(_react2.default.Component);

var NotificationPage = function (_React$Component6) {
  _inherits(NotificationPage, _React$Component6);

  function NotificationPage() {
    _classCallCheck(this, NotificationPage);

    return _possibleConstructorReturn(this, (NotificationPage.__proto__ || Object.getPrototypeOf(NotificationPage)).apply(this, arguments));
  }

  _createClass(NotificationPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_notification2.default, { user: userId, id: this.props.params.id });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return NotificationPage;
}(_react2.default.Component);

var Activity_detailPage = function (_React$Component7) {
  _inherits(Activity_detailPage, _React$Component7);

  function Activity_detailPage() {
    _classCallCheck(this, Activity_detailPage);

    return _possibleConstructorReturn(this, (Activity_detailPage.__proto__ || Object.getPrototypeOf(Activity_detailPage)).apply(this, arguments));
  }

  _createClass(Activity_detailPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_activity_detail2.default, { user: userId, id: this.props.params.id });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return Activity_detailPage;
}(_react2.default.Component);

var SearchPage = function (_React$Component8) {
  _inherits(SearchPage, _React$Component8);

  function SearchPage() {
    _classCallCheck(this, SearchPage);

    return _possibleConstructorReturn(this, (SearchPage.__proto__ || Object.getPrototypeOf(SearchPage)).apply(this, arguments));
  }

  _createClass(SearchPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_search2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return SearchPage;
}(_react2.default.Component);

var ProfilePage = function (_React$Component9) {
  _inherits(ProfilePage, _React$Component9);

  function ProfilePage() {
    _classCallCheck(this, ProfilePage);

    return _possibleConstructorReturn(this, (ProfilePage.__proto__ || Object.getPrototypeOf(ProfilePage)).apply(this, arguments));
  }

  _createClass(ProfilePage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_profile2.default, { user: this.props.params.user, currUser: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return ProfilePage;
}(_react2.default.Component);

var PostActivityPage = function (_React$Component10) {
  _inherits(PostActivityPage, _React$Component10);

  function PostActivityPage() {
    _classCallCheck(this, PostActivityPage);

    return _possibleConstructorReturn(this, (PostActivityPage.__proto__ || Object.getPrototypeOf(PostActivityPage)).apply(this, arguments));
  }

  _createClass(PostActivityPage, [{
    key: 'render',
    value: function render() {
      if ((0, _credentials.isUserLoggedIn)()) {
        var userId = (0, _credentials.getUserId)();
        window.onload = function () {
          _credentials.socket.emit('user', userId);
        };
        return _react2.default.createElement(_postactivity2.default, { user: userId });
      } else {
        _reactRouter.hashHistory.push('/');
        location.reload();
      }
    }
  }]);

  return PostActivityPage;
}(_react2.default.Component);

var LandingPage = function (_React$Component11) {
  _inherits(LandingPage, _React$Component11);

  function LandingPage(props) {
    _classCallCheck(this, LandingPage);

    var _this11 = _possibleConstructorReturn(this, (LandingPage.__proto__ || Object.getPrototypeOf(LandingPage)).call(this, props));

    _this11.state = {
      signInEmail: "",
      signInPass: "",
      signUpEmail: "",
      signUpName: "",
      signUpPass: "",
      signUpPass2: "",
      failedLogin: false,
      failedSignUp: false,
      submitted: false,
      passwordStrength: 0,
      passwordClass: "progress-bar-danger",
      passwordTooSimple: false
    };
    return _this11;
  }

  _createClass(LandingPage, [{
    key: 'handleChange',
    value: function handleChange(field, e) {
      e.preventDefault();
      if (field === "signUpPass") {
        this.setState({
          passwordTooSimple: false
        });
        var strength = zxcvbn(e.target.value);
        switch (strength.score) {
          case 0:
            {
              this.setState({
                passwordStrength: 20
              });
            }
            break;
          case 1:
            {
              this.setState({
                passwordStrength: 40
              });
            }
            break;
          case 2:
            {
              this.setState({
                passwordStrength: 60,
                passwordClass: "progress-bar-warning"
              });
            }
            break;
          case 3:
            {
              this.setState({
                passwordStrength: 80,
                passwordClass: "progress-bar-success"
              });
            }
            break;
          case 4:
            {
              this.setState({
                passwordStrength: 100,
                passwordClass: "progress-bar-success",
                passwordTooSimple: false
              });
            }
            break;
          default:
        }
        if (e.target.value === "") {
          this.setState({
            passwordStrength: 0,
            passwordClass: "progress-bar-danger"
          });
        }
      }
      var update = {};
      update[field] = e.target.value;
      this.setState(update);
    }
  }, {
    key: 'hanleSignIn',
    value: function hanleSignIn(e) {
      var _this12 = this;

      e.preventDefault();
      this.setState({
        submitted: true
      });

      (0, _server.login)(this.state.signInEmail, this.state.signInPass, function (success) {
        if (success) {
          _this12.setState({
            signInPass: "",
            signInEmail: "",
            failedLogin: false,
            submitted: false
          });
          _reactRouter.hashHistory.push('/activity');
        } else {
          _this12.setState({
            failedLogin: true,
            submitted: false
          });
        }
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      if ((0, _credentials.isUserLoggedIn)()) {
        _reactRouter.hashHistory.push("/activity");
      }
    }
  }, {
    key: 'handleClick',
    value: function handleClick(e) {
      e.preventDefault();
      var x = document.getElementsByTagName("body")[0];
      x.scrollTop = x.scrollHeight;
    }
  }, {
    key: 'handleSignUp',
    value: function handleSignUp(e) {
      var _this13 = this;

      e.preventDefault();
      // if(this.state.passwordStrength!==4){
      //    return this.setState({
      //     passwordTooSimple:true
      //   })
      // }
      if (this.state.signUpName.trim() !== "" && this.state.signUpEmail !== "" && this.state.signUpPass !== "" && this.state.passwordStrength >= 80 && this.state.signUpPass === this.state.signUpPass2) {
        this.setState({
          submitted: true
        });
        (0, _server.signup)(this.state.signUpEmail, this.state.signUpName, this.state.signUpPass, function (success) {
          if (success) {
            (0, _server.login)(_this13.state.signUpEmail, _this13.state.signUpPass, function (success) {
              if (success) {
                _this13.setState({
                  signInPass: "",
                  signInEmail: "",
                  signUpEmail: "",
                  signUpPass: "",
                  signUpName: "",
                  failedLogin: false,
                  submitted: false,
                  passwordError: false
                });
                _reactRouter.hashHistory.push('/activity');
              } else {
                _this13.setState({
                  failedLogin: true,
                  submitted: false
                });
              }
            });
          } else {
            _this13.setState({
              failedSignUp: true,
              submitted: false
            });
          }
        });
      } else if (this.state.passwordStrength < 80 && this.state.signUpPass !== "") {
        this.setState({
          passwordTooSimple: true,
          submitted: false
        });
      } else if (this.state.signUpPass2 !== this.state.signUpPass) {
        this.setState({
          passwordError: true,
          submitted: false
        });
      } else {
        this.setState({
          failedSignUp: true,
          submitted: false
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this14 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'bg' },
          _react2.default.createElement(
            'div',
            { className: 'text-vertical-center' },
            _react2.default.createElement(
              'h1',
              { style: { color: 'white' } },
              _react2.default.createElement(
                'span',
                null,
                _react2.default.createElement('img', { src: '../img/logo/mipmap-xxxhdpi/ic_launcher.png', width: '70px' })
              ),
              ' WeMeet'
            ),
            _react2.default.createElement(
              'h2',
              { style: { color: 'white' } },
              'Join nearby activities and make friends!'
            ),
            _react2.default.createElement('br', null),
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(e) {
                  return _this14.handleClick(e);
                }, className: 'btn btn-dark btn-lg' },
              'Sign up free today'
            ),
            _react2.default.createElement(
              'a',
              { href: '#', onClick: function onClick(e) {
                  return _this14.handleClick(e);
                }, className: 'btn btn-dark btn-lg' },
              'Sign in'
            )
          )
        ),
        _react2.default.createElement(
          'form',
          { className: 'container index LandingPage' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col-md-6 signin' },
              _react2.default.createElement(
                'div',
                { className: "alert alert-danger " + (0, _util.hideElement)(!this.state.failedLogin), role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'Invalid email address or password.'
                ),
                ' Please try a different email address or password, and try logging in again.'
              ),
              _react2.default.createElement(
                'div',
                { className: 'panel panel-primary' },
                _react2.default.createElement(
                  'div',
                  { className: 'panel-heading' },
                  _react2.default.createElement(
                    'h4',
                    null,
                    'Sign in'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'panel-body' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { disabled: this.state.submitted, type: 'text', className: 'form-control',
                          onChange: function onChange(e) {
                            return _this14.handleChange("signInEmail", e);
                          }, required: true }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Email'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { disabled: this.state.submitted, type: 'password', className: 'form-control',
                          onChange: function onChange(e) {
                            return _this14.handleChange("signInPass", e);
                          },
                          required: true }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Password'
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'panel-footer' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-12' },
                      _react2.default.createElement(
                        'button',
                        { disabled: this.state.submitted, type: 'submit', className: 'btn btn-amber pull-right', onClick: function onClick(e) {
                            return _this14.hanleSignIn(e);
                          } },
                        'Welcome back!'
                      )
                    )
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'col-md-6' },
              _react2.default.createElement(
                'div',
                { className: (0, _util.hideElement)(!this.state.failedSignUp) + " alert alert-danger", role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'Invalid account signup.'
                ),
                _react2.default.createElement('br', null),
                '1.It is possible that you already have an account with that particular email address',
                _react2.default.createElement('br', null),
                '2.you didn\'t fill in all the blanks.',
                _react2.default.createElement('br', null),
                '3.email format is not correct'
              ),
              _react2.default.createElement(
                'div',
                { className: (0, _util.hideElement)(!this.state.passwordError) + " alert alert-danger", role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'Invalid account signup.'
                ),
                ' two passwords don\'t match'
              ),
              _react2.default.createElement(
                'div',
                { className: (0, _util.hideElement)(!this.state.passwordTooSimple) + " alert alert-danger", role: 'alert' },
                _react2.default.createElement(
                  'strong',
                  null,
                  'Password is too simple'
                )
              ),
              _react2.default.createElement(
                'div',
                { className: 'panel panel-primary' },
                _react2.default.createElement(
                  'div',
                  { className: 'panel-heading' },
                  _react2.default.createElement(
                    'h4',
                    null,
                    'Sign up'
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'panel-body' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { type: 'text', disabled: this.state.submitted, className: 'form-control', onChange: function onChange(e) {
                            return _this14.handleChange("signUpName", e);
                          } }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Username'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { type: 'email', disabled: this.state.submitted, className: 'form-control', onChange: function onChange(e) {
                            return _this14.handleChange("signUpEmail", e);
                          } }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Email'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { type: 'password', disabled: this.state.submitted, className: 'form-control', onChange: function onChange(e) {
                            return _this14.handleChange("signUpPass", e);
                          } }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Password'
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'progress', style: { height: '6', marginTop: '-15', borderRadius: '0' } },
                        _react2.default.createElement('div', { className: "progress-bar " + this.state.passwordClass,
                          role: 'progressbar',
                          'aria-valuemin': '0',
                          'aria-valuemax': '100',
                          style: { width: this.state.passwordStrength + "%" } })
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-7 col-md-offset-2' },
                      _react2.default.createElement(
                        'div',
                        { className: 'md-form' },
                        _react2.default.createElement('input', { type: 'password', disabled: this.state.submitted, className: 'form-control', onChange: function onChange(e) {
                            return _this14.handleChange("signUpPass2", e);
                          } }),
                        _react2.default.createElement(
                          'label',
                          null,
                          'Repeat password'
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { className: 'panel-footer' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-12' },
                      _react2.default.createElement(
                        'button',
                        { disabled: this.state.submitted, type: 'button', className: 'btn btn-info pull-right', onClick: function onClick(e) {
                            return _this14.handleSignUp(e);
                          } },
                        'Join Us!'
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return LandingPage;
}(_react2.default.Component);

//render main


_reactDom2.default.render(_react2.default.createElement(
  _reactRouter.Router,
  { history: _reactRouter.hashHistory },
  _react2.default.createElement(
    _reactRouter.Route,
    { path: '/', component: App },
    _react2.default.createElement(_reactRouter.IndexRoute, { component: LandingPage }),
    _react2.default.createElement(_reactRouter.Route, { path: 'post', component: ThrendPage }),
    _react2.default.createElement(_reactRouter.Route, { path: 'activity', component: ActivityPage }),
    _react2.default.createElement(_reactRouter.Route, { path: 'settings', component: SettingsPage }),
    _react2.default.createElement(_reactRouter.Route, { path: 'chat', component: ChatPage }),
    _react2.default.createElement(
      _reactRouter.Route,
      { path: 'notification', component: NotificationPage },
      _react2.default.createElement(_reactRouter.Route, { path: '/notification/:id', component: NotificationPage })
    ),
    _react2.default.createElement(
      _reactRouter.Route,
      { path: 'profile', component: ProfilePage },
      _react2.default.createElement(_reactRouter.Route, { path: '/profile/:user', component: ProfilePage })
    ),
    _react2.default.createElement(
      _reactRouter.Route,
      { path: 'activity_detail', component: Activity_detailPage },
      _react2.default.createElement(_reactRouter.Route, { path: '/activity_detail/:id', component: Activity_detailPage })
    ),
    _react2.default.createElement(_reactRouter.Route, { path: 'search', component: SearchPage }),
    _react2.default.createElement(_reactRouter.Route, { path: 'postactivity', component: PostActivityPage }),
    _react2.default.createElement(_reactRouter.Route, { path: '*', component: ActivityPage })
  )
), document.getElementById('container'));