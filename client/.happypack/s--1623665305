'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ad_commentEntry = require('./ad_commentEntry');

var _ad_commentEntry2 = _interopRequireDefault(_ad_commentEntry);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Ad_commentThread = function (_React$Component) {
  _inherits(Ad_commentThread, _React$Component);

  function Ad_commentThread(props) {
    _classCallCheck(this, Ad_commentThread);

    var _this = _possibleConstructorReturn(this, (Ad_commentThread.__proto__ || Object.getPrototypeOf(Ad_commentThread)).call(this, props));

    _this.state = {};
    return _this;
  }

  _createClass(Ad_commentThread, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'container' },
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'col-lg-10 col-md-12 col-sm-12 col-xs-12 col-lg-offset-1' },
            _react2.default.createElement(
              'div',
              { className: 'panel panel-default body-comments' },
              _react2.default.createElement(
                'div',
                { className: 'panel-heading' },
                _react2.default.createElement(
                  'font',
                  { style: { color: "grey", fontSize: "20px" } },
                  'Wonderful comments (',
                  this.props.count,
                  ')'
                ),
                _react2.default.createElement(_ad_commentEntry2.default, { user: this.props.user, avatar: this.props.avatar, onPost: this.props.onPost }),
                _react2.default.createElement('hr', null),
                _react2.default.createElement(
                  'ul',
                  { className: 'media-list' },
                  _react2.default.Children.map(this.props.children, function (child) {
                    return _react2.default.createElement(
                      'li',
                      { className: 'media' },
                      child
                    );
                  })
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Ad_commentThread;
}(_react2.default.Component);

exports.default = Ad_commentThread;