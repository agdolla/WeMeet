{"version":3,"sources":["app\\post\\postFeed.js"],"names":["PostFeed","props","state","contents","notified","loadBtnText","submitted","Date","getTime","userId","postFeedData","setState","e","preventDefault","date","length","postDate","newPostData","concat","text","img","emit","authorization","user","getData","cb","Notification","alert","permission","requestPermission","notification","icon","body","onclick","event","target","close","push","onPost","map","postFeedItem","i","_id","handleLoadMore","on","notifyMe","Component"],"mappings":"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","file":"postFeed.js","sourceRoot":"C:/Users/Vincent/Desktop/wemeet/client","sourcesContent":["import React from 'react';\r\nimport PostEntry from './postEntry';\r\nimport PostFeedItem from './postFeedItem';\r\nimport {getAllPosts,postStatus} from '../server';\r\nimport {hashHistory} from 'react-router';\r\nimport {socket,getToken} from '../credentials';\r\nimport {disabledElement} from '../util';\r\n\r\nexport default class PostFeed extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      contents: [],\r\n      notified:false,\r\n      loadBtnText:\"load more\",\r\n      submitted:false\r\n    }\r\n  }\r\n\r\n\r\n  getData(){\r\n    getAllPosts((new Date()).getTime(), this.props.userId, (postFeedData)=>{\r\n      this.setState({\r\n        contents:postFeedData,\r\n        notified:false\r\n      });\r\n    });\r\n  }\r\n\r\n  handleLoadMore(e){\r\n    e.preventDefault();\r\n    this.setState({\r\n      submitted:true\r\n    });\r\n    var date = this.state.contents.length===0?(new Date()).getTime():\r\n    this.state.contents[this.state.contents.length-1].contents.postDate;\r\n    getAllPosts(date, this.props.userId, (postFeedData)=>{\r\n      if(postFeedData.length===0){\r\n        return this.setState({\r\n          loadBtnText:\"nothing more to load\",\r\n          submitted:false\r\n        })\r\n      }\r\n      var newPostData = this.state.contents.concat(postFeedData);\r\n      this.setState({\r\n        contents:newPostData,\r\n        notified:false,\r\n        submitted:false\r\n      });\r\n    });\r\n  }\r\n\r\n  onPost(text,img){\r\n    postStatus(this.props.userId, text, img,()=>{\r\n      socket.emit('newPost',{authorization:getToken(),user:this.props.userId});\r\n      this.setState({\r\n        loadBtnText:\"load more\"\r\n      },()=>{\r\n        this.getData();\r\n      })\r\n    });\r\n  }\r\n\r\n  notifyMe(cb) {\r\n    if (!Notification) {\r\n      alert('Desktop notifications not available in your browser. Try Chromium.');\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission !== \"granted\")\r\n      Notification.requestPermission();\r\n    else {\r\n      this.setState({\r\n        notified:true\r\n      });\r\n      var notification = new Notification('WeMeet', {\r\n        icon: 'https://www.w1meet.com/img/logo/mipmap-xxhdpi/ic_launcher.png',\r\n        body: \"Hey there! You have new posts\"\r\n      });\r\n      notification.onclick = (event)=>{\r\n        event.preventDefault();\r\n        event.target.close();\r\n        hashHistory.push(\"/post\");\r\n        cb();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(){\r\n    this.getData();\r\n  }\r\n\r\n  render(){\r\n    if(this.state.contents.length === 0){\r\n      return(\r\n        <div>\r\n          <PostEntry userData={this.props.user} onPost={(text,img)=>this.onPost(text,img)}/>\r\n          <div className=\"alert alert-info\" role=\"alert\">\r\n            No one has posted anthing yet!\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <PostEntry userData={this.props.user} onPost={(text,img)=>this.onPost(text,img)}/>\r\n        {this.state.contents.map((postFeedItem,i)=>{\r\n          return <PostFeedItem key={i} data={postFeedItem} currentUser={this.props.user._id}/>\r\n        })}\r\n        <div className=\"btn-group btn-group-justified\" role=\"group\" aria-label=\"...\">\r\n          <div className=\"btn-group\" role=\"group\">\r\n            <button className={\"btn btn-default loadbtn \"+disabledElement(this.state.loadBtnText===\"nothing more to load\"||this.state.submitted)} onClick={(e)=>this.handleLoadMore(e)}>\r\n              {this.state.loadBtnText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getData();\r\n    socket.on('newPost',()=>{\r\n      if(!this.state.notified){\r\n        this.notifyMe(()=>{\r\n          this.getData();\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}