'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _postEntry = require('./postEntry');

var _postEntry2 = _interopRequireDefault(_postEntry);

var _postFeedItem = require('./postFeedItem');

var _postFeedItem2 = _interopRequireDefault(_postFeedItem);

var _server = require('../server');

var _reactRouter = require('react-router');

var _credentials = require('../credentials');

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PostFeed = function (_React$Component) {
  _inherits(PostFeed, _React$Component);

  function PostFeed(props) {
    _classCallCheck(this, PostFeed);

    var _this = _possibleConstructorReturn(this, (PostFeed.__proto__ || Object.getPrototypeOf(PostFeed)).call(this, props));

    _this.state = {
      contents: [],
      notified: false,
      loadBtnText: "load more",
      submitted: false
    };
    return _this;
  }

  _createClass(PostFeed, [{
    key: 'getData',
    value: function getData() {
      var _this2 = this;

      (0, _server.getAllPosts)(new Date().getTime(), this.props.userId, function (postFeedData) {
        _this2.setState({
          contents: postFeedData,
          notified: false
        });
      });
    }
  }, {
    key: 'handleLoadMore',
    value: function handleLoadMore(e) {
      var _this3 = this;

      e.preventDefault();
      this.setState({
        submitted: true
      });
      var date = this.state.contents.length === 0 ? new Date().getTime() : this.state.contents[this.state.contents.length - 1].contents.postDate;
      (0, _server.getAllPosts)(date, this.props.userId, function (postFeedData) {
        if (postFeedData.length === 0) {
          return _this3.setState({
            loadBtnText: "nothing more to load",
            submitted: false
          });
        }
        var newPostData = _this3.state.contents.concat(postFeedData);
        _this3.setState({
          contents: newPostData,
          notified: false,
          submitted: false
        });
      });
    }
  }, {
    key: 'onPost',
    value: function onPost(text, img) {
      var _this4 = this;

      (0, _server.postStatus)(this.props.userId, text, img, function () {
        _credentials.socket.emit('newPost', { authorization: (0, _credentials.getToken)(), user: _this4.props.userId });
        _this4.setState({
          loadBtnText: "load more"
        }, function () {
          _this4.getData();
        });
      });
    }
  }, {
    key: 'notifyMe',
    value: function notifyMe(cb) {
      if (!Notification) {
        alert('Desktop notifications not available in your browser. Try Chromium.');
        return;
      }

      if (Notification.permission !== "granted") Notification.requestPermission();else {
        this.setState({
          notified: true
        });
        var notification = new Notification('WeMeet', {
          icon: 'https://www.w1meet.com/img/logo/mipmap-xxhdpi/ic_launcher.png',
          body: "Hey there! You have new posts"
        });
        notification.onclick = function (event) {
          event.preventDefault();
          event.target.close();
          _reactRouter.hashHistory.push("/post");
          cb();
        };
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps() {
      this.getData();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      if (this.state.contents.length === 0) {
        return _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(_postEntry2.default, { userData: this.props.user, onPost: function onPost(text, img) {
              return _this5.onPost(text, img);
            } }),
          _react2.default.createElement(
            'div',
            { className: 'alert alert-info', role: 'alert' },
            'No one has posted anthing yet!'
          )
        );
      }
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_postEntry2.default, { userData: this.props.user, onPost: function onPost(text, img) {
            return _this5.onPost(text, img);
          } }),
        this.state.contents.map(function (postFeedItem, i) {
          return _react2.default.createElement(_postFeedItem2.default, { key: i, data: postFeedItem, currentUser: _this5.props.user._id });
        }),
        _react2.default.createElement(
          'div',
          { className: 'btn-group btn-group-justified', role: 'group', 'aria-label': '...' },
          _react2.default.createElement(
            'div',
            { className: 'btn-group', role: 'group' },
            _react2.default.createElement(
              'button',
              { className: "btn btn-default loadbtn " + (0, _util.disabledElement)(this.state.loadBtnText === "nothing more to load" || this.state.submitted), onClick: function onClick(e) {
                  return _this5.handleLoadMore(e);
                } },
              this.state.loadBtnText
            )
          )
        )
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this6 = this;

      this.getData();
      _credentials.socket.on('newPost', function () {
        if (!_this6.state.notified) {
          _this6.notifyMe(function () {
            _this6.getData();
          });
        }
      });
    }
  }]);

  return PostFeed;
}(_react2.default.Component);

exports.default = PostFeed;