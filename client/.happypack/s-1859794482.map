{"version":3,"sources":["app\\chat\\chatwindow.js"],"names":["ChatWindow","props","state","targetUser","message","load","getData","refs","chatwindow","scrollTop","scrollHeight","e","preventDefault","setState","onLoad","text","onPost","target","userData","nextProps","_id","avatar","fullname","description","textAlign","handleLoad","btnText","undefined","map","msg","i","sender","curUser","handlePostMessage","Component"],"mappings":"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","file":"chatwindow.js","sourceRoot":"C:/Users/Vincent/Desktop/wemeet/client","sourcesContent":["import React from 'React';\r\n// import ReactDOM from 'react-dom';\r\nimport {getUserData} from '../server';\r\nimport {Link} from 'react-router';\r\nimport ChatEntry from './chatentry';\r\nimport ChatRightBubble from './chatrightbubble';\r\nimport ChatLeftBubble from './chatleftbubble';\r\n// var debug = require('react-debug');\r\n\r\nexport default class ChatWindow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          targetUser: {},\r\n          message: props.message,\r\n          load:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      if(!this.state.load)\r\n        this.refs.chatwindow.scrollTop=this.refs.chatwindow.scrollHeight;\r\n    }\r\n\r\n    handleLoad(e){\r\n      e.preventDefault();\r\n      this.setState({\r\n        load:true\r\n      },()=>{\r\n        this.props.onLoad(e);\r\n      });\r\n\r\n    }\r\n\r\n    handlePostMessage(text){\r\n      this.props.onPost(text);\r\n    }\r\n\r\n    getData() {\r\n      if(!this.props.target==\"\"){\r\n        getUserData(this.props.target, (userData) => {\r\n            this.setState({targetUser:userData})\r\n        });}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n      if(!this.props.target==\"\"){\r\n      getUserData(this.props.target, (userData) => {\r\n          this.setState(\r\n            {\r\n              targetUser:userData,\r\n              message:nextProps.message\r\n            })\r\n      });}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-7 col-sm-7 col-xs-7 chat-right\">\r\n                <div className=\"panel panel-dafault chatwindow\">\r\n                    <div className=\"panel-heading\">\r\n                        <div className=\"media\">\r\n                            <div className=\"media-left\">\r\n                              <Link to={\"profile/\"+this.state.targetUser._id}>\r\n                                <img className=\"media-object\" src={this.state.targetUser.avatar } alt=\"image\" height=\"45\" width=\"45\"></img>\r\n                                </Link>\r\n                          </div>\r\n                            <div className=\"media-body\">\r\n                                <div className=\"media-heading\">\r\n\r\n                                    <div className=\"media\">\r\n                                        <div className=\"media-left media-body\">\r\n                                            <font size=\"3\">{this.state.targetUser.fullname}</font>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <font size=\"2\" color=\"grey \">\r\n                                    {this.state.targetUser.description}</font>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"panel-body\" ref=\"chatwindow\">\r\n                      <div style={{textAlign:\"center\"}}>\r\n                        <a href=\"\" onClick={(e)=>this.handleLoad(e)}>{this.props.btnText}</a>\r\n                      </div>\r\n\r\n                      {this.state.message === undefined ? 0: this.state.message.map((msg,i)=>{\r\n                        if(msg.sender._id===this.props.curUser){\r\n                          return (\r\n                            <ChatRightBubble key={i} data={msg} />\r\n                          )\r\n                        }\r\n                        else{\r\n                          return (\r\n                            <ChatLeftBubble key={i} data={msg} />\r\n                          )\r\n                        }\r\n                      })}\r\n\r\n                    </div>\r\n\r\n                    <ChatEntry onPost={(message)=>this.handlePostMessage(message)}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n"]}