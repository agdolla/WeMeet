'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _navbar = require('../component/navbar');

var _navbar2 = _interopRequireDefault(_navbar);

var _server = require('../server');

var _reactAvatarCropper = require('react-avatar-cropper');

var _reactAvatarCropper2 = _interopRequireDefault(_reactAvatarCropper);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var alert = null;
var emailAlert = null;
var moment = require('moment');

var Settings = function (_React$Component) {
  _inherits(Settings, _React$Component);

  function Settings(props) {
    _classCallCheck(this, Settings);

    var _this = _possibleConstructorReturn(this, (Settings.__proto__ || Object.getPrototypeOf(Settings)).call(this, props));

    _this.state = {
      userData: {},
      username: "",
      nickname: "",
      description: "",
      birthday: "",
      oldEmail: "",
      newEmail: "",
      img: null,
      cropperOpen: false,
      changeInfoFailed: false,
      fileTooLarge: false,
      fileWrongType: false
    };
    return _this;
  }

  _createClass(Settings, [{
    key: 'handleFile',
    value: function handleFile(e) {
      var _this2 = this;

      e.preventDefault();
      // Read the first file that the user selected (if the user selected multiple
      // files, we ignore the others).
      var reader = new FileReader();
      var file = e.target.files[0];
      // Called once the browser finishes loading the image.
      if (file.size > 1100000) {
        return this.setState({
          fileTooLarge: true
        });
      } else if (!file.type.match('image.*')) {
        return this.setState({
          fileWrongType: true
        });
      }
      reader.onload = function (upload) {
        _this2.setState({
          img: upload.target.result,
          cropperOpen: true,
          fileTooLarge: false,
          fileWrongType: false
        });
      };

      reader.readAsDataURL(file);
    }
  }, {
    key: 'handleFileClick',
    value: function handleFileClick(e) {
      e.target.value = null;
    }
  }, {
    key: 'handleRequestHide',
    value: function handleRequestHide(e) {
      e.preventDefault();
      this.setState({
        cropperOpen: false,
        img: null
      });
    }
  }, {
    key: 'handleCrop',
    value: function handleCrop(dataURI) {
      this.setState({
        cropperOpen: false,
        img: dataURI
      });
    }
  }, {
    key: 'handleAvatarChange',
    value: function handleAvatarChange(e) {
      var _this3 = this;

      e.preventDefault();
      if (this.state.img !== null) {
        (0, _server.ChangeAvatar)(this.state.userData._id, this.state.img, function (userData) {
          _this3.setState({ userData: userData });
        });
      }
    }
  }, {
    key: 'handleChangeUserInfo',
    value: function handleChangeUserInfo(e) {
      var _this4 = this;

      e.preventDefault();
      if (this.state.username !== "" && this.state.nickname !== "" && this.state.description !== "") {
        (0, _server.changeUserInfo)({
          userId: this.state.userData._id,
          fullname: this.state.username,
          nickname: this.state.nickname,
          description: this.state.description,
          birthday: this.state.birthday
        }, function (userData) {
          alert = _react2.default.createElement(
            'div',
            { className: "alert alert-success alert-dismissible", role: 'alert' },
            _react2.default.createElement(
              'strong',
              null,
              'Change info succeed!'
            )
          );
          _this4.setState({
            userData: userData,
            changeInfoFailed: false
          });
        });
      } else {
        alert = null;
        this.setState({
          changeInfoFailed: true
        });
      }
    }
  }, {
    key: 'getData',
    value: function getData() {
      var _this5 = this;

      (0, _server.getUserData)(this.props.user, function (userData) {
        _this5.setState({
          userData: userData,
          username: userData.fullname,
          nickname: userData.nickname,
          description: userData.description,
          birthday: moment(userData.birthday).format('YYYY-MM-DD')
        });
      });
    }
  }, {
    key: 'handleUsername',
    value: function handleUsername(e) {
      e.preventDefault();
      this.setState({ username: e.target.value });
    }
  }, {
    key: 'handleNickname',
    value: function handleNickname(e) {
      e.preventDefault();
      this.setState({ nickname: e.target.value });
    }
  }, {
    key: 'handleDescription',
    value: function handleDescription(e) {
      e.preventDefault();
      this.setState({ description: e.target.value });
    }
  }, {
    key: 'handleBirthday',
    value: function handleBirthday(e) {
      e.preventDefault();
      this.setState({ birthday: e.target.value });
    }
  }, {
    key: 'handleOldEmail',
    value: function handleOldEmail(e) {
      e.preventDefault();
      this.setState({ oldEmail: e.target.value });
    }
  }, {
    key: 'handleNewEmail',
    value: function handleNewEmail(e) {
      e.preventDefault();
      this.setState({ newEmail: e.target.value });
    }
  }, {
    key: 'handleEmailChange',
    value: function handleEmailChange(e) {
      var _this6 = this;

      e.preventDefault();
      if (this.state.oldEmail !== "" && this.state.newEmail !== "") {
        (0, _server.changeEmail)({
          userId: this.state.userData._id,
          oldEmail: this.state.oldEmail,
          newEmail: this.state.newEmail
        }, function (error) {
          if (error) {
            emailAlert = _react2.default.createElement(
              'div',
              { className: 'alert alert-warning', role: 'alert' },
              _react2.default.createElement(
                'strong',
                null,
                'Old email is wrong or new email has wrong format'
              )
            );
          } else {
            emailAlert = _react2.default.createElement(
              'div',
              { className: 'alert alert-success', role: 'alert' },
              _react2.default.createElement(
                'strong',
                null,
                'Change email succeed!'
              )
            );
          }
          _this6.setState({
            oldEmail: "",
            newEmail: ""
          });
        });
      } else {
        emailAlert = _react2.default.createElement(
          'div',
          { className: 'alert alert-warning', role: 'alert' },
          _react2.default.createElement(
            'strong',
            null,
            'Please fill in blanks'
          )
        );
      }

      this.setState({
        oldEmail: "",
        newEmail: ""
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this7 = this;

      return _react2.default.createElement(
        'div',
        { style: { marginTop: '70' } },
        this.state.cropperOpen && _react2.default.createElement(_reactAvatarCropper2.default, {
          onRequestHide: function onRequestHide(e) {
            return _this7.handleRequestHide(e);
          },
          cropperOpen: this.state.cropperOpen,
          onCrop: function onCrop(e) {
            return _this7.handleCrop(e);
          },
          image: this.state.img,
          width: 512,
          height: 512
        }),
        _react2.default.createElement(_navbar2.default, { user: this.state.userData }),
        _react2.default.createElement(
          'div',
          { className: 'container settings' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col-md-7 col-md-offset-1 infos' },
              _react2.default.createElement(
                'h4',
                null,
                _react2.default.createElement(
                  'span',
                  null,
                  _react2.default.createElement('i', { className: 'fa fa-cog', 'aria-hidden': 'true' })
                ),
                ' Settings'
              ),
              _react2.default.createElement(
                'div',
                { className: 'panel panel-default personal-info-1' },
                _react2.default.createElement(
                  'div',
                  { className: 'panel-heading' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-12' },
                      _react2.default.createElement(
                        'h4',
                        null,
                        'Personal Info'
                      ),
                      _react2.default.createElement(
                        'div',
                        null,
                        alert,
                        _react2.default.createElement(
                          'div',
                          { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.changeInfoFailed), role: 'alert' },
                          _react2.default.createElement(
                            'strong',
                            null,
                            'Please fill in blanks'
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-12' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('input', { type: 'text', className: 'form-control',
                              value: this.state.username,
                              onChange: function onChange(e) {
                                return _this7.handleUsername(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { className: 'shown' },
                              'Your name'
                            )
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-12' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('input', { type: 'text', id: '', className: 'form-control',
                              value: this.state.nickname,
                              onChange: function onChange(e) {
                                return _this7.handleNickname(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { className: 'shown' },
                              'NickName'
                            )
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement(
                              'h5',
                              null,
                              'Birthday'
                            ),
                            _react2.default.createElement('input', { type: 'date', id: '', className: 'form-control',
                              value: this.state.birthday,
                              onChange: function onChange(e) {
                                return _this7.handleBirthday(e);
                              },
                              placeholder: 'this' })
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('textarea', { type: 'text', className: 'md-textarea',
                              value: this.state.description,
                              onChange: function onChange(e) {
                                return _this7.handleDescription(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { className: 'shown' },
                              'About you'
                            )
                          )
                        )
                      )
                    )
                  )
                ),
                _react2.default.createElement('div', null),
                _react2.default.createElement(
                  'div',
                  { className: 'panel-footer' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-12' },
                      _react2.default.createElement(
                        'button',
                        { type: 'button', className: 'btn btn-blue-grey pull-right', name: 'button',
                          onClick: function onClick(e) {
                            return _this7.handleChangeUserInfo(e);
                          } },
                        'Save'
                      )
                    )
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'col-md-3 system-settings' },
              _react2.default.createElement(
                'div',
                { className: 'list-group' },
                _react2.default.createElement(
                  'a',
                  { className: 'list-group-item', 'data-toggle': 'collapse', 'data-parent': '#accordion', href: '#reset-password', 'aria-expanded': 'true', 'aria-controls': 'reset-password' },
                  'Change Password ',
                  _react2.default.createElement(
                    'span',
                    { className: 'pull-right' },
                    _react2.default.createElement('i', { className: 'fa fa-angle-right', 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { id: 'reset-password', className: 'panel-collapse collapse', role: 'tabpanel', 'aria-labelledby': 'headingOne' },
                  _react2.default.createElement(
                    'div',
                    { className: 'panel-body' },
                    _react2.default.createElement(
                      'div',
                      { className: 'md-form', style: { "marginTop": '20' } },
                      _react2.default.createElement('input', { type: 'password', id: '', className: 'form-control' }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'Form1', className: '' },
                        'Old password'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'md-form', style: { "marginTop": '20' } },
                      _react2.default.createElement('input', { type: 'password', id: '', className: 'form-control' }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'Form1', className: '' },
                        'New password'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'md-form', style: { "marginTop": '20' } },
                      _react2.default.createElement('input', { type: 'password', id: '', className: 'form-control' }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'Form1', className: '' },
                        'Repeat password'
                      )
                    ),
                    _react2.default.createElement(
                      'button',
                      { type: 'button', className: 'btn btn-blue-grey pull-right', name: 'button' },
                      'Submit'
                    )
                  )
                ),
                _react2.default.createElement(
                  'a',
                  { className: 'list-group-item', 'data-toggle': 'collapse', 'data-parent': '#accordion', href: '#reset-email', 'aria-expanded': 'true', 'aria-controls': 'reset-password' },
                  'Reset Email ',
                  _react2.default.createElement(
                    'span',
                    { className: 'pull-right' },
                    _react2.default.createElement('i', { className: 'fa fa-angle-right', 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { id: 'reset-email', className: 'panel-collapse collapse', role: 'tabpanel', 'aria-labelledby': 'headingOne' },
                  _react2.default.createElement(
                    'div',
                    { className: 'panel-body' },
                    emailAlert,
                    _react2.default.createElement(
                      'div',
                      { className: 'md-form', style: { "marginTop": '20' } },
                      _react2.default.createElement('input', { type: 'email', id: '', value: this.state.oldEmail, className: 'form-control', onChange: function onChange(e) {
                          return _this7.handleOldEmail(e);
                        } }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'Form1', className: '' },
                        'Old Email'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'md-form', style: { "marginTop": '20' } },
                      _react2.default.createElement('input', { type: 'email', id: '', value: this.state.newEmail, className: 'form-control', onChange: function onChange(e) {
                          return _this7.handleNewEmail(e);
                        } }),
                      _react2.default.createElement(
                        'label',
                        { htmlFor: 'Form1', className: '' },
                        'New Email'
                      )
                    ),
                    _react2.default.createElement(
                      'button',
                      { type: 'button', className: 'btn btn-blue-grey pull-right', name: 'button', onClick: function onClick(e) {
                          return _this7.handleEmailChange(e);
                        } },
                      'Submit'
                    )
                  )
                ),
                _react2.default.createElement(
                  'a',
                  { className: 'list-group-item', 'data-toggle': 'collapse', 'data-parent': '#accordion', href: '#change-avatar', 'aria-expanded': 'true', 'aria-controls': 'reset-password' },
                  'Change Avatar ',
                  _react2.default.createElement(
                    'span',
                    { className: 'pull-right' },
                    _react2.default.createElement('i', { className: 'fa fa-angle-right', 'aria-hidden': 'true' })
                  )
                ),
                _react2.default.createElement(
                  'div',
                  { id: 'change-avatar', className: 'panel-collapse collapse', role: 'tabpanel', 'aria-labelledby': 'headingOne' },
                  _react2.default.createElement(
                    'div',
                    { className: 'panel-body' },
                    _react2.default.createElement(
                      'div',
                      { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.fileTooLarge), role: 'alert' },
                      _react2.default.createElement(
                        'strong',
                        null,
                        'File is too large'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.fileWrongType), role: 'alert' },
                      _react2.default.createElement(
                        'strong',
                        null,
                        'File is not a image file'
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col-md-8 col-md-offset-3' },
                        _react2.default.createElement(
                          'div',
                          { className: 'btn-group', role: 'group' },
                          _react2.default.createElement(
                            'label',
                            { htmlFor: 'pic' },
                            _react2.default.createElement(
                              'a',
                              null,
                              _react2.default.createElement(
                                'div',
                                { className: 'thumbnail', style: {
                                    border: "1px dashed black",
                                    width: "100px",
                                    height: "110px"
                                  } },
                                _react2.default.createElement('i', { className: 'fa fa-camera', 'aria-hidden': 'true' }),
                                _react2.default.createElement('img', { src: this.state.img, className: (0, _util.hideElement)(this.state.cropperOpen),
                                  width: '100px', height: '100px' })
                              )
                            )
                          ),
                          _react2.default.createElement('input', { type: 'file', accept: '.jpg,.jpeg,.png,.gif', id: 'pic', onClick: function onClick(e) {
                              return _this7.handleFileClick(e);
                            },
                            onChange: function onChange(e) {
                              return _this7.handleFile(e);
                            } })
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'button',
                      { type: 'button', className: 'btn btn-blue-grey pull-right', name: 'button',
                        onClick: function onClick(e) {
                          return _this7.handleAvatarChange(e);
                        } },
                      'Submit'
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.getData();
    }
  }]);

  return Settings;
}(_react2.default.Component);

exports.default = Settings;