'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PostCommentEntry = function (_React$Component) {
  _inherits(PostCommentEntry, _React$Component);

  function PostCommentEntry(props) {
    _classCallCheck(this, PostCommentEntry);

    var _this = _possibleConstructorReturn(this, (PostCommentEntry.__proto__ || Object.getPrototypeOf(PostCommentEntry)).call(this, props));

    _this.state = {
      text: ""
    };
    return _this;
  }

  _createClass(PostCommentEntry, [{
    key: 'handleChange',
    value: function handleChange(e) {
      e.preventDefault();
      this.setState({ text: e.target.value });
    }
  }, {
    key: 'handleSubmit',
    value: function handleSubmit(e) {
      e.preventDefault();
      if (this.state.text.trim() !== "") {
        this.setState({ text: "" });
        this.props.onPost(this.state.text);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this,
          _React$createElement;

      return _react2.default.createElement(
        'div',
        { className: 'panel-heading' },
        _react2.default.createElement(
          'div',
          { className: 'media' },
          _react2.default.createElement(
            'div',
            { className: 'media-left' },
            _react2.default.createElement(
              _reactRouter.Link,
              { to: "profile/" + this.props.user },
              _react2.default.createElement('img', { className: 'media-object', src: this.props.avatar, height: '45px', style: { marginTop: '10' } })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'media-body' },
            _react2.default.createElement('textarea', { name: 'name', rows: '8', cols: '40', placeholder: 'Post your comments', value: this.state.text, onChange: function onChange(e) {
                return _this2.handleChange(e);
              } }),
            _react2.default.createElement(
              'button',
              (_React$createElement = { type: 'button', className: 'btn btn-blue-grey pull-right waves-effect waves-light' }, _defineProperty(_React$createElement, 'type', 'button'), _defineProperty(_React$createElement, 'name', 'button'), _defineProperty(_React$createElement, 'onClick', function onClick(e) {
                return _this2.handleSubmit(e);
              }), _React$createElement),
              'Post'
            )
          )
        )
      );
    }
  }]);

  return PostCommentEntry;
}(_react2.default.Component);

exports.default = PostCommentEntry;