{"version":3,"sources":["app\\activity\\activityFeed.js"],"names":["debug","require","ActivityFeed","props","state","contents","notified","user","activityFeedData","setState","getData","nextProps","nextState","undefined","length","cb","Notification","alert","permission","requestPermission","notification","icon","body","onclick","event","preventDefault","target","close","push","map","activityFeedItem","_id","on","notifyMe","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,QAAQC,QAAQ,aAAR,CAAZ;;IAEqBC,Y;;;AAEnB,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA,4HACVA,KADU;;AAEhB,UAAKC,KAAL,GAAY;AACVC,gBAAU,EADA;AAEVC,gBAAS;AAFC,KAAZ;AAFgB;AAMjB;;;;8BAEQ;AAAA;;AACP,oCAAiB,KAAKH,KAAL,CAAWI,IAA5B,EAAkC,UAACC,gBAAD,EAAoB;AACpD,eAAKC,QAAL,CAAc;AACZJ,oBAASG,gBADG;AAEZF,oBAAS;AAFG,SAAd;AAID,OALD;AAMD;;;gDAE0B;AACzB,WAAKI,OAAL;AACD;;;0CAEqBC,S,EAAUC,S,EAAU;AACxC,UAAGA,UAAUP,QAAV,KAAqBQ,SAArB,IAAkC,KAAKT,KAAL,CAAWC,QAAX,KAAsBQ,SAA3D,EAAqE;AACnE,eAAO,IAAP;AACD,OAFD,MAGK,IAAGD,UAAUP,QAAV,CAAmBS,MAAnB,KAA4B,KAAKV,KAAL,CAAWC,QAAX,CAAoBS,MAAnD,EAA0D;AAC7D,eAAO,IAAP;AACD;AACD,aAAO,KAAP;AACD;;;6BAGQC,E,EAAI;AACX,UAAI,CAACC,YAAL,EAAmB;AACjBC,cAAM,oEAAN;AACA;AACD;;AAED,UAAID,aAAaE,UAAb,KAA4B,SAAhC,EACEF,aAAaG,iBAAb,GADF,KAEK;AACH,aAAKV,QAAL,CAAc;AACZH,oBAAS;AADG,SAAd;AAGA,YAAIc,eAAe,IAAIJ,YAAJ,CAAiB,QAAjB,EAA2B;AAC5CK,gBAAM,+DADsC;AAE5CC,gBAAM;AAFsC,SAA3B,CAAnB;AAIAF,qBAAaG,OAAb,GAAuB,UAACC,KAAD,EAAS;AAC9BA,gBAAMC,cAAN;AACAD,gBAAME,MAAN,CAAaC,KAAb;AACA,mCAAYC,IAAZ,CAAiB,WAAjB;AACAb;AACD,SALD;AAMD;AACF;;;6BAIO;AAAA;;AACN,UAAG,KAAKX,KAAL,CAAWC,QAAX,CAAoBS,MAApB,KAA+B,CAAlC,EAAoC;AAClC,eACE;AAAA;AAAA,YAAK,WAAU,kBAAf,EAAkC,MAAK,OAAvC;AAAA;AAGE;AAAA;AAAA,cAAM,IAAG,cAAT;AAAwB;AAAA;AAAA;AAAA;AAAA;AAAxB;AAHF,SADF;AAOD;AACD,aACE;AAAA;AAAA;AACG,aAAKV,KAAL,CAAWC,QAAX,CAAoBwB,GAApB,CAAwB,UAACC,gBAAD,EAAoB;AAC3C,iBAAO,4DAAkB,KAAKA,iBAAiBC,GAAxC,EAA6C,MAAMD,gBAAnD,EAAqE,aAAa,OAAK3B,KAAL,CAAWI,IAA7F,GAAP;AACD,SAFA;AADH,OADF;AAOD;;;wCAEkB;AAAA;;AACjB,WAAKG,OAAL;AACA,0BAAOsB,EAAP,CAAU,aAAV,EAAwB,YAAI;AAC1B,YAAG,CAAC,OAAK5B,KAAL,CAAWE,QAAf,EAAwB;AACtB,iBAAK2B,QAAL,CAAc,YAAI;AAChB,mBAAKvB,OAAL;AACD,WAFD;AAGD;AACF,OAND;AAOD;;;;EAzFuC,gBAAMwB,S;;kBAA3BhC,Y","file":"activityFeed.js","sourceRoot":"C:/Users/Vincent/Desktop/wemeet/client","sourcesContent":["import React from 'react';\r\nimport ActivityFeedItem from './activityFeedItem';\r\nimport {getAllActivities} from '../server';\r\nimport {Link} from \"react-router\";\r\nimport {socket} from '../credentials';\r\nimport {hashHistory} from 'react-router';\r\nvar debug = require('react-debug');\r\n\r\nexport default class ActivityFeed extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state= {\r\n      contents: [],\r\n      notified:false\r\n    }\r\n  }\r\n\r\n  getData(){\r\n    getAllActivities(this.props.user, (activityFeedData)=>{\r\n      this.setState({\r\n        contents:activityFeedData,\r\n        notified:false\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(){\r\n    this.getData();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps,nextState){\r\n    if(nextState.contents===undefined || this.state.contents===undefined){\r\n      return true;\r\n    }\r\n    else if(nextState.contents.length!==this.state.contents.length){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  notifyMe(cb) {\r\n    if (!Notification) {\r\n      alert('Desktop notifications not available in your browser. Try Chromium.');\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission !== \"granted\")\r\n      Notification.requestPermission();\r\n    else {\r\n      this.setState({\r\n        notified:true\r\n      });\r\n      var notification = new Notification('WeMeet', {\r\n        icon: 'https://www.w1meet.com/img/logo/mipmap-xxhdpi/ic_launcher.png',\r\n        body: \"Hey there! You have new activities\"\r\n      });\r\n      notification.onclick = (event)=>{\r\n        event.preventDefault();\r\n        event.target.close();\r\n        hashHistory.push('/activity');\r\n        cb();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    if(this.state.contents.length === 0){\r\n      return(\r\n        <div className=\"alert alert-info\" role=\"alert\">\r\n          No one has posted any activities yet.\r\n          Post your first activity\r\n          <Link to=\"postactivity\"><strong> here</strong></Link>\r\n        </div>\r\n      );\r\n    }\r\n    return(\r\n      <div>\r\n        {this.state.contents.map((activityFeedItem)=>{\r\n          return <ActivityFeedItem key={activityFeedItem._id} data={activityFeedItem} currentUser={this.props.user}/>\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getData();\r\n    socket.on('newActivity',()=>{\r\n      if(!this.state.notified){\r\n        this.notifyMe(()=>{\r\n          this.getData();\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n"]}