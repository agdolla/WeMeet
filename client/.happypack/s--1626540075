'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('../server');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var moment = require('moment');

var ProfileRecentPostItem = function (_React$Component) {
  _inherits(ProfileRecentPostItem, _React$Component);

  function ProfileRecentPostItem(props) {
    _classCallCheck(this, ProfileRecentPostItem);

    var _this = _possibleConstructorReturn(this, (ProfileRecentPostItem.__proto__ || Object.getPrototypeOf(ProfileRecentPostItem)).call(this, props));

    _this.state = props.data;
    return _this;
  }

  _createClass(ProfileRecentPostItem, [{
    key: 'handleLikeClick',
    value: function handleLikeClick(e) {
      var _this2 = this;

      e.preventDefault();

      if (e.button === 0) {
        var cb = function cb(likeCounter) {
          _this2.setState({ likeCounter: likeCounter });
        };

        if (!this.didUserLike(this.props.currentUser)) {
          (0, _server.likePost)(this.state._id, this.props.currentUser, cb);
        } else {
          (0, _server.unLikePost)(this.state._id, this.props.currentUser, cb);
        }
      }
    }
  }, {
    key: 'didUserLike',
    value: function didUserLike(user) {
      var likeCounter = this.state.likeCounter;

      for (var i = 0; i < likeCounter.length; i++) {
        if (likeCounter[i]._id === user) return true;
      }
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var data = this.state;
      var contents;
      switch (data.type) {
        case "general":
          contents = data.contents;
          break;
        default:
          throw new Error("Unknown FeedItem: " + data.type);
      }

      var img = _react2.default.createElement('img', { src: contents.img, width: '100%', height: '100%', alt: '' });

      if (contents.img === null) img = null;

      var time = moment(contents.postDate).calendar();

      if (new Date().getTime() - contents.postDate <= 86400000) time = moment(contents.postDate).fromNow();

      return _react2.default.createElement(
        'div',
        { className: 'panel panel-default' },
        _react2.default.createElement(
          'div',
          { className: 'panel-body' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col-md-2' },
              _react2.default.createElement('img', { src: contents.author.avatar, height: '50px', alt: '' })
            ),
            _react2.default.createElement(
              'div',
              { className: 'col-md-10' },
              _react2.default.createElement(
                'div',
                { className: 'media' },
                contents.author.fullname,
                _react2.default.createElement('br', null),
                time
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'row content' },
            _react2.default.createElement(
              'div',
              { className: 'panel-body' },
              _react2.default.createElement(
                'div',
                { className: 'media' },
                _react2.default.createElement(
                  'div',
                  { className: 'media-body' },
                  _react2.default.createElement(
                    'p',
                    null,
                    contents.text
                  )
                )
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'panel-body' },
              _react2.default.createElement(
                'center',
                null,
                img
              )
            ),
            _react2.default.createElement(
              'div',
              { className: 'panel-footer' },
              _react2.default.createElement(
                'div',
                { className: 'row' },
                _react2.default.createElement(
                  'div',
                  { className: 'col-md-12' },
                  _react2.default.createElement(
                    'a',
                    { href: '#', onClick: function onClick(e) {
                        return _this3.handleLikeClick(e);
                      } },
                    _react2.default.createElement('span', { className: 'glyphicon glyphicon-heart' }),
                    data.likeCounter.length
                  ),
                  _react2.default.createElement('span', { className: 'glyphicon glyphicon-comment' }),
                  data.comments.length
                )
              )
            )
          )
        )
      );
    }
  }]);

  return ProfileRecentPostItem;
}(_react2.default.Component);

exports.default = ProfileRecentPostItem;