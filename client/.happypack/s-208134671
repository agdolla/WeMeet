'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _React = require('React');

var _React2 = _interopRequireDefault(_React);

var _reactRouter = require('react-router');

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// var debug = require('react-debug');

var NavChatItem = function (_React$Component) {
  _inherits(NavChatItem, _React$Component);

  function NavChatItem(props) {
    _classCallCheck(this, NavChatItem);

    var _this = _possibleConstructorReturn(this, (NavChatItem.__proto__ || Object.getPrototypeOf(NavChatItem)).call(this, props));

    _this.state = {
      online: false
    };
    return _this;
  }

  _createClass(NavChatItem, [{
    key: 'handleClick',
    value: function handleClick(e) {
      e.preventDefault();
      this.props.switchUser(this.props.data._id);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _React2.default.createElement(
        'li',
        { className: 'list-group-item', onClick: function onClick(e) {
            return _this2.handleClick(e);
          } },
        _React2.default.createElement(
          'div',
          { className: 'media' },
          _React2.default.createElement(
            'div',
            { className: 'media-left' },
            _React2.default.createElement(
              _reactRouter.Link,
              { to: "profile/" + this.props.data._id },
              _React2.default.createElement('img', { className: 'media-object', src: this.props.data.avatar, alt: 'image', height: '45', width: '45' })
            )
          ),
          _React2.default.createElement(
            'div',
            { className: 'media-body' },
            _React2.default.createElement(
              'div',
              { className: 'media-heading' },
              _React2.default.createElement(
                'div',
                { className: 'media' },
                _React2.default.createElement(
                  'div',
                  { className: 'media-left media-body' },
                  _React2.default.createElement(
                    'font',
                    { size: '3' },
                    this.props.data.fullname
                  )
                ),
                _React2.default.createElement(
                  'div',
                  { className: 'media-body text-right', style: {
                      'paddingRight': '0px'
                    } },
                  _React2.default.createElement('i', { className: 'fa fa-circle', 'aria-hidden': 'true', style: {
                      color: this.props.data.online ? 'green' : 'grey'
                    } })
                )
              )
            ),
            _React2.default.createElement(
              'font',
              { size: '2', color: 'grey' },
              this.props.lastmessage === undefined || Object.keys(this.props.lastmessage).length === 0 ? "" : this.props.lastmessage.text.length > 35 ? this.props.lastmessage.text.substring(0, 35) + "..." : this.props.lastmessage.text,
              _React2.default.createElement(
                'span',
                { className: "label label-danger " + (0, _util.hideElement)(this.props.lastmessage === undefined || Object.keys(this.props.lastmessage).length === 0 || this.props.lastmessage.isread || this.props.lastmessage.sender === this.props.currentUser),
                  style: { marginLeft: 5 } },
                'New'
              )
            )
          )
        )
      );
    }
  }]);

  return NavChatItem;
}(_React2.default.Component);

exports.default = NavChatItem;