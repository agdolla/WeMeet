'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _navbar = require('../component/navbar');

var _navbar2 = _interopRequireDefault(_navbar);

var _server = require('../server');

var _friendItem = require('./friendItem');

var _friendItem2 = _interopRequireDefault(_friendItem);

var _reactRouter = require('react-router');

var _reactAvatarCropper = require('react-avatar-cropper');

var _reactAvatarCropper2 = _interopRequireDefault(_reactAvatarCropper);

var _util = require('../util');

var _credentials = require('../credentials');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = require('react-debug');

var PostActivity = function (_React$Component) {
  _inherits(PostActivity, _React$Component);

  function PostActivity(props) {
    _classCallCheck(this, PostActivity);

    var _this = _possibleConstructorReturn(this, (PostActivity.__proto__ || Object.getPrototypeOf(PostActivity)).call(this, props));

    _this.state = {
      userData: {},
      type: "",
      title: "",
      img: null,
      cropperOpen: false,
      startTime: '',
      endTime: '',
      description: "",
      location: "",
      detail: "",
      alert: false,
      sizealert: false,
      fileWrongType: false,
      invitedlist: [],
      reset: false
    };
    return _this;
  }

  _createClass(PostActivity, [{
    key: 'handleFile',
    value: function handleFile(e) {
      var _this2 = this;

      e.preventDefault();
      // Read the first file that the user selected (if the user selected multiple
      // files, we ignore the others).
      var reader = new FileReader();
      var file = e.target.files[0];
      if (!file.type.match('image.*')) {
        this.setState({ fileWrongType: true });
      } else if (file.size < 1100000) {
        // Called once the browser finishes loading the image.
        reader.onload = function (upload) {
          _this2.setState({
            img: upload.target.result,
            cropperOpen: true
          });
        };
        reader.readAsDataURL(file);
        this.setState({ sizealert: false });
        this.setState({ fileWrongType: false });
      } else {
        this.setState({ sizealert: true });
      }
    }
  }, {
    key: 'handleFileClick',
    value: function handleFileClick(e) {
      e.target.value = null;
    }
  }, {
    key: 'handleInviteUser',
    value: function handleInviteUser(e) {
      var invitedUsers = this.state.invitedlist;
      invitedUsers.push(e);
      this.setState({
        invitedlist: invitedUsers,
        reset: false
      });
    }
  }, {
    key: 'handleRequestHide',
    value: function handleRequestHide(e) {
      e.preventDefault();
      this.setState({
        cropperOpen: false,
        img: null
      });
    }
  }, {
    key: 'handleCrop',
    value: function handleCrop(dataURI) {
      this.setState({
        cropperOpen: false,
        img: dataURI
      });
    }
  }, {
    key: 'getData',
    value: function getData() {
      var _this3 = this;

      (0, _server.getUserData)(this.props.user, function (userData) {
        _this3.setState({
          userData: userData
        });
      });
    }
  }, {
    key: 'handleSubmit',
    value: function handleSubmit(e) {
      var _this4 = this;

      e.preventDefault();
      if (this.state.type !== "------Select a Activity Type-----" && this.state.title.trim() !== "" && this.state.startTime.trim() !== "" && this.state.endTime.trim() !== "" && this.state.description.trim() !== "" && this.state.location.trim() !== "" && this.state.detail.trim() !== "") {
        //activity created succesfully
        var id;
        (0, _server.createActivity)(this.state, function (data) {
          id = data._id;
          _credentials.socket.emit('newActivity', { authorization: (0, _credentials.getToken)(), user: _this4.props.user });
          //for (var i=0;i<this.state.invitedlist.length;i++)
          _this4.state.invitedlist.map(function (targetid) {
            (0, _server.sendInviteActivityRequest)(_this4.props.user, targetid, data._id, function (success) {
              if (success) {
                _credentials.socket.emit('notification', {
                  authorization: (0, _credentials.getToken)(),
                  sender: _this4.props.user,
                  target: targetid
                });
              }
            });
          });
        });

        //handle invited userData
      } else {
        this.setState({ alert: true });
      }
      _reactRouter.hashHistory.push('/activity');
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.getData();
    }
  }, {
    key: 'handlereset',
    value: function handlereset(e) {
      e.preventDefault();
      this.setState({
        invitedlist: [],
        reset: true
      });
    }
  }, {
    key: 'handleInvite',
    value: function handleInvite(e) {
      e.preventDefault();
      this.setState({
        reset: false
      });
    }
  }, {
    key: 'handleTitle',
    value: function handleTitle(e) {
      e.preventDefault();
      this.setState({
        title: e.target.value
      });
    }
  }, {
    key: 'handleStartTime',
    value: function handleStartTime(e) {
      e.preventDefault();
      this.setState({
        startTime: e.target.value
      });
    }
  }, {
    key: 'handleEndTime',
    value: function handleEndTime(e) {
      e.preventDefault();
      this.setState({
        endTime: e.target.value
      });
    }
  }, {
    key: 'handleLocation',
    value: function handleLocation(e) {
      e.preventDefault();
      this.setState({
        location: e.target.value
      });
    }
  }, {
    key: 'handleDetail',
    value: function handleDetail(e) {
      e.preventDefault();
      this.setState({
        detail: e.target.value
      });
    }
  }, {
    key: 'handleEvent',
    value: function handleEvent(e) {
      e.preventDefault();
      this.setState({
        type: e.target.value
      });
    }
  }, {
    key: 'handleDescription',
    value: function handleDescription(e) {
      e.preventDefault();
      this.setState({
        description: e.target.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this5 = this;

      return _react2.default.createElement(
        'div',
        { className: 'postactivity', style: { marginTop: '70' } },
        this.state.cropperOpen && _react2.default.createElement(_reactAvatarCropper2.default, {
          onRequestHide: function onRequestHide(e) {
            return _this5.handleRequestHide(e);
          },
          cropperOpen: this.state.cropperOpen,
          onCrop: function onCrop(e) {
            return _this5.handleCrop(e);
          },
          image: this.state.img,
          width: 1200,
          height: 500
        }),
        _react2.default.createElement(_navbar2.default, { user: this.state.userData }),
        _react2.default.createElement(
          'div',
          { className: 'container' },
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col-md-7 col-md-offset-2' },
              _react2.default.createElement(
                'h4',
                null,
                _react2.default.createElement(
                  'span',
                  { style: {
                      "marginRight": '10'
                    } },
                  _react2.default.createElement('i', { className: 'glyphicon glyphicon-list-alt', 'aria-hidden': 'true' })
                ),
                'Create Activity'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'row' },
            _react2.default.createElement(
              'div',
              { className: 'col-md-7 col-md-offset-2 infos' },
              _react2.default.createElement(
                'div',
                { className: 'panel panel-default personal-info-1' },
                _react2.default.createElement(
                  'div',
                  { className: 'panel-heading' },
                  _react2.default.createElement(
                    'div',
                    { className: 'row' },
                    _react2.default.createElement(
                      'div',
                      { className: 'col-md-12' },
                      _react2.default.createElement(
                        'h4',
                        null,
                        'Activity Info'
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: (0, _util.hideElement)(!this.state.alert) },
                        _react2.default.createElement(
                          'div',
                          { className: 'alert alert-warning alert-dismissible', role: 'alert' },
                          _react2.default.createElement(
                            'strong',
                            null,
                            'Please fill in blanks'
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: (0, _util.hideElement)(!this.state.sizealert) },
                        _react2.default.createElement(
                          'div',
                          { className: 'alert alert-warning alert-dismissible', role: 'alert' },
                          _react2.default.createElement(
                            'strong',
                            null,
                            'File is too large'
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: "alert alert-warning alert-dismissible " + (0, _util.hideElement)(!this.state.fileWrongType), role: 'alert' },
                        _react2.default.createElement(
                          'strong',
                          null,
                          'File is not a image file'
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-12' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('input', { type: 'text', id: '', className: 'form-control',
                              value: this.state.title,
                              onChange: function onChange(e) {
                                return _this5.handleTitle(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { htmlFor: 'form1', className: '' },
                              'Title'
                            )
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-6' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement(
                              'h5',
                              null,
                              'Start Time'
                            ),
                            _react2.default.createElement('input', { type: 'datetime-local', id: '', className: 'form-control',
                              value: this.state.startTime,
                              onChange: function onChange(e) {
                                return _this5.handleStartTime(e);
                              },
                              placeholder: 'this' })
                          )
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-6' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement(
                              'h5',
                              null,
                              'End Time'
                            ),
                            _react2.default.createElement('input', { type: 'datetime-local', id: '', className: 'form-control',
                              value: this.state.endTime,
                              onChange: function onChange(e) {
                                return _this5.handleEndTime(e);
                              } })
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-6' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('input', { type: 'text', id: '', className: 'form-control',
                              value: this.state.location,
                              onChange: function onChange(e) {
                                return _this5.handleLocation(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { htmlFor: 'form1', className: '' },
                              'Location'
                            )
                          )
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-6' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement(
                              'select',
                              { className: 'form-control select', value: this.state.type, onChange: function onChange(e) {
                                  return _this5.handleEvent(e);
                                } },
                              _react2.default.createElement(
                                'option',
                                null,
                                '------Select a Activity Type-----'
                              ),
                              _react2.default.createElement(
                                'option',
                                null,
                                'Event'
                              ),
                              _react2.default.createElement(
                                'option',
                                null,
                                'Entertainment'
                              ),
                              _react2.default.createElement(
                                'option',
                                null,
                                'Study'
                              )
                            )
                          )
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'row' },
                        _react2.default.createElement(
                          'div',
                          { className: 'col-md-12' },
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('textarea', { type: 'text', id: '', className: 'md-textarea',
                              value: this.state.description,
                              onChange: function onChange(e) {
                                return _this5.handleDescription(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { htmlFor: 'form7' },
                              'Description'
                            )
                          ),
                          _react2.default.createElement(
                            'div',
                            { className: 'md-form' },
                            _react2.default.createElement('textarea', { type: 'text', id: '', className: 'md-textarea',
                              value: this.state.detail,
                              onChange: function onChange(e) {
                                return _this5.handleDetail(e);
                              } }),
                            _react2.default.createElement(
                              'label',
                              { htmlFor: '' },
                              'Details'
                            )
                          )
                        )
                      )
                    )
                  ),
                  _react2.default.createElement(
                    'div',
                    { className: 'panel-footer' },
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col-md-6 nopadding' },
                        _react2.default.createElement(
                          'button',
                          { type: 'button', className: 'btn btn-blue-grey pull-Left nomargin', onClick: function onClick(e) {
                              return _this5.handleInvite(e);
                            }, name: 'button', 'data-toggle': 'modal', 'data-target': '#invitemodal' },
                          'Invite Friend'
                        ),
                        _react2.default.createElement(
                          'div',
                          { className: 'modal fade ', id: 'invitemodal', tabIndex: '-1', role: 'dialog', 'aria-labelledby': 'myModalLabel' },
                          _react2.default.createElement(
                            'div',
                            { className: 'modal-dialog', role: 'document' },
                            _react2.default.createElement(
                              'div',
                              { className: 'modal-content' },
                              _react2.default.createElement(
                                'div',
                                { className: 'modal-header' },
                                _react2.default.createElement(
                                  'button',
                                  { type: 'button', className: 'close', 'data-dismiss': 'modal', 'aria-label': 'Close' },
                                  _react2.default.createElement(
                                    'span',
                                    { 'aria-hidden': 'true' },
                                    '\xD7'
                                  )
                                ),
                                _react2.default.createElement(
                                  'h3',
                                  { className: 'modal-title' },
                                  'Invite friends'
                                )
                              ),
                              _react2.default.createElement(
                                'div',
                                { className: 'modal-body ', style: {
                                    "padding": '0'
                                  } },
                                _react2.default.createElement(
                                  'ul',
                                  { className: 'media-list' },
                                  this.state.userData.friends === undefined ? null : this.state.userData.friends.map(function (friend, i) {
                                    return _react2.default.createElement(_friendItem2.default, { data: friend, key: i, reset: _this5.state.reset, onInvite: function onInvite(e) {
                                        return _this5.handleInviteUser(e);
                                      } });
                                  })
                                )
                              ),
                              _react2.default.createElement(
                                'div',
                                { className: 'modal-footer', style: {
                                    'border': 'none'
                                  } },
                                _react2.default.createElement(
                                  'button',
                                  { type: 'button', className: 'btn btn-primary btn-blue-grey', onClick: function onClick(e) {
                                      return _this5.handlereset(e);
                                    } },
                                  'Reset'
                                ),
                                _react2.default.createElement(
                                  'button',
                                  { type: 'button', className: 'btn btn-default btn-blue-grey', 'data-dismiss': 'modal' },
                                  'Confirm'
                                )
                              )
                            )
                          )
                        ),
                        _react2.default.createElement(
                          'label',
                          { type: 'button', className: 'btn btn-blue-grey pull-left', name: 'button' },
                          'Upload activity header ',
                          _react2.default.createElement('input', { type: 'file', style: { "display": "none" },
                            onClick: function onClick(e) {
                              return _this5.handleFileClick(e);
                            }, onChange: function onChange(e) {
                              return _this5.handleFile(e);
                            } })
                        )
                      ),
                      _react2.default.createElement(
                        'div',
                        { className: 'col-md-6 nopadding' },
                        _react2.default.createElement(
                          'button',
                          { type: 'button', className: 'btn btn-blue-grey pull-right nomargin', onClick: function onClick(e) {
                              return _this5.handleSubmit(e);
                            } },
                          'Submit'
                        )
                      )
                    ),
                    _react2.default.createElement(
                      'div',
                      { className: 'row' },
                      _react2.default.createElement(
                        'div',
                        { className: 'col-md-12' },
                        _react2.default.createElement('img', { src: this.state.img, className: (0, _util.hideElement)(this.state.cropperOpen), width: '100%' })
                      )
                    )
                  )
                )
              )
            )
          )
        )
      );
    }
  }]);

  return PostActivity;
}(_react2.default.Component);

exports.default = PostActivity;