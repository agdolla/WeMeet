'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _React = require('React');

var _React2 = _interopRequireDefault(_React);

var _server = require('../server');

var _reactRouter = require('react-router');

var _chatentry = require('./chatentry');

var _chatentry2 = _interopRequireDefault(_chatentry);

var _chatrightbubble = require('./chatrightbubble');

var _chatrightbubble2 = _interopRequireDefault(_chatrightbubble);

var _chatleftbubble = require('./chatleftbubble');

var _chatleftbubble2 = _interopRequireDefault(_chatleftbubble);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import ReactDOM from 'react-dom';


// var debug = require('react-debug');

var ChatWindow = function (_React$Component) {
    _inherits(ChatWindow, _React$Component);

    function ChatWindow(props) {
        _classCallCheck(this, ChatWindow);

        var _this = _possibleConstructorReturn(this, (ChatWindow.__proto__ || Object.getPrototypeOf(ChatWindow)).call(this, props));

        _this.state = {
            targetUser: {},
            message: props.message,
            load: false
        };
        return _this;
    }

    _createClass(ChatWindow, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.getData();
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            if (!this.state.load) this.refs.chatwindow.scrollTop = this.refs.chatwindow.scrollHeight;
        }
    }, {
        key: 'handleLoad',
        value: function handleLoad(e) {
            var _this2 = this;

            e.preventDefault();
            this.setState({
                load: true
            }, function () {
                _this2.props.onLoad(e);
            });
        }
    }, {
        key: 'handlePostMessage',
        value: function handlePostMessage(text) {
            this.props.onPost(text);
        }
    }, {
        key: 'getData',
        value: function getData() {
            var _this3 = this;

            if (!this.props.target == "") {
                (0, _server.getUserData)(this.props.target, function (userData) {
                    _this3.setState({ targetUser: userData });
                });
            }
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            var _this4 = this;

            if (!this.props.target == "") {
                (0, _server.getUserData)(this.props.target, function (userData) {
                    _this4.setState({
                        targetUser: userData,
                        message: nextProps.message
                    });
                });
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this5 = this;

            return _React2.default.createElement(
                'div',
                { className: 'col-md-7 col-sm-7 col-xs-7 chat-right' },
                _React2.default.createElement(
                    'div',
                    { className: 'panel panel-dafault chatwindow' },
                    _React2.default.createElement(
                        'div',
                        { className: 'panel-heading' },
                        _React2.default.createElement(
                            'div',
                            { className: 'media' },
                            _React2.default.createElement(
                                'div',
                                { className: 'media-left' },
                                _React2.default.createElement(
                                    _reactRouter.Link,
                                    { to: "profile/" + this.state.targetUser._id },
                                    _React2.default.createElement('img', { className: 'media-object', src: this.state.targetUser.avatar, alt: 'image', height: '45', width: '45' })
                                )
                            ),
                            _React2.default.createElement(
                                'div',
                                { className: 'media-body' },
                                _React2.default.createElement(
                                    'div',
                                    { className: 'media-heading' },
                                    _React2.default.createElement(
                                        'div',
                                        { className: 'media' },
                                        _React2.default.createElement(
                                            'div',
                                            { className: 'media-left media-body' },
                                            _React2.default.createElement(
                                                'font',
                                                { size: '3' },
                                                this.state.targetUser.fullname
                                            )
                                        )
                                    )
                                ),
                                _React2.default.createElement(
                                    'font',
                                    { size: '2', color: 'grey ' },
                                    this.state.targetUser.description
                                )
                            )
                        )
                    ),
                    _React2.default.createElement(
                        'div',
                        { className: 'panel-body', ref: 'chatwindow' },
                        _React2.default.createElement(
                            'div',
                            { style: { textAlign: "center" } },
                            _React2.default.createElement(
                                'a',
                                { href: '', onClick: function onClick(e) {
                                        return _this5.handleLoad(e);
                                    } },
                                this.props.btnText
                            )
                        ),
                        this.state.message === undefined ? 0 : this.state.message.map(function (msg, i) {
                            if (msg.sender._id === _this5.props.curUser) {
                                return _React2.default.createElement(_chatrightbubble2.default, { key: i, data: msg });
                            } else {
                                return _React2.default.createElement(_chatleftbubble2.default, { key: i, data: msg });
                            }
                        })
                    ),
                    _React2.default.createElement(_chatentry2.default, { onPost: function onPost(message) {
                            return _this5.handlePostMessage(message);
                        } })
                )
            );
        }
    }]);

    return ChatWindow;
}(_React2.default.Component);

exports.default = ChatWindow;