{"version":3,"sources":["app\\chat\\navbody.js"],"names":["NavBody","props","state","newProps","setState","friendId","filterResult","data","sessions","filter","session","users","indexOf","length","undefined","lastmessage","alert","friends","map","friend","_id","activeFriend","switchUser","getLastmessage","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,O;;;AAEjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kHACTA,KADS;;AAEf,UAAKC,KAAL,GAAaD,KAAb;AAFe;AAGlB;;;;8CAEyBE,Q,EAAS;AACjC,WAAKC,QAAL,CAAcD,QAAd;AACD;;;mCAEcE,Q,EAAS;AACtB,UAAIC,eAAe,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,QAAhB,CAAyBC,MAAzB,CAAgC,UAACC,OAAD,EAAa;AAC9D,YAAGA,QAAQC,KAAR,CAAcC,OAAd,CAAsBP,QAAtB,MAAkC,CAAC,CAAtC,EAAwC;AACtC,iBAAO,IAAP;AACD;AACD,eAAO,KAAP;AACD,OALkB,CAAnB;;AAOA,UAAGC,aAAaO,MAAb,KAAsB,CAAzB,EAA2B;AACzB,eAAOC,SAAP;AACD,OAFD,MAGI;AACF,eAAOR,aAAa,CAAb,EAAgBS,WAAvB;AACD;AAEF;;;6BAEQ;AAAA;;AACP,UAAIC,QACH;AAAA;AAAA,UAAK,WAAU,kBAAf,EAAkC,MAAK,OAAvC;AAAA;AAAA,OADD;;AAKE,aACI;AAAA;AAAA,UAAK,WAAU,YAAf;AACI;AAAA;AAAA,YAAI,WAAU,oBAAd,EAAmC,OAAO;AACtC,8BAAgB;AADsB,aAA1C;AAIE,eAAKd,KAAL,CAAWK,IAAX,KAAoBO,SAApB,GAAgC,IAAhC,GACC,KAAKZ,KAAL,CAAWK,IAAX,CAAgBU,OAAhB,KAA0BH,SAA1B,IAAuC,KAAKZ,KAAL,CAAWK,IAAX,CAAgBU,OAAhB,CAAwBJ,MAAxB,KAAiC,CAAxE,GAA4EG,KAA5E,GAAoF,KAAKd,KAAL,CAAWK,IAAX,CAAgBU,OAAhB,CAAwBC,GAAxB,CAA4B,UAACC,MAAD,EAAU;AACzH,mBAAO;AACL,mBAAKA,OAAOC,GADP;AAEL,oBAAMD,MAFD;AAGL,4BAAgB,OAAKlB,KAAL,CAAWoB,YAHtB;AAIL,2BAAa,OAAKnB,KAAL,CAAWK,IAAX,CAAgBa,GAJxB;AAKL,0BAAY,OAAKnB,KAAL,CAAWqB,UALlB;AAML,2BAAa,OAAKC,cAAL,CAAoBJ,OAAOC,GAA3B,CANR,GAAP;AAOC,WARkF;AALvF;AADJ,OADJ;AAoBH;;;;EAtDgC,gBAAMI,S;;kBAAtBxB,O","file":"navbody.js","sourceRoot":"C:/Users/Vincent/Desktop/wemeet/client","sourcesContent":["import React from 'React';\r\nimport NavChatItem from './navchatitem';\r\n\r\nexport default class NavBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = props;\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n      this.setState(newProps);\r\n    }\r\n\r\n    getLastmessage(friendId){\r\n      var filterResult = this.state.data.sessions.filter((session) => {\r\n        if(session.users.indexOf(friendId)!==-1){\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n      if(filterResult.length===0){\r\n        return undefined;\r\n      }\r\n      else{\r\n        return filterResult[0].lastmessage;\r\n      }\r\n\r\n    }\r\n\r\n    render() {\r\n      var alert =\r\n      (<div className=\"alert alert-info\" role=\"alert\">\r\n          You don't have any friends yet.\r\n        </div>);\r\n\r\n        return (\r\n            <div className=\"panel-body\">\r\n                <ul className=\"list-group friends\" style={{\r\n                    'marginBottom': '0'\r\n                }}>\r\n                {\r\n                  this.state.data === undefined ? null:\r\n                  (this.state.data.friends===undefined || this.state.data.friends.length===0 ? alert : this.state.data.friends.map((friend)=>{\r\n                    return <NavChatItem\r\n                      key={friend._id}\r\n                      data={friend}\r\n                      activeFriend = {this.props.activeFriend}\r\n                      currentUser={this.state.data._id}\r\n                      switchUser={this.props.switchUser}\r\n                      lastmessage={this.getLastmessage(friend._id)}/>\r\n                    }))\r\n                  }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n"]}